"^(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'(-?(?:0|[1-9]\\d*))(\\.\\d+)?([eE][-+]?\\d+)?'	55,113,233,287,288,302,323,340,355,383,422,436,507,510,580,594,602,622,627,729,752,759,780,849,852,866,878,927,935,961,989,1003,1004,1007,1012,1015,1025,1032,1033,1054,1078,1086,1087,1122,1158,1184,1194,1199,1221,1247,1269,1328,1469,1495,1498,1501,1509,1511,1517,1580,1634
'\\s*,\\s*'	82,89,113,241,251,302,323,355,422,433,526,533,796,849,866,873,878,927,990,1003,1004,1007,1012,1015,1025,1032,1046,1054,1074,1075,1086,1158,1170,1184,1198,1199,1202,1247,1248,1249,1263,1290,1300,1322,1415,1443,1469,1488,1491,1495,1517,1555,1569,1580,1594,1634,1642
'.*rlen=([0-9]+)'	271,279,280,282,318,346,367,406,442,495,569,586,590,601,652,667,751,762,791,799,848,855,876,937,952,1018,1041,1098,1103,1105,1106,1116,1131,1167,1206,1236,1237,1306,1333,1334,1356,1360,1370,1390,1440,1467,1514,1556,1562,1581,1599,1610,1622,1624,1626,1627,1643
'<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'	271,279,280,282,318,346,367,406,442,495,569,586,590,601,652,667,751,762,791,799,848,855,876,937,952,1018,1041,1098,1103,1105,1106,1116,1131,1167,1206,1236,1237,1306,1333,1334,1356,1360,1370,1390,1440,1467,1514,1556,1562,1581,1599,1610,1622,1624,1626,1627,1643
'^\\s*$'	12,18,31,182,200,241,287,296,322,339,407,412,433,467,498,505,534,557,602,633,692,738,747,759,819,852,927,958,961,1003,1025,1054,1087,1088,1199,1202,1221,1223,1235,1249,1300,1348,1412,1420,1466,1509,1511,1580
'[a-zA-Z][-_.:a-zA-Z0-9]*'	22,38,55,60,64,65,72,94,126,147,181,190,220,225,287,325,340,454,472,510,527,582,602,622,666,683,691,707,774,790,881,915,927,928,1003,1068,1122,1150,1169,1199,1247,1269,1469,1498,1509,1557,1597
' *$'	12,82,89,287,302,323,355,412,422,602,662,747,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'(?m)^\\s*?$'	12,82,89,287,302,323,355,412,422,602,662,759,774,787,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'^[ ]*(#.*)?$'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'(^|.*:)\\s*\\w*("|\')'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
"\n        # Grab the traceback header.  Different versions of Python have\n        # said different things on the first traceback line.\n        ^(?P<hdr> Traceback\\ \\(\n            (?: most\\ recent\\ call\\ last\n            |   innermost\\ last\n            ) \\) :\n        )\n        \\s* $                # toss trailing whitespace on the header.\n        (?P<stack> .*?)      # don't blink: absorb stuff until...\n        ^ (?P<msg> \\w+ .*)   #     a line *starts* with alphanum.\n        "	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        '	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'[^:]*:'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'(?m)^[ ]*(?=\n)'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?'	147,181,220,225,278,287,296,323,355,432,436,510,559,602,774,814,819,925,927,936,995,1003,1068,1104,1150,1211,1247,1263,1269,1301,1328,1366,1439,1469,1495,1498,1509,1536,1555,1580
'coding[:=]\\s*([-\\w.]+)'	101,147,181,251,302,323,355,422,634,757,842,849,866,878,992,1004,1012,1054,1086,1087,1104,1158,1184,1257,1263,1290,1386,1415,1427,1436,1469,1495,1517,1536,1580,1594,1621,1634
'(<[^<>]*)/>'	22,38,55,60,64,65,72,94,126,225,273,287,340,472,510,527,602,683,691,707,774,790,881,928,1068,1122,1150,1169,1199,1269,1300,1469,1498,1509,1557
'<!\\s+([^<>]*)>'	22,38,55,60,64,65,72,94,126,225,273,287,340,472,510,527,602,683,691,707,774,790,881,928,1068,1122,1150,1169,1199,1269,1300,1469,1498,1509,1557
'.*?\\n'	12,113,147,181,251,287,412,498,538,602,642,747,759,776,852,961,971,975,1000,1054,1087,1203,1221,1267,1288,1495,1509,1511,1555,1580,1621
'\\s*'	119,182,206,241,416,422,592,747,852,896,994,1007,1015,1025,1032,1184,1185,1215,1248,1249,1301,1403,1423,1488,1511,1517,1560,1580,1598,1644
'<.*?>'	34,110,126,147,163,181,220,345,383,391,485,519,539,557,872,887,927,977,1003,1050,1074,1087,1097,1113,1181,1223,1420,1488
'^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'	22,38,55,60,64,65,72,94,126,220,340,472,527,683,691,707,790,881,928,1068,1122,1150,1169,1199,1269,1469,1498,1557
'.*'	257,302,322,340,467,505,534,542,662,849,873,878,965,1004,1012,1086,1158,1243,1248,1319,1466,1488,1495,1557,1580,1592
'//.*'	12,306,322,412,464,467,505,534,592,636,759,852,961,1007,1054,1087,1125,1221,1246,1301,1404,1466,1511,1522,1540,1580
'^(\\s*def\\s)|(.*(?<!\\w)lambda(:|\\s))|^(\\s*@)'	12,287,381,412,422,602,747,759,807,852,961,992,1054,1087,1104,1221,1257,1386,1415,1469,1509,1511,1517,1536,1580
'^(?:\\s*(?:,\\s*)?([^ \\t\\r\\n=]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\\\\\"]|\\\\.)*?(?=\\")|(?<!\\")[^ \\t\\r\\n,]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'^(?:\\s*(?:,\\s*)?([^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\0-\\x08\\x0A-\\x1f\\x7f-\\xff\\\\\\"]|\\\\[\\0-\\x7f])*?(?=\\")|(?<!\\")[^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'(\\s*){\\s*$'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1464,1493,1511,1580
'(\\s*)}\\s*$'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1464,1493,1511,1580
'^\\s*(\\w+)\\s*'	302,323,355,391,422,682,849,866,872,878,884,1012,1054,1086,1087,1158,1263,1495,1517,1580,1594,1634
'^\\.\\s*(\\w+)\\s*'	302,323,355,391,422,682,849,866,872,878,884,1012,1054,1086,1087,1158,1263,1495,1517,1580,1594,1634
'^\\[\\s*(\\w+)\\s*\\]\\s*'	302,323,355,391,422,682,849,866,872,878,884,1012,1054,1086,1087,1158,1263,1495,1517,1580,1594,1634
'^(?P<prefix>[a-z]+)://(?P<suffix>.*)$'	302,323,355,391,422,682,849,866,872,878,884,1012,1054,1086,1087,1158,1263,1495,1517,1580,1594,1634
'(\\w*)'	412,587,618,759,793,818,852,896,961,1015,1032,1080,1172,1221,1266,1296,1428,1464,1493,1511,1580
'\\(.*?\\)'	82,89,302,323,355,422,849,866,878,879,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
"(^|\\W)`(.*?)'(\\W|$)"	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1493,1511
'(\\w+(\\.\\w+)*)\\.(\\w*)'	12,101,287,412,602,640,642,662,759,776,852,961,971,1054,1087,1115,1203,1221,1509,1511,1580
'\\s*(\\w*|\\w(\\w|\\.)*\\w)\\s*::'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1493,1511
'^#define\\s{1,}(\\w{1,}_H)\\s{1,}<(.*)>'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1493,1511
'^\\s*(?:var)?char\\s*\\(\\s*(\\d+)\\s*\\)\\s*$'	82,89,302,323,355,422,849,866,878,923,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'^\\s*plural$'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'^\\s*endblocktrans$'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'(<a [^>]*?)target=[^\\s>]+'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'_\\(((?:".*?")|(?:\'.*?\'))\\)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'\\sCONSTRAINT `[^`]*` FOREIGN KEY \\(`([^`]*)`\\) REFERENCES `([^`]*)` \\(`([^`]*)`\\)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'<[^>]*?>'	82,89,302,323,355,403,422,582,849,866,878,1004,1074,1075,1184,1453,1495,1517,1634
'\\[(.*?)\\]'	251,422,662,800,1033,1104,1188,1257,1263,1290,1310,1386,1415,1517,1522,1536,1580,1594,1634
'/\\*.*?\\*/'	113,147,181,306,322,464,467,505,534,753,768,825,942,1007,1025,1322,1404,1466,1522
'<(/?)\\s*b\\s*>'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1184,1495,1517,1580,1634
'<(/?)\\s*i\\s*>'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1184,1495,1517,1580,1634
'(<!--.*?-->|<[^>]*>)'	96,113,147,181,251,252,487,639,1087,1104,1257,1349,1386,1415,1469,1495,1536,1555,1580
'\\$(\\w+|\\{[^}]*\\})'	12,251,287,381,412,422,602,662,759,800,852,961,1033,1054,1087,1221,1509,1511,1517
'\\s*\\['	171,487,498,602,662,1033,1045,1087,1257,1263,1381,1415,1469,1509,1536,1580,1594,1634
'--\\s*>'	12,43,287,330,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'\\s*(#.*)?$'	287,487,498,602,662,1007,1033,1087,1172,1257,1263,1415,1469,1509,1536,1580,1594,1634
'%\\(([^)]*)\\)s'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"^'''(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^"""(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^\\s*blocktrans(?:\\s+|$)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517
'[a-zA-Z][-_.a-zA-Z0-9]*\\s*'	12,43,287,330,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'	55,65,126,225,273,340,472,527,683,691,707,1122,1199,1269,1300,1469,1498,1557
"[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"	12,101,251,287,381,412,518,602,759,787,852,961,1054,1087,1221,1509,1511,1580
'[^"\\\\]*(?:\\\\.[^"\\\\]*)*"'	12,101,251,287,381,412,518,602,759,787,852,961,1054,1087,1221,1509,1511,1580
'(\\\'[^\\\']*\\\'|"[^"]*")\\s*'	12,43,287,330,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'^\\s*trans\\s+((?:".*?")|(?:\'.*?\'))\\s*'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517
'\n        \\$(?:\n          (?P<escaped>\\$)              |   # Two $ signs\n          (?P<named>[_a-z][_a-z0-9]*)  |   # $name format\n          {(?P<braced>[^}]*)}              # ${name} format\n        )\n        '	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
u'^[^(]*'	283,332,339,356,436,518,538,670,689,747,787,832,975,1000,1247,1288,1495
'^(.*)@(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1495,1509,1511,1580,1594
'^running .*'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'\\s*#?\\s*$'	12,147,162,181,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'#egg=([^&]*)'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'([.\\w-]+)\\s*(.*)$'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'/Python(?:-32|-64)*$'	181,524,661,740,764,868,971,1007,1015,1017,1032,1061,1123,1170,1282,1518,1557
'((^|[^%])(%%)*%[sy])'	302,323,355,422,425,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'<title>[^<]*Revision \\d+:'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'([\\w\\d\\.-]+)\\s*([\\d]+):.*$'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'^([\\w., ]+=)?\\s*[\\w\\.]+\\(.*\\)$'	283,332,356,436,518,538,550,670,689,747,787,832,975,1000,1247,1288,1495
'&([a-zA-Z][-.a-zA-Z0-9]*)[^a-zA-Z0-9]'	12,43,287,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'<p>Paragraph 1\\s*</p>\\s*<h2>\\s*An h2</h2>'	82,89,302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'href=(?:"([^"]*)"|\'([^\']*)\'|([^>\\s\\n]*))'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
u'^\\s*[#*=]{4,}\\n[a-z0-9 -]+\\n[#*=]{4,}\\s*'	283,332,339,356,436,518,538,670,689,747,787,832,975,1000,1247,1288,1495
'#.*'	232,251,422,498,531,560,747,1007,1015,1032,1087,1267,1517,1555,1580,1621
' *, *'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'\\s*,'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
']\\s*>'	12,287,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
']\\s*]\\s*>'	12,287,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'^-r\\s*([^ ])?'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'^[_a-zA-Z]\\w*$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'\\w+(\\.\\w+)*$'	487,498,602,662,757,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'-isysroot [^ \t]*'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'\\s*((\\w|[-.])+)'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'\\s*\\\\\\s*(#.*)?$'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'hg\\s*pull\\s*(.*)\\s*'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'(?:W/)?"((?:\\\\.|[^"])*)"'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'.*; charset=([\\w\\d-]+);?'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'macosx-(\\d+)\\.(\\d+)-(.*)'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'\\${([A-Za-z][A-Za-z0-9_]*)}'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'https?://[^/]*(/.*reset/\\S*)'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'^bzr\\s*branch\\s*-r\\s*(\\d*)'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'^hg\\s*update\\s*-r\\s*(.*)\\s*'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
"Decimal\\('(\\d+(\\.\\d*)?)'\\)"	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'\\$\\(([A-Za-z][A-Za-z0-9_]*)\\)'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'^git\\s*checkout\\s*-q\\s*(.*)\\s*'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'([a-zA-Z][a-zA-Z0-9_]+)\\s*=\\s*(.*)'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'darwin-(\\d+)\\.(\\d+)\\.(\\d+)-(.*)'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'</\\s*([a-zA-Z][-.a-zA-Z0-9:_]*)\\s*>'	12,43,287,330,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^([A-Za-z][A-Za-z0-9+-.]*://)(/*)(.*?)'	55,147,181,190,220,325,454,582,622,666,707,915,927,1003,1247,1597
'git\\s*remote\\s*add\\s*origin(.*)\\s*-f'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'	12,287,412,413,510,602,759,774,852,961,1054,1076,1087,1221,1509,1511
'^\\s*'	12,190,412,556,558,759,852,961,1045,1087,1221,1248,1326,1377,1511
'^(\\s*)'	12,287,407,412,602,759,852,961,1050,1054,1087,1221,1509,1511,1580
'\\s*\\]'	487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'^\\s*\\n'	12,236,247,287,552,602,606,919,1007,1054,1087,1223,1395,1420,1509
'^([^=]*)=(.*)$'	12,287,412,560,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'realm="([^"]*)"'	147,181,190,220,325,454,582,622,666,707,915,927,1003,1247,1597
'^\\s*([^=\\s;,]+)'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
"^'([^']+)'(\\|.*$)"	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1580,1634
'^\\s*=\\s*([^\\s;,]*)'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'[a-zA-Z][-.a-zA-Z0-9:_]*'	12,43,287,330,381,412,602,759,852,961,1054,1087,1221,1509,1511
'<(/)?([^ ]+?)(?: (/)| .*?)?>'	82,89,302,323,355,422,866,1004,1021,1074,1075,1184,1468,1495,1517
'[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'	147,181,190,220,325,454,582,622,666,707,915,927,1003,1247,1597
'\\s*(<=?|>=?|==|!=)\\s*((\\w|[-.])+)'	287,487,498,602,662,1033,1087,1257,1415,1469,1509,1536,1580,1594,1634
'^(?P<value>"Plural-Forms.+?\\\\n")\\s*$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1580,1634
'^\\s*=\\s*\\"([^\\"\\\\]*(?:\\\\.[^\\"\\\\]*)*)\\"'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'^[ \\t]*'	12,31,52,188,412,597,759,852,961,1050,1054,1087,1221,1511
'\\s*\\\\'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1555,1580
'^[ \t]*$'	12,54,111,132,412,759,852,961,1030,1054,1087,1089,1221,1511
'([ \\t]*)'	150,304,640,662,842,851,945,1025,1054,1147,1199,1322,1505,1561
',\\s*|\\s+'	12,287,412,602,759,852,961,1054,1087,1221,1475,1509,1511,1580
'^(.*):(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'[ \t\\)].*$'	533,587,618,793,818,1007,1015,1032,1080,1172,1266,1296,1428,1493
'[a-zA-Z]\\w*'	251,302,323,355,422,498,728,866,1004,1087,1184,1416,1495,1517
'(?P<pad>[=]*)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^(.*)#([^#]*)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'^(.*):([0-9]+)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'^(.*)\\?([^?]*)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'(.*?)\\?(.*?):(.*)'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^(.*?)-(dev|\\d.*)'	251,422,662,800,1104,1188,1257,1290,1386,1415,1517,1536,1594,1634
'^(\\d{9}|(00|\\+)\\d*)$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1634
'\\{@([^\\}]*)=([^\\}]*)}'	9,55,147,181,236,247,552,606,919,1007,1223,1267,1395,1420
'<[a-zA-Z][-.a-zA-Z0-9]*/'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'\\b[a-zA-Z_][a-zA-Z0-9_]*\\b'	251,252,487,639,1087,1104,1257,1386,1415,1469,1495,1536,1555,1580
'^.*FT_TRACE_DEF[ \t]*\\([ \t]*'	533,587,618,793,818,1007,1015,1032,1080,1172,1266,1296,1428,1493
'<([a-zA-Z][-.a-zA-Z0-9]*)/([^/]*)/'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'^[ \t]*#define[ \t]+FT_COMPONENT[ \t]+trace_'	533,587,618,793,818,1007,1015,1032,1080,1172,1266,1296,1428,1493
'(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'	1040,1103,1105,1106,1131,1237,1306,1356,1400,1556,1610,1622,1624,1627
'%(?:\\((?P<key>.*?)\\))?(?P<modifiers>[-#0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]'	12,251,287,381,422,602,662,800,1033,1054,1087,1509,1517,1580
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
' *'	222,297,308,322,389,467,505,534,743,1071,1216,1466,1486
'^ *\n'	12,287,412,531,602,759,852,961,1054,1087,1221,1509,1511
',\\s*'	82,89,552,606,800,1004,1025,1074,1075,1247,1426,1469,1495
'^\\s*#'	200,241,287,433,570,580,602,927,1003,1202,1249,1348,1509
'cygwin.*'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^(\\s*#*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^([ \\t]*)'	12,55,200,287,433,602,927,1003,1054,1087,1202,1509,1580
'^(\\s*)(\\w*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^[1-9][0-9]*$'	12,287,412,602,759,852,961,1007,1054,1087,1221,1509,1511
'\\+OK.*(<[^>]+>)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'%\\(([^)]*)\\)s|.'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
u'--.*([\\n\\Z]|$)'	302,323,355,422,849,866,878,1004,1184,1273,1495,1517,1634
'\\+( (?P<data>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'raise\\s+\\w+\\s*(,)'	150,304,640,662,842,851,945,1054,1147,1199,1322,1505,1561
'"(?:[^"\\\\]|\\\\.)*"'	12,287,356,412,602,759,852,961,1054,1087,1221,1509,1511
"'(?:[^'\\\\]|\\\\.)*'"	12,287,356,412,602,759,852,961,1054,1087,1221,1509,1511
'(\\d+\\.\\d+(\\.\\d+)*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^[a-zA-Z]([a-zA-Z0-9_]*)$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^[A-Za-z_][A-Za-z0-9_.]*$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'coding[:=]\\s*([-\\w_.]+)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'([-\\w]+)\\s*:\\s*([^:;]*)'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'[a-zA-Z_:][-a-zA-Z0-9._:]*'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'^#!.*python[0-9.]*([ \t].*)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'.*FLAGS \\((?P<flags>[^\\)]*)\\)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'url\\s*\\(\\s*[^\\s)]+?\\s*\\)\\s*'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'[ \t]*([^ \t]+)[ \t]+realm="([^"]*)"'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511
'^([-+]?)0*(\\d*)((?:\\.\\d*)?)(([eE][-+]?\\d+)?)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<delim>[^\\w\n"\'])(?P<space> ?)(?P<quote>["\']).*?(?P=quote)(?P=delim)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^([:,;#%.\\sa-zA-Z0-9!]|\\w-\\w|\'[\\s\\w]+\'|"[\\s\\w]+"|\\([\\d,\\s]+\\))*$'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@]*))?'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'.*INTERNALDATE "(?P<day>[ 0123][0-9])-(?P<mon>[A-Z][a-z][a-z])-(?P<year>[0-9][0-9][0-9][0-9]) (?P<hour>[0-9][0-9]):(?P<min>[0-9][0-9]):(?P<sec>[0-9][0-9]) (?P<zonen>[-+])(?P<zoneh>[0-9][0-9])(?P<zonem>[0-9][0-9])"'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^-*\n'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'.*"([^"]+)"$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^\\s*(#.*)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'_\\((.*?)\\)(?s)'	251,252,1087,1104,1257,1386,1415,1469,1495,1536,1555,1580
'^([0-9]+) ?(.*)\n?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'.*{(?P<size>\\d+)}$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^([^ \t]+)[ \t]+(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^(.*\\s+)?(.*?)(\\(.*)?'	283,332,339,356,518,538,670,689,787,832,1000,1288
'[a-zA-Z][-_.a-zA-Z0-9]*'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
' (\\d+\\.\\d+(\\.\\d+)*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^\\s*(>>>|\\.\\.\\.) (.*)$'	339,356,538,642,670,776,832,971,1000,1203,1288,1299
'((^|;)\\s*charset=)([^;]*)'	22,38,60,64,72,94,790,881,928,1068,1150,1169
'\\$([a-zA-Z_][a-zA-Z_0-9]*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^(?P<group>[^ \t]+)[ \t]+(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\* (?P<type>[A-Z-]+)( (?P<data>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<feature>[A-Za-z0-9][A-Za-z0-9\\-]*) ?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^\\[\\[\\[\\s*(.*?)\\s*\\]\\]\\]\\s*(\\S+)$'	589,612,938,1056,1116,1124,1305,1388,1447,1451,1471,1480
'\\[(?P<type>[A-Z-]+)( (?P<data>[^\\]]*))?\\]'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^content-type:.*multipart/.*boundary="?([^;"\n]*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\* (?P<data>\\d+) (?P<type>[A-Z-]+)( (?P<data2>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'	589,612,938,1056,1116,1124,1305,1388,1447,1451,1471,1480
'^(content-type:.*charset=")(us-ascii|iso-8859-[0-9]+)(".*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(__libc_init)|(GLIBC_([0-9.]+))|(libc(_\\w+)?\\.so(?:\\.(\\d[0-9.]*))?)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(\\s+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	12,287,412,602,636,759,852,961,1125,1221,1509,1511
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<atom>.*?)         # non-greedy up to the next ?= is the atom\n  \\?=                   # literal ?=\n  '	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'".*"$'	306,322,464,467,505,534,1007,1015,1032,1404,1466
'(\\\\*)"'	306,322,467,505,534,557,896,1007,1223,1420,1466
'\\n\\s*$'	12,143,188,213,287,602,1054,1087,1094,1509,1583
'\\/\\/.*$'	0,75,119,768,785,825,1007,1015,1032,1054,1301
'\\s*;\\s*'	12,64,412,456,759,852,961,1221,1247,1511,1571
'\\n\\s*//'	21,82,89,147,181,1004,1074,1075,1184,1426,1495
'/\\*.*\\*/'	0,75,119,534,785,1007,1015,1032,1054,1301,1466
'[_A-Za-z]\\w*'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'.*?(?=$|\\$\\$)'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'(.*  )(\\w+)\\n'	12,412,549,759,852,961,1054,1087,1221,1511,1580
'\\{\\{.*?\\}\\}'	113,147,153,181,251,305,498,1087,1267,1505,1555
'\\$[_A-Za-z]\\w*'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^.*[/\\\\](.*:)\\d+\\n'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^([^\\[\\]]+)(\\[.*\\])?$'	0,75,119,768,785,825,1007,1015,1032,1054,1301
'\\nStack trace:\\n(.|\\n)*'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'Stack trace:(.|\\n)*?\\n\\n'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^(?P<proto>unix):(?P<path>.*)$'	100,190,200,619,658,950,1247,1399,1403,1485,1570
'^\\s*#\\s*include\\s*"(src/.+)"'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'encoding\\s*=\\s*[\'"]([^"\']+)["\']'	12,73,287,412,602,759,852,961,1221,1509,1511
'^\\[\\s*RUN\\s*\\].*\\.(\\w+(/\\w+)?)'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'<meta.*?charset=["\\\']*(.+?)["\\\'>]'	619,869,927,1263,1292,1399,1439,1469,1535,1580,1594
'.*[/\\\\](.+)(\\:\\d+|\\(\\d+\\))\\: '	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$'	147,173,181,201,295,369,959,1025,1177,1276,1496
'^const\\s+([a-zA-Z0-9_]+)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'([-_a-zA-Z0-9]+)(\\s*.*?)(?=,\\s+(?:/|-|--)|$)'	95,302,849,878,1004,1012,1086,1158,1495,1525,1578
'(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'	12,412,549,759,852,961,1054,1087,1221,1511,1580
'^macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'^python\\s+macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'\\s*#'	171,206,441,628,919,1007,1184,1204,1249,1381
'\\s*#.*'	306,322,467,505,534,896,1007,1015,1032,1466
'//.*\\n'	306,322,464,467,505,534,1007,1300,1404,1466
'\\((.*?)\\)'	147,181,278,296,320,432,819,1147,1366,1557
'\\beval\\s*\\('	306,322,464,467,505,534,1007,1300,1404,1466
'^([^:]*):(.*)$'	12,287,412,602,759,852,961,1221,1509,1511
'\\bwith\\s*\\('	306,322,464,467,505,534,1007,1300,1404,1466
'^\\s*[^#\\s].*'	220,927,959,1122,1263,1276,1290,1469,1580,1594
'<url>(.*)</url>'	1104,1257,1263,1290,1386,1415,1536,1580,1594,1634
'^//([^/?]*)(.*)$'	12,287,510,602,774,1054,1087,1495,1509,1580
'\\s*revision="(\\d+)"'	1104,1257,1263,1290,1386,1415,1536,1580,1594,1634
'^[a-z0-9][-+.a-z0-9]*:'	220,927,959,1122,1263,1276,1290,1469,1580,1594
'[_a-zA-z][_a-zA-Z0-9]*$'	12,412,498,759,852,961,1087,1221,1511,1580
"'(\\\\.[^\\\\]*|[^\\\\])'"	12,412,759,852,961,1054,1087,1221,1511,1580
'^#! */usr/local/bin/python'	12,412,759,852,961,1054,1087,1221,1511,1580
'/\\*([^*]+|\\*+[^/])*(\\*+/)?'	12,412,759,852,961,1054,1087,1221,1511,1580
'url\\s*\\(\\s*[^#\\s][^)]+?\\)'	220,927,959,1122,1263,1276,1290,1469,1580,1594
'#define ([A-Z][A-Za-z0-9_]+) (.*)\n'	12,287,602,1054,1087,1263,1290,1509,1580,1594
'Shipping="?FedEx"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'Riding_Rocket_0023.*Rocket_Launcher_0001'	12,412,759,774,852,961,1087,1221,1511,1580
'(?:([\\w ]+) ([\\w.]+) .*Version ([\\d.]+))'	12,287,412,602,759,852,961,1221,1509,1511
'^[\t ]*#[\t ]*include[\t ]+<([a-zA-Z0-9_/\\.]+)'	12,412,759,852,961,1054,1087,1221,1511,1580
'^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'	12,412,759,852,961,1054,1087,1221,1511,1580
'Customer="?WILE_E_COYOTE"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'^[ \t]*(def|class)[ \t]+([a-zA-Z0-9_]+)[ \t]*[:\\(]'	12,412,759,852,961,1054,1087,1221,1511,1580
'<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'	12,412,759,852,961,1054,1087,1221,1511,1580
'Part_Number="?Rocket_Launcher_0001"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'	12,412,759,852,961,1054,1087,1221,1511,1580
'PART_NUMBER=RIDING_ROCKET_0023;\\s*PART_NUMBER=ROCKET_LAUNCHER_0001'	12,412,759,774,852,961,1087,1221,1511,1580
'^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)\\(([_a-zA-Z][_a-zA-Z0-9]*)\\)[\t ]+'	12,412,759,852,961,1054,1087,1221,1511,1580
"'.*'$"	306,322,464,467,505,534,1007,1404,1466
'"[^"]*"'	322,416,467,505,534,1199,1300,1404,1466
'cc_(.*)$'	308,322,389,467,505,534,743,1216,1466
'v[0-9]+.*'	308,322,389,467,505,534,743,1216,1466
'(.*)\\|(.*)'	308,322,389,467,505,534,743,1216,1466
'@code{(.*?)}'	12,412,759,852,961,1054,1087,1221,1511
'\\w+(\\.\\w+)*'	662,1033,1087,1257,1415,1536,1580,1594,1634
'[_a-zA-Z]\\w*$'	308,322,389,467,505,534,743,1216,1466
'init\\((.*)\\):'	12,101,412,759,852,961,1087,1221,1511
'/\\.(?![^.]*$)/'	45,59,151,164,238,371,1345,1507,1516
'(\\d+\\.\\d+)(.*)'	308,322,389,467,505,534,743,1216,1466
'[\\t ]+(?![^{]*})'	308,322,389,467,505,534,743,1216,1466
'<([^<\\s]+?)\\s*/>'	147,181,190,220,325,582,622,915,1597
'(\\s)@\\s*([^\\s]+)'	308,322,389,467,505,534,743,1216,1466
'^([a-zA-Z0-9_]+)=(.*)'	12,412,759,852,961,1087,1221,1511,1580
'\\s*([^: ]*)\\s*:(.*)'	306,322,464,467,505,534,1300,1404,1466
'Version:.*-r(\\d+)\\s*$'	662,1033,1087,1257,1415,1536,1580,1594,1634
'^([A-Z]+)([1-9][0-9]*)$'	12,412,759,852,961,1087,1221,1511,1580
'[a-zA-Z_][a-zA-Z0-9_]*$'	422,538,557,747,1223,1288,1420,1517,1580
'^def\\s*(\\w+)\\s*=(.*)$'	306,322,464,467,505,534,1300,1404,1466
'^\\s*\\*\\w+(\\+\\+|--);'	322,416,467,505,534,1199,1300,1404,1466
'^[a-zA-Z][a-zA-Z0-9\\-_]*$'	12,287,425,602,1050,1054,1087,1509,1580
'\\s*(t_[a-zA-Z_0-9]*)\\s*='	225,256,635,689,1007,1015,1032,1143,1543
'^([a-zA-Z0-9_]+)[ \t]*=(.*)'	12,412,759,852,961,1087,1221,1511,1580
'<include.*?>(.*?)</include>'	308,322,389,467,505,534,743,1216,1466
'Out\\[(\\d+)\\]:\\s?(.*)\\s*'	538,642,747,776,971,1000,1203,1288,1580
'In \\[(\\d+)\\]:\\s?(.*)\\s*'	538,642,747,776,971,1000,1203,1288,1580
'\\s*def\\s+(t_[a-zA-Z_0-9]*)\\('	225,256,635,689,1007,1015,1032,1143,1543
'^_imp__(.*) in python\\d+\\.dll'	12,412,759,852,961,1087,1221,1511,1580
'\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('	225,256,689,757,1007,1015,1032,1143,1543
'(function\\b[^(]*)\\((.*)\\)\\{$'	306,322,464,467,505,534,1007,1404,1466
'([a-zA-Z\\d]+) \\[(\\d+)\\] (.*)'	12,412,759,852,961,1054,1087,1221,1511
'(\\\\*)(\\(\\?P<[^>]*>|\\((?!\\?))'	317,559,921,1047,1095,1234,1277,1580,1592
'^\\s*prefix\\s+([\\w\\_\\.\\-\\/]+)$'	306,322,464,467,505,534,1300,1404,1466
'^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'	308,322,389,467,505,534,743,1216,1466
'\\$\\([^\\$]*(\\$[^\\)][^\\$]*)*\\$\\)'	308,322,389,467,505,534,743,1216,1466
'^\\s*#\\s*include\\s*([<"])([^>"]*)[>"].*$'	322,416,467,505,534,1199,1300,1404,1466
'(^|\\n)(?P<level>#{1,6})(?P<header>.*?)#*(\\n|$)'	236,247,552,606,919,1007,1223,1395,1420
'^([A-Z]+)([1-9][0-9]*)(?::([A-Z]+)([1-9][0-9]*))?$'	12,412,759,852,961,1087,1221,1511,1580
'^\\s*(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'^\\* ([^:]*):(:|[ \t]*([^\t,\n.]+)([^ \t\n]*))[ \t\n]*'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#?\\s*end\\s+(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'\\s*(?P<red>\\d+)\\s+(?P<green>\\d+)\\s+(?P<blue>\\d+)\\s+(?P<name>.*)'	12,412,759,852,961,1054,1087,1221,1511
'((?:0x[0-9a-fA-F]+\\+?)+)\\s+((?:(?:0x[0-9a-fA-Z]+|<[A-Za-z]+>)\\+?)*)\\s*(#.+)?'	12,412,759,852,961,1087,1221,1511,1580
'x*'	12,412,759,852,961,1087,1221,1511
'b*'	12,412,759,852,961,1087,1221,1511
'a*'	12,412,759,852,961,1087,1221,1511
':*'	12,412,759,852,961,1087,1221,1511
'0*$'	12,287,602,1054,1068,1087,1509,1580
'(:*)'	12,412,759,852,961,1087,1221,1511
'(:)*'	12,412,759,852,961,1087,1221,1511
'\\w*'	119,813,927,1003,1007,1015,1032,1580
'/*(.*)'	308,322,467,505,534,743,1216,1466
'[0-9]*'	119,813,861,927,1003,1007,1015,1032
'"(.*)"'	106,126,557,837,1223,1347,1420,1495
'(?::*)'	12,412,759,852,961,1087,1221,1511
'(:)(:*)'	12,412,759,852,961,1087,1221,1511
'[ \\t]*'	55,412,759,852,908,961,1221,1511
'^\\s*@?#'	113,147,181,251,498,1087,1267,1555
'^\\?(.*)'	306,322,464,467,505,534,1300,1466
'</body.*?>'	82,89,360,1004,1074,1075,1495,1523
'Wrote: (.*)'	308,322,467,505,534,743,1216,1466
'^(.*?)$(?m)'	992,1104,1257,1386,1415,1469,1536,1580
'(\\W*)(\\w*)'	533,896,1007,1015,1032,1172,1428,1493
'\\{\\$.*?\\}'	113,147,181,251,498,1087,1267,1555
'name="(.*?)"'	302,849,878,1004,1012,1086,1158,1495
'\\$\\{.*?\\}'	113,147,181,251,498,1087,1267,1555
'.*kallsyms.*'	306,322,464,467,505,534,1404,1466
'\\s*\\$\\$.*'	416,852,994,1007,1301,1511,1560,1598
'/dev/shm/\\S*'	306,322,464,467,505,534,1404,1466
'{([^}]*)}(.*)'	220,927,1122,1263,1290,1469,1580,1594
'py:(.*?)=["\']'	113,147,181,251,498,1087,1267,1555
'(\\\\*)([,;]+)'	306,322,467,505,534,896,1007,1466
'\\$\\((.*?)\\)'	306,322,467,505,534,896,1007,1466
'(a)(?=\\s\\1*)'	12,412,759,852,961,1087,1221,1511
'^([^:]*): *(.*)'	12,412,759,852,961,1087,1221,1511
'(a(?=\\s[^a]*))'	12,412,759,852,961,1087,1221,1511
'^([^:]*):\\t(.*)'	12,412,759,852,961,1087,1221,1511
'//\\s+Files:(.*)'	306,322,464,467,505,534,1300,1466
'([0-9.]+)(\\S*)$'	46,147,162,181,251,619,1087,1267
'.*/|\\.$|\\.\\.$'	308,322,467,505,534,743,1216,1466
'\\s*/\\*\\s*\\*/'	533,896,1007,1015,1032,1172,1428,1493
'(a(?=\\s[abc]*))'	12,412,759,852,961,1087,1221,1511
'^\\s*\\$\\$.*\\n'	416,852,994,1007,1301,1511,1560,1598
'//\\s+Flags:(.*)'	306,322,464,467,505,534,1300,1466
'(\\$\\((.*?)\\))'	306,322,467,505,534,896,1007,1466
'(>[ \\t]*)(.*\\n)'	113,147,181,251,498,1087,1267,1555
' *({.*}) = ({.*})$'	306,322,467,505,534,896,1007,1466
'[a-f0-9]+\\s+<.*:$'	306,322,464,467,505,534,1404,1466
'</?xsl:([^>]*)/?>?'	113,147,181,251,498,1087,1267,1555
"_(\\w(\\w|')*)_(.*)"	533,896,1007,1015,1032,1172,1428,1493
'<([^<>\\s]+?)\\s*/>'	220,454,666,707,927,988,1003,1247
'^(.*)=([-+]?[0-9]+)'	12,412,759,852,961,1087,1221,1511
'^(0|-?[1-9][0-9]*)$'	306,322,467,505,534,896,1007,1466
'"(.*)".*PRIMARY KEY$'	302,849,878,1012,1086,1495,1580,1634
'\\{%\\s*if\\s*.*?%\\}'	113,147,181,251,498,1087,1267,1555
'^\\$\\((.*)\\)(/(.*)|)$'	306,322,467,505,534,896,1007,1466
"\\*(\\w(\\w|')*)\\*(.*)"	533,896,1007,1015,1032,1172,1428,1493
'\\{%\\s*(block|extends)'	113,147,181,251,498,1087,1267,1555
'&.*?;|<.*?>|(\\w[\\w-]*)'	359,849,878,1012,1086,1495,1580,1634
'^\\$\\((.*?)\\)(/(.*))?$'	306,322,467,505,534,896,1007,1466
'(^|\\n)[ ]{0,3}>[ ]?(.*)'	236,247,552,606,919,1007,1223,1420
'(Okay|[EW]\\d{3}):\\s(.*)'	304,640,662,842,945,1199,1322,1505
'[A-Z][a-z]+([A-Z][a-z]*)+'	12,412,759,852,961,1087,1221,1511
"\\\\openout.*`(.*\\.aux)'"	322,389,467,505,534,743,1216,1466
'\\{include\\s+file=.*?\\}'	113,147,181,251,498,1087,1267,1555
'^([0-9a-fA-F]{8}) . (.*)$'	306,322,464,467,505,534,1300,1466
'^([a-zA-F0-9_-]*)[\\.]?.*$'	306,322,464,467,505,534,1300,1466
'\\{if\\s+.*?\\}.*?\\{/if\\}'	113,147,181,251,498,1087,1267,1555
'<div[^>]*navigat.*?</div.*?>'	12,412,531,759,852,961,1221,1511
'<address.*?>.*?</address.*?>'	12,412,531,759,852,961,1221,1511
'^([^.]*)\\.([^:]*):[\\t ]+(.*)'	12,412,759,852,961,1087,1221,1511
'^\\s*#\\s*include\\s*"(gtest/.+)"'	416,852,994,1007,1301,1511,1560,1598
'^\\s*\\d+\\s(\\.\\S+)\\s+[a-f0-9]'	306,322,464,467,505,534,1404,1466
'#s*define\\s+HASHVERSION\\s+2\\s*'	12,412,759,852,961,1087,1221,1511
'#s*define\\s+WITH_LIBINTL\\s+1\\s*'	12,412,759,852,961,1087,1221,1511
'\\s*def\\s*([_\\w][_\\w\\d]*)\\s*\\('	422,462,690,747,1119,1469,1517,1580
'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'	220,927,1122,1263,1290,1469,1580,1594
'\\{foreach\\s+.*?\\}.*?\\{/foreach\\}'	113,147,181,251,498,1087,1267,1555
'([Ww]/)?(?:"(.*?)"|(.*?))(?:\\s*,\\s*|$)'	992,1104,1257,1386,1415,1469,1536,1580
'&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#([0-9]+))(;?)'	12,287,510,602,774,1054,1087,1509
'([^\\s;,]+)(?:[^,]*?;\\s*q=(\\d*(?:\\.\\d+)?))?'	992,1104,1257,1386,1415,1469,1536,1580
'<a href="([^"]*)"[^>]* id="lookup_id_inquisition"'	302,849,878,1004,1012,1086,1158,1495
'[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'	12,412,759,852,961,1087,1221,1511
'^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'	849,878,1012,1086,1158,1495,1580,1634
' 0001:[0-9a-fA-F]{8}\\s*([_\\?@$0-9a-zA-Z]*)\\s*([0-9a-fA-F]{8}).*'	306,322,464,467,505,534,1300,1466
'#define[ \t]+([A-Z0-9a-z_]+)[ \t]+([0-9]+)[ \t]*/\\*[ \t]*(.*)[ \t]*\\*/'	12,412,759,852,961,1087,1221,1511
'^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'	306,322,464,467,505,534,1404,1466
'[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*/\\*[ \t]*(.*)[ \t]*\\*/'	12,412,759,852,961,1087,1221,1511
'Copyright [\\d-]*20[0-1][0-9] the V8 project authors. All rights reserved.'	306,322,464,467,505,534,1404,1466
'^Project\\("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"\\) = "(.*)", "(.*)", "(.*)"$'	306,322,467,505,534,896,1007,1466
'^([ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]) *(\\d[ABCEGHJKLMNPRSTVWXYZ]\\d)$'	302,849,878,1012,1086,1158,1495,1634
'^(#[0-9a-f]+|rgb\\(\\d+%?,\\d*%?,?\\d*%?\\)?|\\d{0,2}\\.?\\d{0,2}(cm|em|ex|in|mm|pc|pt|px|%|,|\\))?)$'	220,927,1122,1263,1290,1469,1580,1594
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:;+*%?!&$\\(\\)_#=~]*))?'	43,330,412,759,852,961,1221,1511
'(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'	992,1104,1257,1386,1415,1469,1536,1580
'(\\\\*)(?:(?::([a-zA-Z_][a-zA-Z_0-9]*)?()(?:#(.*?)#)?)|(?:<([a-zA-Z_][a-zA-Z_0-9]*)?(?::([a-zA-Z_]*)(?::((?:\\\\.|[^\\\\>]+)+)?)?)?>))'	559,921,1047,1095,1234,1277,1580,1592
'(?smx)\n    (<\\?.*?\\?>)?\\s*\n    <!DOCTYPE\\s+(\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     "[^"]*")\n     [^>]*>\n'	113,147,181,251,498,1087,1267,1555
'^(?:\\.\\s*(include|undef|error|warning|if|else|elif|endif|for|endfor)|\\s*(ifeq|ifneq|ifdef|ifndef|else|endif|-?include|define|endef|:))(?=\\s)'	113,147,181,251,498,1087,1267,1555
'<li>Plot: <a href=".+/admin_views/plot/1/">World Domination</a>\\s*<ul>\\s*<li>Plot details: <a href=".+/admin_views/plotdetails/1/">almost finished</a>'	302,849,878,1004,1012,1086,1158,1495
'\n    ((?P<name>\\w+)\\s*=\\s*)?\n    (?P<value>\n        True|False|\n        \\d+.\\d+|\n        \\d+.|\n        \\d+|\n        \\w+|\n        [urUR]?(?P<stringval>"[^"]*?"|\'[^\']*\')\n    )\\s*,\n'	992,1104,1257,1386,1415,1469,1536,1580
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  '	43,412,759,852,961,1221,1511,1580
'50*$'	12,287,602,1054,1087,1509,1580
'\\[.*$'	322,467,505,534,743,1216,1466
'[ \n]*{'	12,412,759,852,961,1221,1511
'=[ =]*$'	147,162,181,251,619,1087,1267
'-[ -]*$'	147,162,181,251,619,1087,1267
'\\(.*\\)'	757,1007,1015,1032,1087,1415,1580
u'<[^>]*>'	55,558,795,813,1150,1302,1326
'\\s*(#|$)'	560,562,594,737,1087,1115,1248
'(\\.0+)*$'	305,412,759,852,961,1221,1511
'\\s*-f\\s+'	420,543,596,993,1223,1420,1499
'\\s*-e\\s+'	420,543,596,993,1223,1420,1499
'<\\S[^>]*>'	220,454,666,707,927,1003,1247
'[ \\t]*(#)'	261,412,759,852,961,1221,1511
'\\s([^a]*)'	12,412,759,852,1087,1221,1511
'</form\\s*>'	302,849,878,1012,1086,1158,1495
'\\s*-[ef]\\s+'	420,543,596,993,1223,1420,1499
'(\\s*\\n\\s*)'	173,552,606,800,1223,1420,1469
'^[a-zA-Z_]\\w*'	322,467,505,534,712,1216,1466
'^([^/]+)(/.*)$'	225,287,510,602,774,1495,1509
'(\\s*#)|(\\s*$)'	420,543,596,993,1223,1420,1499
'(?:^|\\n)\\s*//'	323,355,422,866,1004,1495,1517
'[^\\\\][^\\\\]*'	12,412,759,852,961,1221,1511
'%+ ?(.*)\n[ \t]*'	12,412,759,852,961,1221,1511
'\\+=[=+]+=\\+ *$'	147,162,181,251,619,1087,1267
'^\\d+_\\d+_?\\d*$'	322,467,505,534,712,1216,1466
'.*boost_(.*?)\\..*'	322,467,505,534,712,1216,1466
'[\\\\]end{([^}]*)}'	12,412,759,852,961,1221,1511
"\\\\openout.*`(.*)'"	322,467,505,534,743,1216,1466
'[\\\\]begin{([^}]*)}'	12,412,759,852,961,1221,1511
"^([^=]+)=\\'(.*)\\'$"	322,467,505,534,712,1216,1466
'(.*)\x01(.*)###(.*)$'	12,412,759,852,961,1221,1511
'<title>(.*?)</title>'	82,89,1004,1074,1075,1093,1495
'^[ ]{0,3}[*+-][ ](.*)'	247,552,606,919,1007,1223,1420
'\\$([a-zA-Z0-9_]*)\\$'	12,412,759,852,961,1221,1511
'\\s*-e\\s+.*#egg=(.*)$'	420,543,596,993,1223,1420,1499
'^ns:((\\w+\\.)*(\\w+))$'	168,240,343,350,1308,1336,1403
'^[ ]{0,3}\\d+\\.[ ](.*)'	247,552,606,919,1007,1223,1420
'\\\\raisebox\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'[a-zA-Z][a-zA-Z0-9.-]*$'	12,412,759,852,961,1221,1511
'(?<!\\\\)(\\\\\\\\)*::$'	147,162,181,251,619,1087,1267
'^([^@]*@)?([^:]*)(:.*)?'	147,181,278,296,432,819,1366
'coding[=:]\\s*([-\\w.]+)'	12,53,1054,1087,1147,1258,1594
'\\\\hackscore\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'^([A-Za-z]:)?[/\\\\\\\\]*'	322,467,505,534,712,1216,1466
'^[a-zA-Z_][a-zA-Z0-9_]*[(]'	322,467,505,534,712,1216,1466
'\\bNOLINT\\b(\\([^)]*\\))?'	322,416,467,505,534,1404,1466
'[ \n]*{(([^{}}]|{[^}]*})*)}'	12,412,759,852,961,1221,1511
'^columns .* are not unique$'	147,181,278,296,432,819,1366
'\\s*([a-f0-9]+):\\s*(\\S.*)'	306,322,467,505,534,1404,1466
'\\s*[-\\w]+\\s*:\\s*[^:;]*;?'	220,454,666,707,927,1003,1247
'^\\s+:toctree:\\s*(.*?)\\s*$'	251,356,436,538,1087,1247,1288
'(\\s+|-*\\w{2,}-(?=\\w{2,}))'	322,467,505,534,743,1216,1466
'([\\d.]+)[^(]*(?:\\((.+)\\))?'	12,412,759,852,961,1221,1511
'^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'	247,552,606,919,1007,1223,1420
'([\\(,])\\s*(\\d.*?)\\s*([,\\)])'	487,1257,1263,1415,1536,1580,1594
'^[ ]{0,3}((\\d+\\.)|[*+-])[ ](.*)'	247,552,606,919,1007,1223,1420
'^//(\\s*)TODO(\\(.+?\\))?:?(\\s|$)?'	322,416,467,505,534,1404,1466
'[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'	12,412,759,852,961,1221,1511
'snapshot-code-name,(\\d+),\\"(.*)\\"'	306,322,467,505,534,1404,1466
'(\\ ?\\ ?\\ ?)\\[\\^([^\\]]*)\\]:\\s*(.*)'	147,181,236,247,919,1007,1395
'<th>z.*<span class="number">15</span>(?s)'	992,1104,1257,1386,1415,1536,1580
'<th>x.*<span class="number">42</span>(?s)'	992,1104,1257,1386,1415,1536,1580
'<th>y.*<span class="number">23</span>(?s)'	992,1104,1257,1386,1415,1536,1580
'(?:\x1b\\[([0-9?;]*)([a-zA-Z])|([^\x1b]+))'	322,467,505,534,712,1216,1466
'&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#(x?[0-9a-fA-F]+))(;?)'	55,225,287,510,602,774,1509
'.+\\s+"([^\\s]+)\\s+([^\\s]+)\\s+HTTP/\\d+\\.\\d+"\\s+200\\s+.*'	50,728,998,1416,1429,1459,1531
'  \\\\item (.*) [(](.*)[)]((?:(?:, \\d+)|(?:, \\\\[a-z]*\\{\\d+\\}))+)'	12,412,759,852,961,1221,1511
'(\\s+|[^\\s\\w]*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	322,467,505,534,743,1216,1466
'^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$'	322,467,505,534,712,1216,1466
'([^\'"<>]|"[^"]*"(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'	220,454,666,707,927,1003,1247
'^[ \t]*(#|%:)[ \t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[ \t]*(.*)\r*$'	322,467,505,534,712,1216,1466
'(?P<replace>(?P<type>>(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	306,322,467,505,534,1007,1466
'(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	306,322,467,505,534,1007,1466
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+?)\n    (?:\\.(?P<version>[^._]+))?\n    (?:_(?P<suffix>[^._]+))?\n    \\.dylib$\n)\n'	12,287,602,1054,1087,1509,1580
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'	12,287,602,1054,1087,1509,1580
'^\n        (?P<prefix>(?:[^\\r\\n|\\n|\\r])*?)\n        [\\ \\t]*Local\\ Variables:[\\ \\t]*\n        (?P<suffix>.*?)(?:\\r\\n|\\n|\\r)\n        (?P<content>.*?\\1End:)\n        '	305,552,606,1223,1247,1420,1505
'\n    ^\n    [ \\t]*\n    (?: while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    |   yield\n    )\n    \\b\n'	12,287,602,1054,1087,1509,1580
'-.*'	614,947,996,1114,1161,1491
'.*?c'	12,412,759,852,1221,1511
'.*?cd'	12,412,759,852,1221,1511
'[^.]*'	225,287,510,602,774,1509
'\\s*>$'	305,407,1025,1322,1326,1505
'; *q *='	113,927,1003,1269,1498,1544
'#(.*)\n'	322,467,505,534,1216,1466
'<br.*?>'	82,89,1004,1074,1075,1495
'^.*\\.h$'	412,759,852,961,1221,1511
'--[^>]*>'	454,666,707,927,1003,1247
'^__.*__$'	82,89,1004,1074,1075,1495
'(a|b)*?c'	12,412,759,852,1221,1511
'\\.?[^.]*'	225,287,510,602,774,1509
'\\((.*)\\)'	550,771,1317,1415,1501,1580
'^\\[.*\\]$'	552,606,705,743,800,1469
'\\([^)]*\\)'	503,624,656,906,1404,1486
'@(\\w*)(.*)'	896,1015,1032,1172,1428,1493
'\\s*<(\\w*)>'	896,1015,1032,1172,1428,1493
'\\s*@(\\w*):'	896,1015,1032,1172,1428,1493
'(.*?)(#)(.*)'	306,322,534,896,1007,1466
'([^:]+):(.*)'	322,467,505,534,1216,1466
'^\\((.*)\\)$'	251,1087,1263,1290,1580,1594
'^[\\t ]*\\n?$'	305,1025,1082,1322,1326,1505
'.*?\\b(as)\\b'	12,287,602,1054,1087,1509
'^.*\\.(c|cpp)$'	412,759,852,961,1221,1511
'^//([^/]*)(.*)$'	412,759,852,961,1221,1511
'([0-9]*) planes'	412,759,852,961,1221,1511
'(.*)[\\\\/](.*?)$'	412,759,852,961,1221,1511
'^\\?P<(\\w+)>(.*?)$'	82,89,1004,1074,1075,1495
'<root>([^<]*)</root>'	412,759,852,961,1221,1511
'.*\\.([a-zA-Z]{3,}$)'	147,181,254,438,594,790
'^\\s*\\((.*)\\)\\s*$'	12,287,602,1054,1087,1509
'^[ ]{4,}(?P<value>.*)'	236,247,919,1007,1340,1395
'(plugins.*|scripts.*)$'	412,759,852,961,1221,1511
'\\s*else\\s*:\\s*(#|$)'	560,562,594,1087,1115,1248
'[a-zA-Z][-a-zA-Z0-9_:]*'	412,759,852,961,1221,1511
'<body[^>]*>(.*?)</body>'	82,89,1004,1074,1075,1495
'\x01?\x1b\\[(.*?)m\x02?'	18,602,654,747,1216,1365
'<\\/([\\w\\:\\-]+)[^>]*>'	305,407,1025,1322,1326,1505
'[-+]?(\\d+|\\d*\\.\\d+)$'	82,89,1004,1074,1075,1495
'return.*[ \\(]..._FAILURE'	412,759,852,961,1221,1511
'^<\\/?\\w[\\w\\:\\-]*.*?>'	305,407,1025,1322,1326,1505
'^(https?)://([^/]+)(/.*)$'	82,89,1004,1074,1075,1495
"((?:\\'[^\\'\\n\\r]*\\')+)"	82,89,1004,1074,1075,1495
'<title>\\([^<]*\\)</title>'	412,759,852,961,1221,1511
'(\\d+(?:\\.\\d+)*)(/\\d+)?'	287,602,1054,1087,1495,1509
'^s3:\\/\\/([^\\/]*)\\/(.*)$'	546,830,1028,1039,1223,1420
'\x1b\\[((?:\\d|;)*)([a-zA-Z])'	1263,1290,1580,1594,1612,1633
'^\\s*(<(?P<a>.*)>|"(?P<b>.*)")'	294,322,467,505,534,1466
'%module(?:\\s*\\(.*\\))?\\s+(.+)'	322,467,505,534,743,1466
'#define ([A-Z][A-Z0-9_]+) (.*)\n'	412,759,852,961,1221,1511
'&.*?;|<.*?>|([A-Za-z0-9][\\w-]*)'	82,89,1004,1074,1075,1495
'\\s+select\\s*=\\s*([\\\'"]).*?\\1'	305,407,1025,1322,1326,1505
'.*(kind=)(album|tag|photo|comment)'	147,181,254,438,594,790
'Client UrlCache MMF Ver \\d\\.\\d.*'	225,287,510,602,774,1509
'(.*?[\\[\\{\\(,])(\\s*)([\\[\\{\\(])'	306,322,534,896,1007,1466
'([\\w\\-]+)\\s*=\\s*([\\\'"])(.*?)\\2'	305,407,1025,1322,1326,1505
'(.*?[\\]\\}\\)],?)(\\s*)([\\]\\}\\)])'	306,322,534,896,1007,1466
'^#import[\\s\t]*([^\\s^\t]*)[\\s\t]*$'	546,830,1028,1039,1223,1420
'<h2>.+?Revision ([0-9]*): ([^<]*)</h2>'	412,759,852,961,1221,1511
'<li><a href="([^"]*)">([^"]*)</a></li>'	412,759,852,961,1221,1511
'(url\\([\'"]{0,1}\\s*(.*?)["\']{0,1}\\))'	302,849,878,1086,1495,1634
'^(["\\\'])((?:(?!\\1)[^\\\\]|\\\\.)*)\\1'	305,407,1025,1322,1326,1505
'^\\s*(<=|>=|<|>|!=|==)\\s*([^\\s,]+)\\s*$'	12,287,602,1054,1087,1509
'^[ \t]*(#|%:)[ \t]*(include)[ \t]*(.*)\r*$'	294,322,467,505,534,1466
'(?P<q>[\\\'"])(.*?)(?<![^\\\\][\\\\])(?P=q)'	306,322,534,896,1007,1466
'(?i)^\\s*([a-z_]\\w*(?:\\.[a-z_]\\w*)*)(.*)'	12,287,602,1054,1087,1509
'^\\s*#\\s*macfreeze:\\s*(\\S*)\\s*(.*)\\s*$'	412,759,852,961,1221,1511
'(.*?[^\\s\\]\\}\\)]+.*?)([\\]\\}\\)],?)\\s*$'	306,322,534,896,1007,1466
'NPT_SET_LOCAL_LOGGER\\s*\\([ "]*(\\S+)[ "]*\\)'	412,759,852,961,1221,1511
',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'	82,89,1004,1074,1075,1495
'^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'	385,483,640,1069,1149,1583
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'([sS][eE][tT]\\s*\\()\\s*([^\\s]+)\\s+"([^"]+)"\\)'	322,467,505,534,1216,1466
'Cookie\\:.+\\@([!-\xff]+).*?(.+\\@[!-\xff]+\\.txt)'	225,287,510,602,774,1509
'([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'	412,759,852,961,1221,1511
'([a-zA-Z][a-zA-Z_-]*)\\s*(?:=(?:"([^"]*)"|([^ \\t",;]*)))?'	82,89,1004,1074,1075,1495
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+\\s+const(\\s?&|&\\s?)[\\w]+'	322,416,467,505,534,1466
'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*"\'] |>> |\\?> '	113,251,498,1087,1267,1555
'([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(?:\\s*\\(\\s*([^)\\s]+)\\s*\\))?$'	12,287,602,1054,1087,1509
'(?<!\\\\)<%(?:(#)|(py(?:thon)?\\b)|(?:\\s*(\\w+))\\s*)(.*?)\\s*%>\\n?(?s)'	992,1104,1257,1386,1469,1536
'<li class="header up"><a href="ref\\..*?\\.php">([a-zA-Z0-9\\s]+)</a></li>'	113,147,181,251,498,1267
'([A-Z]{3}_ERROR_[A-Z_0-9]+)\\s+=?\\s*\\(?([A-Z_0-9-][A-Z_0-9-+ ]+[A-Z_0-9])'	412,759,852,961,1221,1511
'([\\w.+]+)\\s*\\(#(\\d+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	412,759,852,961,1221,1511
'("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'	82,89,1004,1074,1075,1495
'(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'	546,830,1028,1039,1223,1420
'\\([^()]*\\bconst\\s+(?:typename\\s+)?(?:struct\\s+)?(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'<structure name="([^"]+)" noffset="([^"]+)" install="([^"]*)" ioffset="([^"]+)" voffset="([^"]+)"'	412,759,852,961,1221,1511
'<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*\\s*(\\/?)>$'	305,407,1025,1322,1326,1505
'<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,407,1025,1322,1326,1505
'^<logentry.*?revision="([0-9]{4,})".*?<date>([0-9]{4}-[0-9]{2}-[0-9]{2})T.*?<msg>(.*?)</msg>.*?</logentry>$'	412,759,852,961,1221,1511
'^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})(T|\\s+)(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2}).*?$'	631,890,895,1175,1369,1644
'\n    ^\n    [ \\t]*\n    (?: if\n    |   for\n    |   while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    |   yield\n    )\n    \\b\n'	412,759,852,961,1221,1511
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '	12,287,602,1054,1087,1509
'%.*'	251,498,1087,1267,1555
"'.*"	251,498,1087,1267,1555
'@.*'	173,1007,1015,1032,1571
'.*/'	560,990,1007,1015,1032
'.*:$'	251,498,1087,1267,1555
'\\s*$'	441,628,1204,1248,1249
';\\s*'	251,305,1087,1377,1505
'to-.*'	251,498,1087,1267,1555
'.*\\?$'	251,498,1087,1267,1555
'.*\\!$'	251,498,1087,1267,1555
'\\)\\s*'	322,467,505,534,1466
'.*/(.*)'	200,546,830,1028,1039
'\\s*=.*'	467,505,534,1404,1466
"^'(.*)'$"	305,826,1415,1505,1580
'(}?\\s*)$'	322,467,505,534,1466
'(\\w+)(.*)'	162,251,619,1087,1267
'\\[(.*)\\]'	560,740,1007,1317,1501
'^(\\s*)(.*)'	422,602,747,1517,1580
'.*\\.__.*?__'	422,602,747,1517,1580
'^([\\w\\-:]*)'	143,188,213,1094,1583
'[a-zA-Z_]\\w*'	640,945,1025,1495,1505
'^[\r\n]*(\\s*)'	143,188,213,1094,1583
'(.+)\\.(\\w*)$'	422,602,747,1517,1580
'^\\s*\\*?\\s*$'	322,467,505,534,1466
'#\\s*random\\s+'	422,602,747,1517,1580
'^(.*)_([0-9]+)$'	236,247,919,1007,1395
'\\[([^\\]]*)\\]'	143,188,213,1094,1583
'\\*\\s*([0-9]+)'	143,188,213,1094,1583
'\\b(\\w*)\\b\\W*'	162,251,619,1087,1267
'\\w+\\s*:\\s*\\w'	251,498,1087,1267,1555
'\\{\\{(.*?)\\}\\}'	317,428,466,1047,1277
'([a-zA-Z-]+):\\s*$'	1025,1082,1322,1326,1505
'^(\\s*<[^>]+>\\s*)'	143,188,213,1094,1583
'^[-=*_^#]{3,}\\s*$'	356,436,538,1247,1288
'((\\t)|(    ))(.*)'	236,247,919,1007,1395
'#\\s*all-random\\s+'	422,602,747,1517,1580
'^(\\.\\.)[\\/](.*)$'	322,467,505,534,1466
'^.*ld\\.so\\.cache$'	467,505,534,1404,1466
'\\s*\\*(\\s+|(?!/))'	322,467,505,534,1466
'\\A[\\x00-\\x7f]*\\Z'	433,927,1003,1202,1350
'([a-z]*) ([^ \\r\\n]*)'	441,628,1054,1204,1580
'(<|>|\\+(?!\\s*\\+|$))'	143,188,213,1094,1583
u'[a-zA-Z_][a-zA-Z0-9_]*'	55,96,252,1247,1248
'Out\\[\\d+\\]: \\s*?\\n?'	422,602,747,1517,1580
'^%[%!\\w]([^:]*)[ \\t]*$'	441,628,1054,1204,1580
'(\\d*\\.?\\d*)\\s*(\\S*)'	162,251,619,1087,1267
'([\\w\\-]+\\s*:)(?!:)\\s*'	305,1025,1322,1326,1505
'[\\?\\&]gsessionid=(\\w*)'	147,181,254,438,594
'(\\S+(\\.\\w+)*)\\.(\\w*)$'	422,602,747,1517,1580
'(\\s*<[^>]+>[\\s\\n\\r]*)$'	143,188,213,1094,1583
'[a-zA-Z_$][A-Za-z0-9_$..]*'	322,467,505,534,1466
'#\\s*ipdoctest:\\s*EXTERNAL'	422,602,747,1517,1580
'\\$([a-zA-Z_][a-zA-Z0-9_]*)'	467,505,534,1007,1466
'(pinfo )?(\\?*)(.*?)(\\??$)'	422,602,747,1517,1580
'^\\.\\.\\s+autosummary::\\s*'	356,436,538,1247,1288
'[a-zA-Z_]([a-zA-Z0-9_.]*) *$'	422,602,747,1517,1580
'\\s+("(?:\\\\\\d\\d\\d)*")},$'	101,602,1054,1087,1580
'^%%([^:]*):[ \\t]*(.*)[ \\t]*$'	441,628,1054,1204,1580
'^\\s*language\\s*=\\s*ObjC\\s*;'	251,498,1087,1267,1555
'^libtool: file: .* has no symbols$'	467,505,534,1007,1466
'(\\s*)[^\\s]+@[^(\\s]+(\\s*)\\(.+\\)'	322,467,505,534,1466
'"([0-9]*) ([0-9]*) ([0-9]*) ([0-9]*)'	441,628,1054,1204,1580
'^([A-Za-z][^:]*):[ \\t]*(.*)[ \\t]*$'	441,628,1054,1204,1580
'raise\\s+\\w+\\s*,\\s*\\w+\\s*,\\s*\\w+'	640,945,1025,1322,1505
'(.+) release ([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'	236,247,919,1007,1395
'class (\\w[^\\s:]*)(: public (\\w[^\\s{]*))?\\s*{'	467,505,534,1404,1466
'^[ ]{0,3}(?P<key>[A-Za-z0-9_-]+):\\s*(?P<value>.*)'	236,247,919,1007,1395
'([^0-9]+)(?: release )?([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'^\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	356,436,538,1247,1288
'rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$'	441,628,1054,1204,1580
'hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)$'	441,628,1054,1204,1580
'rgb\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)$'	441,628,1054,1204,1580
'IronPython\\s*([\\d\\.]+)(?: \\(([\\d\\.]+)\\))? on (.NET [\\d\\.]+)'	287,602,1054,1087,1509
'(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	147,162,171,181,1381
u'^\\s*blocktrans(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\\s+|$)'	1012,1086,1158,1495,1580
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	12,287,602,1054,1509
'^<(\\w+\\:?[\\w\\-]*)((?:\\s+[\\w\\:\\-]+\\s*=\\s*([\\\'"]).*?\\3)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'.. auto(function|method|attribute|class|exception|module)::\\s*([A-Za-z0-9_.]+)\\s*$'	356,436,538,1247,1288
'\\s*((?<=[\\\'"\\s])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?'	873,927,1469,1580,1592
u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'	1012,1086,1158,1495,1580
'^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\'[^\']*\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'\n          <\n           (?:mailto:)?\n          (\n              [-.\\w]+\n              \\@\n              [-\\w]+(\\.[-\\w]+)*\\.[a-z]+\n          )\n          >\n        '	552,606,1223,1247,1420
'\n          # Match tail of: [text][id]\n          [ ]?          # one optional space\n          (?:\\n[ ]*)?   # one optional newline followed by spaces\n          \\[\n            (?P<id>.*?)\n          \\]\n        '	552,606,1223,1247,1420
'\\s*#define[ \t]+[^_]*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+[^_]*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]'	441,628,1054,1204,1580
"\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        "	552,606,1223,1247,1420
'\n          # Match tail of: [text](/url/) or [text](/url/ "title")\n          \\(            # literal paren\n            [ \\t]*\n            (?P<url>            # \\1\n                <.*?>\n                |\n                .*?\n            )\n            [ \\t]*\n            (                   # \\2\n              ([\'"])            # quote char = \\3\n              (?P<title>.*?)\n              \\3                # matching quote\n            )?                  # title is optional\n          \\)\n        '	552,606,1223,1247,1420
'(x*)'	287,602,1509,1580
'^.*::'	305,1025,1138,1505
'!\\s*'	119,1007,1015,1032
',\\s*$'	433,927,1003,1202
':\\s*$'	498,633,1199,1235
'\n\\s*'	873,1463,1580,1592
'(\\s*)$'	422,602,747,1094
'"(.*?)"'	557,782,1223,1420
'^\\s*\\#'	422,747,1517,1580
'<[^<>]*>'	851,1269,1561,1576
'\\s*:\\s*'	139,292,1219,1501
'\\s*=\\s*'	116,124,826,1248
'.*\\._.*?'	422,602,747,1517
'publish.*'	614,947,996,1491
'^[^(\\[]*'	356,538,1247,1288
'^\\s*#.*$'	498,633,958,1235
'.*@.*\\..*'	190,462,690,1119
'.*-(\\w*)$'	254,438,594,790
'<\\?.*\\?>'	225,779,1025,1407
'\\s*SELECT'	113,1415,1469,1580
'\\s*https?:'	420,1223,1420,1499
u'\\n\\s*\\n'	943,1055,1247,1267
'(.*)_\\d\\d'	642,776,971,1203
'\\[[^]]*\\]'	190,624,729,1486
'^[\\t ]*\\n'	46,1050,1469,1621
'[0-9-]*(.+)$'	147,162,181,1087
'\\([^()]*\\)'	851,1269,1561,1576
'.* warning:.*'	1116,1451,1471,1480
'val \\w+\\s*:'	251,498,1087,1555
'(\\w+)://(.*)'	113,1415,1469,1580
'\\.(?![^.]*$)'	191,532,843,1132
'\\(.*\\)\\s*$'	1116,1451,1471,1480
'%[^\\r\\n\\v]*'	642,776,971,1203
'\\sassert *\\('	906,1404,1459,1531
'(.*)\\((.*)\\)'	533,1117,1148,1469
'\\{([^{]*?)\\}'	1263,1290,1580,1594
'(\\S+)\\s*(.*)'	52,241,597,1249
'(.+?)(\\(.*\\))'	433,927,1003,1202
'(.*?) as (\\w+)'	273,715,871,916
'^\\w(\\-?\\w)*$'	422,747,1517,1580
'(http://)(\\w*)'	254,438,594,790
'\\{([^\\}]*)\\}'	143,188,213,1583
'"([0-9][.0-9]*)'	350,928,1308,1403
'\\s*#![^\\r\\n]*'	1263,1290,1580,1594
"[^']*'([^']*)'.*"	1004,1074,1075,1495
'^Version\\s+(.*)'	252,337,992,1112
'^[ \\t]*[^# \\t]'	433,927,1003,1202
'(\\d+(\\.\\d+)*)'	1263,1290,1580,1594
'(?<=\\n)\\s*#[^#]'	433,927,1003,1202
':[ \\t]*(?:#.*)?$'	433,927,1003,1202
'self:\\s*(.*)\\s*'	287,580,602,1509
'<p[^/>]*>\\s*</p>'	422,747,1517,1580
'url\\s*\\(([^)]+)'	113,147,181,1258
'^r(ev)?\\s*(\\d+)'	1263,1290,1580,1594
'((^|[^%])(%%)*%s)'	642,776,971,1203
'^mongodb \\(.*\\)'	503,656,906,1404
'#.*?(?=\n)|\n(?=$)'	1263,1290,1580,1594
'[,;:]\\s*(?:  |\\t)'	640,945,1025,1505
'\\s*\\(0[0-7]+\\).*'	523,946,1116,1484
'<title>(.*)</title>'	386,774,1096,1181
'(.*)\\.(\\w+:.+\\s)'	1012,1086,1158,1580
'([\\d\\w\\-_]+)(.*)'	523,946,1116,1484
'(.*) \\(([0-9]+)\\)$'	851,1269,1498,1561
'^(CONFIG_\\w+)=(.*)$'	523,946,1116,1484
'^v(ersion)?\\s*(\\d+)'	1263,1290,1580,1594
'\\-\\-?\\w+[\\-\\w]*$'	422,747,1517,1580
'.*_([vV]\\d+\\.\\d+)$'	503,656,906,1404
'<a href=[^>]*>([^<]+)<'	1263,1290,1580,1594
'%%HiResBoundingBox: .*'	642,776,971,1203
'(?:(?:\n\r?)|^)( *)\\S'	642,776,971,1203
'\\s*https?:.*#egg=(.*)$'	420,1223,1420,1499
'(?<=^TARGET_PRODUCT=).*'	1116,1451,1471,1480
'\\s*\\(\\d+[ulUL]*\\).*'	523,946,1116,1484
'^[a-zA-Z_][a-zA-Z0-9_]*$'	244,602,747,1158
'\\s*# SOURCE LINE (\\d+)'	433,927,1003,1202
'((?<!\\\\)(\\\\\\\\)*)\\.'	1054,1087,1263,1580
'\\d*\\.\\d*\\.\\d*\\.\\d*'	560,792,1317,1501
'(?<=^PLATFORM_VERSION=).*'	1116,1451,1471,1480
"(nextval\\(')([^']+)('.*$)"	113,1415,1469,1580
'^([a-z]*)(:|%3A)([\\w-]*)$'	254,438,594,790
'^(\\s*)(def .+:|class .+:)'	498,633,958,1235
'^([a-zA-Z0-9]+)([-](.*))?$'	287,580,602,1509
'.*/.*_V(\\d+\\.\\d+)/mongo'	503,656,906,1404
"goog.require\\('([^']*)'\\)"	343,350,1308,1403
'(\x01?\x1b\\[[0-9;]*m\x02?)'	287,602,1509,1580
'^(\\s*@charset [^;]+;\\s*)+'	568,807,1144,1247
'(exit|quit)(\\s*\\(.*\\))?$'	422,747,1517,1580
'\x01?\x1b\\[([0-9;]*)m\x02?'	287,602,1509,1580
'(?<!\\\\)((\\\\\\\\)*)\\\\n'	147,162,181,1087
'^#.*coding[:=]\\s*([-\\w.]+)'	747,1340,1517,1580
'[\\?\\&]gsessionid=(\\w*\\-)'	254,438,594,790
'([=!]=)\\s*(None|False|True)'	640,945,1025,1505
'#\\s*-\\*-\\s*noplot\\s*-\\*-'	642,776,971,1203
'(?<=^TARGET_BUILD_VARIANT=).*'	1116,1451,1471,1480
'^\\s*(import |from .+ import)'	498,633,958,1235
'(\\[.{16,16}[^,]*?),.*?\\]\\)'	356,538,1247,1288
'#\\s*coding[:=]\\s*([-\\w.]+)'	422,747,1517,1580
'\\s*\\(0[xX][0-9a-fA-F]*\\).*'	523,946,1116,1484
'^(.*)(@charset \\"[^\\"]*\\";)'	568,807,1144,1247
'^\\S+?:/+(?:[^\\s/]*@)?(\\S+)$'	119,1007,1015,1032
'^.*"([\\d\\w_\\+\\.\\-/]+)".*$'	523,946,1116,1484
'asm-([\\w\\d_\\+\\.\\-]+)(/.*)'	523,946,1116,1484
'\\[.*\\]\\sSONAME\\s+([^\\s]+)'	287,602,1509,1580
"^(\\w[\\s\\w'.-]*)(\\((.*)\\))?"	1263,1290,1580,1594
'^\\s*(?P<self>\\s+\\[self\\])?$'	851,1269,1561,1576
'#define __NR_(\\w*)\\s*([0-9]*)'	523,946,1116,1484
'^#!.*pythonw?[0-9.]*([ \t].*)?$'	1263,1290,1580,1594
'rgb\\s*\\(\\s*([0-9,\\s]+)\\s*\\)'	568,807,1144,1247
'(^[ \\t]*>>> |^[ \\t]*\\.\\.\\. )'	422,602,747,1517
'^([a-z]{2,3}(_[a-z]{2,8})*)\\.py$'	147,162,181,1087
'(tag:blogger.com,1999:blog-)(\\w*)'	254,438,594,790
'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'	287,602,1509,1580
'set\\s+([-a-zA-Z0-9]+)\\s+(.+)\\s*$'	287,602,1509,1580
'const.*char.*versionString\\[\\].*='	503,656,906,1404
'#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
'^\\s*(else|elif|except|finally).*\\:'	433,927,1003,1202
'(^|\\n)[ ]{0,3}:[ ]{1,3}(.*?)(\\n|$)'	236,247,919,1007
'^\\s+([_a-zA-Z][a-zA-Z0-9_.]*)\\s*.*?'	356,538,1247,1288
'(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'	568,807,1144,1247
'#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'	251,498,1087,1555
'<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'	1263,1290,1580,1594
'([\\d\\w\\-_]+)\\s+(\\d+)/(tcp|udp)(.*)'	523,946,1116,1484
'([^\\w\\s]*)\\s*(\t|  )\\s*([^\\w\\s]*)'	304,662,842,1322
'#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
u'extra\\s*==\\s*("([^"]+)"|\'([^\']+)\')'	1263,1290,1580,1594
'^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'	552,606,800,1469
'^\\s+<spontaneous>\\s*$|^.*\\((\\d+)\\)$'	851,1269,1561,1576
'^\\s*(def|class|else|elif|except|finally)'	433,927,1003,1202
'\\s*SET\\s+(?:(?:GLOBAL|SESSION)\\s+)?\\w'	113,1415,1469,1580
'^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'	1263,1535,1580,1594
'([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'	1012,1086,1158,1580
'^[= ]([*> ]) ([^- ]+)-([^ ]+) \\[ (.*) \\]'	614,947,996,1491
'\\-\\-[A-Za-z][\\w\\-]*(\\.[\\w\\-]+)*\\=.*'	422,747,1517,1580
'^\\s*T_VIRTUAL_CALL: (\\d+) calls on (.*):$'	51,475,509,604
'^\\s*#(\\d+)\\s*(.*) \\[(0x[0-9A-Za-z]+)\\]$'	51,475,509,604
'((?:\\((?P<id>[0-9]+|RX|CR)\\))*)(?P<str>.+)?'	927,986,1003,1431
'\\s*(?:UPDATE|INSERT|CREATE|DELETE|DROP|ALTER)'	113,1415,1469,1580
'.*: warning: overriding commands for target .+'	1116,1451,1471,1480
'<meta.*?content=["\\\']*;?charset=(.+?)["\\\'>]'	1263,1535,1580,1594
'(tag:blogger.com,1999:blog-)(\\w*)(.post-)(\\w*)'	254,438,594,790
'(tag:blogger.com,1999:blog-)(\\w*)(.page-)(\\w*)'	254,438,594,790
'\\n\\s*ACCEPTS:\\s*((?:.|\\n)*?)(?:$|(?:\\n\\n))'	642,776,971,1203
'^([\\s*,;/])([\\?\\w\\.\\-\\+]+\\w*\\s*)(\\(?.*$)'	422,602,747,1517
'((User|Msg|MsgAssertion)Exceptio(n))\\(( *)(\\d+)'	503,656,906,1404
'@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?'	287,602,1054,1509
'(?i)([\xe1\xe9\xed\xf3\xfa]).*([\xe1\xe9\xed\xf3\xfa])'	305,1025,1138,1505
'#define __NR_(\\w*)\\s*\\(__NR_timer_create\\+(\\w*)\\)'	523,946,1116,1484
'.*[\\\\/]([^\\\\/]+)[\\\\/][^\\\\/]+[\\\\/]scons[\\\\/]?$'	592,896,1301,1403
'#define __ARM_NR_(\\w*)\\s*\\(__ARM_NR_BASE\\+\\s*(\\w*)\\)'	523,946,1116,1484
'^\\s*T_GENERIC_PROTOCOL: (\\d+) calls to (.*) with a (.*):$'	51,475,509,604
'#define __NR_(\\w*)\\s*\\(__NR_SYSCALL_BASE\\+\\s*(\\w*)\\)'	523,946,1116,1484
"^# Your branch is (ahead of|behind) '(.*)' by (\\d+) commit"	212,1031,1154,1156
'<key>ProductUserVisibleVersion</key>\\s*<string>(.*?)</string>'	1263,1290,1580,1594
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?$\n'	1263,1290,1580,1594
'^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)( *(?P<argument> .+))?'	700,1120,1269,1498
'\\s*(?:UPDATE|INSERT|CREATE|DELETE|DROP|ALTER|LOAD +DATA|REPLACE)'	113,1415,1469,1580
'(?P<prefix>[|+ ]*)(?P<samples>\\d+), (?P<symbol>[^,]+), (?P<image>.*)'	851,1269,1561,1576
'^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'	119,1007,1015,1032
'^([\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?\\.)*[\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?$'	422,747,1517,1580
'\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'	251,498,1087,1555
'(\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\x1b\\][0-9];.*?\x07|[\x01-\x0f]|\x1b\\([AB0])'	385,640,1149,1583
'(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	381,1054,1087,1580
'(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'	236,247,919,1007
'(?ms)^(?P<package>[^#]\\S+)[\t ]+(?P<question>\\S+)[\t ]+(?P<type>\\S+)[\t ]+(?P<value>[^\n]*)$'	614,947,996,1491
'([^\\"\'=\\s])(\\s*)#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])'	568,807,1144,1247
'^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'	1007,1015,1032,1300
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+)\n\\.whl$\n'	1263,1290,1580,1594
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quot;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	552,606,800,1469
'\n                \'.*?\' |    # single quoted strings or\n                ".*?" |    # double quoted strings or\n                \\w+   |    # identifier\n                \\S         # other characters\n                '	422,602,747,1517
'\n(rel\\s*=\\s*(?:"(?P<rel1>[^"]*)"|\'(?P<rel2>[^\']*)\'|(?P<rel3>[^>\\s\n]*))\\s+)?\nhref\\s*=\\s*(?:"(?P<url1>[^"]*)"|\'(?P<url2>[^\']*)\'|(?P<url3>[^>\\s\n]*))\n(\\s+rel\\s*=\\s*(?:"(?P<rel4>[^"]*)"|\'(?P<rel5>[^\']*)\'|(?P<rel6>[^>\\s\n]*)))?\n'	1263,1290,1580,1594
'\n                            ^\\s*\n                            (?: (?P<week>   \\d+ (?:\\.\\d*)? ) \\s* [wW]  )? \\s*\n                            (?: (?P<day>    \\d+ (?:\\.\\d*)? ) \\s* [dD]? )? \\s*\n                            (?: (?P<hour>   \\d+ (?:\\.\\d*)? ) \\s* [hH]  )? \\s*\n                            (?: (?P<minute> \\d+ (?:\\.\\d*)? ) \\s* [mM]  )? \\s*\n                            (?: (?P<second> \\d+ (?:\\.\\d*)? ) \\s* [sS]  )? \\s*\n                            $\n                            '	614,947,996,1491
'\n    \\A\\s*                      # optional whitespace at the start, then\n    (?P<sign>[-+]?)            # an optional sign, then\n    (?=\\d|\\.\\d)                # lookahead for digit or .digit\n    (?P<num>\\d*)               # numerator (possibly empty)\n    (?:                        # followed by\n       (?:/(?P<denom>\\d+))?    # an optional denominator\n    |                          # or\n       (?:\\.(?P<decimal>\\d*))? # an optional fractional part\n       (?:E(?P<exp>[-+]?\\d+))? # and optional exponent\n    )\n    \\s*\\Z                      # and optional whitespace to finish\n'	689,1054,1087,1580
'#.*$'	103,130,249
',.*$'	257,1319,1448
'.*}.*'	1007,1015,1032
'\\..*'	812,1114,1161
'^\\t*'	52,188,597
'.*\\\\'	1007,1015,1032
'^@\\S*'	531,832,846
'^\\s*@'	531,832,846
'AC(.*)'	925,936,1104
'[\\W]*'	1007,1015,1032
'<(.*)>'	557,1223,1420
'^@(.*)'	241,874,1249
'</*key>'	163,927,1003
'^([ ]*)'	819,1317,1501
'^rebt.*'	1007,1015,1032
'^quit.*'	1007,1015,1032
'^>(.*)$'	1007,1015,1032
'o:(.*)s'	560,1317,1501
'(#.*)?$'	1007,1015,1032
'^\\s+.*'	557,1223,1420
'^.*:\\$'	241,874,1249
'^#!(.*)'	1007,1015,1032
u'.*?\\*/'	304,1025,1322
'.*\\.zip'	1007,1015,1032
'.*\\.exe'	1007,1015,1032
'.*\\.dmg'	1007,1015,1032
'\\\\*\\n'	1007,1015,1032
'\\\\*\\#'	1007,1015,1032
'([^-]*)-'	241,874,1249
'\\[.*\\]'	83,184,1569
'.*\\.py$'	518,787,1232
'\\$\\$.*'	592,896,1403
'.*[0-9]$'	1121,1320,1355
'\\)\\s*$'	757,1087,1248
'[Tt ].*$'	813,927,1003
'^<(.*)>$'	241,874,1249
'^.*\\{\\{'	0,139,785
'^\\[.*\\]'	743,1269,1498
'([^.]*).*'	241,874,1249
'<![^<>]*>'	330,413,1076
'.*?(\\d+)'	1007,1015,1032
'(\\S+);.*'	1007,1015,1032
'^$|^\\s*#'	1630,1632,1639
'.*error.*'	1007,1015,1032
'^push .*$'	1007,1015,1032
'^pull .*$'	1007,1015,1032
'220.*\r\n$'	557,1223,1420
'\\s*=?\\s*'	1248,1263,1488
'(""")\\s*$'	498,633,1235
"(''')\\s*$"	498,633,1235
'.*<(.*)>.*'	1007,1015,1032
'<ci.*</ci>'	122,1015,1032
'num_dim.*='	262,267,268
'(.*):(<.*)'	241,874,1249
'#egg=(.*)$'	1033,1263,1290
'(.*)//(.*)'	241,874,1249
'^Error:.*$'	560,1317,1501
'"([^"]*)",?'	1630,1632,1639
'^/[-\\w/]*$'	24,25,147
u'^.*(\\s+)$'	304,1025,1322
'^uninst .*$'	1007,1015,1032
'<h1>.*</h1>'	247,919,1007
'^BLOCK (.*)'	262,267,268
'\\s*\\|\\s*'	941,1248,1488
'<(.*):(.*)>'	241,874,1249
'num_elem.*='	262,267,268
'(([^:]+::)*)'	1007,1015,1032
'\\%\\s+(.*)$'	1007,1015,1032
'\\d;\\s*url='	625,997,1126
'^["<].*[>"]$'	0,139,785
'lib(.*)\\.so'	518,757,787
'[^.]*\\.(.*)'	241,874,1249
'num_nodes.*='	262,267,268
'((?:\\w|-)*)'	533,1007,1172
u'\\s*\\n\\s*'	943,1158,1247
'.* = (.*);\n'	515,1245,1373
'.*node(\\d+)'	560,1317,1501
'(<[^>]*>)(.*)'	241,874,1249
'<tchar=(.*?)>'	531,832,846
'\\s*(\\#.*)?$'	1007,1015,1032
'.*\\.tar\\.gz'	1007,1015,1032
'.*\\.tar\\.bz'	1007,1015,1032
'<TCHAR=(.*?)>'	531,832,846
'\\s*/[/*]\\s*'	557,1223,1420
'.*\\s(\\d+).*'	262,267,268
'tap,id=(.*?),'	560,1317,1501
'\\{([^}]*)\\}'	1263,1267,1580
'/\\*(.*?)\\*/'	194,199,289
'<key>.*?</key>'	163,927,1003
'<li>(.*?)</li>'	52,188,597
'.*\\((.*)\\).*'	1007,1015,1032
'[ \t]*\n[ \t]*'	526,1046,1642
'length (\\d*):'	560,1317,1501
'\\[MAP(.*?)\\]'	1007,1015,1032
'\\[LOC(.*?)\\]'	1007,1015,1032
'(.*){(.*)}(.*)'	642,971,1203
'^([ \\|0-9-]*)'	1007,1015,1032
'.*\\[(.*)\\].*'	560,1087,1580
'\\s*(\\d+)\\s*'	1087,1580,1621
'offset (.*) sec'	560,1317,1501
'\\s+\\((.*)\\)$'	1223,1420,1495
'([a-zA-Z0-9]*)$'	515,1245,1373
'^<\\?xml[^>]*?>'	220,1003,1247
'(.*)-(?:>?)(.*)'	1007,1015,1032
'^flags\\s*:(.*)'	560,1317,1501
'[Vv]ersion .*?,'	560,1317,1501
'[+-]?(\\d*)(.*)'	247,919,1007
'^[\'"](.*)[\'"]$'	308,743,1216
'[\\+-]?[0-9\\.]*'	813,927,1003
'^(.*)`(.*)`(.*)$'	642,971,1203
'^(.*){(.*)}(.*)$'	642,971,1203
'^ *(.*) *( *) *$'	12,1054,1087
'^--out-xml=(.*)$'	241,874,1249
'__FAIL(.*)__FAIL'	1007,1015,1032
'<key>(.*?)</key>'	163,927,1003
'^(.*)<(.*)>(.*)$'	642,971,1203
'/_ah/upload/(.*)'	1004,1075,1495
'^(\\d+(\\.\\d+)*)'	1263,1580,1594
'^[\\w\\.\\-\\/]*$'	122,1015,1032
u'^\\d+(\\.\\d+)*$'	1263,1580,1594
'^(.+)\\.([^\\.])*'	241,874,1249
'(?<=\\W)\\w+\\W*$'	518,757,787
'\\s*(-?\\d+)\\s*$'	12,1087,1580
'^\\.\\.(/\\.\\.)*$'	287,602,1509
'(.*)\\[(.*)\\](.*)'	642,971,1203
'(Jamfile<.*>)%(.*)'	241,874,1249
'^[+/0-9A-Za-z]*=*$'	1007,1015,1032
'^([^<]*)(/(<.*))?$'	241,874,1249
'(\\w+)(\\(.*?\\))?'	113,1415,1469
'(.*?)([1aAiI])(.*)'	518,757,787
'--test-config=(.*)$'	241,874,1249
'(\\s*\\=)|(\\s*\\:)'	119,225,976
'/\\*(?:\\s|.)*?\\*/'	531,832,846
'.*libtdsodbc.*\\.so'	1415,1469,1580
'.*\\s=\\s(\\d+)\\s;'	262,267,268
'(-[a-zA-Z])([0-9]*)'	560,1317,1501
'--user-config=(.*)$'	241,874,1249
'^(.*?)(-dev|-\\d.*)'	1033,1263,1290
'/(tools|libs)/(.*)$'	241,874,1249
'<files>\\s*</files>'	122,1015,1032
'\\s*define|\\s*endef'	1007,1015,1032
'.*libessqlsrv.*\\.so'	1415,1469,1580
'([^\\(]*)(\\(.*\\))?'	241,874,1249
'^content-type: (.*)$'	557,1223,1420
'\\*([^,]+)(?:,(.*))?'	262,267,268
'^##AGENT-WARNING##.*'	1007,1015,1032
'^(.*)\\[(.*)\\](.*)$'	642,971,1203
'MemFree:\\s+(\\d+).*'	560,1317,1501
'.*brick_.*?(n?)_wg.*'	262,267,268
'^(\\s*)()(\\S+)(.*$)'	747,1517,1580
'__startuptime,(\\d*)'	1007,1015,1032
'<type_convert=(.*?)>'	531,832,846
'^[^ ]*/([^ ]+)( .*)?'	1007,1015,1032
'\\s+(-\\S+)\\s+(.*)$'	1223,1420,1495
'TREEVIS ([^ ]+) (.*)$'	1007,1015,1032
'(?:[^:]*\\.)?([^:]*:)'	1054,1087,1580
'\\sfile:\\s+"([^"]*)"'	642,776,1203
'ustar *\x00|[ \x00]*$'	1269,1469,1498
'\\s+(-\\S+):\\s+(.*)$'	1223,1420,1495
'^([^<]+)[<]?(.*)[>]?$'	241,874,1249
'^.*-copy(?:-(\\d)*)?$'	1121,1320,1355
'.*(\\.ipy|\\.py[w]?)$'	422,747,1517
'00000000 <(v8dbg_.*)>:'	467,505,1466
'^(.*?)(?:-dev|-\\d.*)$'	1263,1290,1580
'([A-Z]+)\\s+:\\s+(.*)$'	1183,1506,1510
'[a-zA-Z_][a-zA-Z_0-9]*'	53,1246,1540
'\\bCXXTEST_CODE\\s*\\('	0,139,785
'(\\/+[a-z]*\\/[a-z]*$)'	560,1317,1501
'\\s*,?\\s*new Array\\('	147,181,456
'<path\\[(\\d+)\\]>(.*)'	1004,1075,1495
'(\\w+)-(\\w+)\\ : (.*)'	560,1317,1501
'.*(\\.so|\\.py[cod]?)$'	422,747,1517
'^\\s*([A-Z_]+): (\\d+)'	462,690,1119
'VmRSS:[\\t ]*(\\d+) kB'	560,1317,1501
'^(\\s*)(\\S*\\s*)(.*$)'	422,602,747
'^(.*)~([+-][0-9]{2})00$'	1269,1469,1498
'VmSwap:[\\t ]*(\\d+) kB'	560,1317,1501
"AddLocation\\((.*?')\\)"	147,181,456
'(([^-/]+)-?([^/]+)?)/?.*'	241,874,1249
'^\\s*([A-Z_]+) = (\\d+)$'	462,690,1119
'<link(?P<linkinner>.*?)>'	278,432,1366
u'\\s*/\\*.*(?!\\*/\\s*)$'	304,1025,1322
'^\\s*finally:\\s*(#.*)?$'	1269,1335,1498
'__(\\w+?)__\\s*=\\s*(.*)'	951,1176,1576
'0 INFO SimpleTest START.*'	1007,1015,1032
'.*OOM max count: (\\d+).*'	1007,1015,1032
'^([a-z\\._]*) = ([0-9]*)$'	1183,1506,1510
'From .*?([\\w.]+@[\\w.]+)'	1007,1015,1032
'.*_runfac(\\d*\\.?\\d*).*'	262,267,268
'(^|[\\W_])sample\\d*[\\W_]'	1269,1469,1498
'(.*):\t?........ (.) (.*)$'	12,1054,1087
'^[ \t]*import[ \t]+([^#]+)'	12,1054,1087
'^[http|file|chrome|about].*'	1007,1015,1032
'([^\\(]*)(\\((.*)%(.*)\\))?'	241,874,1249
'wg_(lech03fig.*?)_h(\\d*).*'	262,267,268
'VERSION\\s*=\\s*\\((.*?)\\)'	951,1176,1576
'^(\\s*)(def|class)(\\s.*)?$'	498,633,1235
'From .*?([\\w.]+\\@[\\w.]+)'	1007,1015,1032
u"^((?:'[^']*'|[^'])*?)--.*$"	1012,1086,1580
'^\\s*<CxxTest\\s+world>\\s*$'	0,139,785
'^([a-zA-z0-9]+)=([\\S\\s]*)$'	308,743,1216
'^([^.]+)[.]([^.]+)[.]?([^.]*)'	241,874,1249
u'\\s*(?:/\\*.*\\*/\\s*|//.*)$'	304,1025,1322
'user_pref\\("(.*)",\\s(.*)\\)'	462,690,1119
'(\\S+);\\s*filename="([^"]+)"'	1007,1015,1032
'\\s*(\\d+)\\s*,\\s*(\\d+)\\s*'	1087,1580,1621
'\\w*:\\w*:\\w*:\\w*:\\w*:\\w*'	560,1317,1501
'%.*coding[:=]\\s*([-\\w\\.]+)'	317,428,466
'HTTP\\((\\.\\.(\\/\\.\\.)*)\\)'	1007,1015,1032
'/dev/cdrom-\\w+|/dev/cdrom\\d*'	560,1317,1501
'^(.*?)\\s?((?:ssh\\-|ecds).+)$'	947,996,1491
'^\\s*(([A-Z][a-z]*)+) = (\\d+)'	462,690,1119
'(?P<class>OpenLayers\\..*?)\\('	60,881,928
'<a\\s*href="(.*)"\\s*>(.*)</a>'	52,188,597
'wg_hcyl_pin_(\\d*).*_h(\\d*).*'	262,267,268
'^\\s*<CxxTest\\s+preamble>\\s*$'	0,139,785
'\\s*\\#\\s*include\\s+<cxxtest/'	0,139,785
'.*?(?:inet addr:|inet )(.*?)\\s'	947,996,1491
'= *([0-9]*.+[0-9]*) ([a-zA-Z]*)'	560,1317,1501
'if.*?==\\s+(None|False|True)\\b'	147,181,1087
'^.*\\(\\s*(.*)\\s*\\).*\\](.*)$'	262,267,268
'(.*)_\\+?wg_.*_(h.*?)_o(\\d*).*'	262,267,268
'^([>\\w\\-]+)\\s*:\\s*(.*)\\s*$'	1007,1015,1032
'^\\s+File .* in runUntilCurrent'	557,1223,1420
'BUG:.*---\\[ end trace .* \\]---'	560,1317,1501
'.*note:.*is clipping its content'	534,1007,1466
'.*https:\\/\\/aus2.mozilla.org.*'	1007,1015,1032
'^[ \t]*from[ \t]+([^ \t]+)[ \t]+'	12,1054,1087
'Registering archive: (\\S+)\\s*$'	122,1015,1032
'^\\s*#\\s*include\\s*<(gtest/.+)>'	592,896,1403
u'(.*)\\s*(?://.*|/\\*.*\\*/\\s*)$'	304,1025,1322
'(?:py.*-)?([\\d\\.]+)(?:-(\\w+))?'	1415,1469,1580
'^([ \\t]*>>> |^[ \\t]*\\.\\.\\. )'	422,747,1517
"\\s+\\(default:\\s+\\'(.*)\\'\\)$"	1223,1420,1495
'<toolset.*version>(\\d+)[.](\\d*)'	241,874,1249
'name=[\'"]{0,1}([-\\w\\.]*?)[\'"]'	247,919,1007
'Firefox version: (?P<ffver>.*)\\n'	1007,1015,1032
'(\\d+),\\s*(.+),\\s*(.+),\\s*(.+)'	262,267,268
'\\$\\(([a-zA-Z_][a-zA-Z0-9_]*)\\)'	534,1007,1466
"invalid literal for int().*: '?'?"	12,1087,1580
'^.*<(()/[\\d\\w_\\+\\.\\-/]*)>.*$'	523,1116,1484
'/(tools|libs)/(.*)/(test|example)'	241,874,1249
'^[0-9A-Za-z+/]*[0-9A-Za-z+/=]{,2}$'	557,1223,1420
'^[a-zA-Z_][a-zA-Z0-9_]*(\\(.*?\\))'	252,1087,1495
'\\s*(-?\\d+)\\s*-\\s*(-?\\d+)\\s*$'	12,1087,1580
'(?P<address>.*?)(?:(?: \\(.*?@)|$)'	147,181,456
'undefined symbol: (.*)\t\\((.*)\\)'	515,1245,1373
'function (?:\\s|.)*?end function.*'	531,832,846
'.*public static final class id {.*'	1007,1015,1032
'.*?(?:HWaddr|ether) ([0-9a-fA-F:]+)'	947,996,1491
'^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'	768,825,1007
'^(.*?)\\s*<(?:URI:|URL:)?([^<>]+)>$'	757,1087,1330
'.*?(?:Bcast:|broadcast )([\\d\\.]+)'	947,996,1491
'(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'	1007,1015,1032
'^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'	1007,1015,1032
'UpdateAmbiguousList\\(\\[(.*?)\\]\\)'	147,181,456
'([^;?#]*)(;[^?#]*)?(\\?[^#]*)?(#.*)?'	107,1225,1638
'Firefox builddate: (?P<ffdate>.*)\\n'	1007,1015,1032
'^#define ASYNC_PROTOCOL_MAJOR\t*(.*)'	515,1245,1373
'Sync version: (?P<syncversion>.*)\\n'	1007,1015,1032
'window.location.replace\\("(.*)"\\);'	625,997,1126
'^\\s*(([A-Z][a-z]*)+),?\\s*# (\\d+)$'	462,690,1119
'__start_tp_report(.*)__end_tp_report'	1007,1015,1032
'\\s*"((\\\\.|.)+?)"\\s*=\\s*"(.+?)";'	194,199,289
'(?<!\\\\)(\\s*\\=)|(?<!\\\\)(\\s*\\:)'	119,225,976
'([0-9]+) INFO TEST-START . Shutdown.*'	1007,1015,1032
'([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'	947,996,1491
'\\$\\{([^\\d}][^}:]*)(?::([^}]*))?\\}'	52,188,597
'^#define.*ENGINE_VERSION\t*"DOOM (.*)"'	515,1245,1373
'^struct\\[([a-zA-Z_][a-zA-Z0-9_]*)\\]$'	768,825,1007
'\\[(?P<type>[WE])(?P<remainder>.*?)\\]'	167,640,662
'subroutine (?:\\s|.)*?end subroutine.*'	531,832,846
'(.*[Jj]amfile\\.v2)|(.*[Bb]uild\\.jam)'	241,874,1249
'^multipart/byteranges; boundary="(.*)"$'	557,1223,1420
'.*(\\d\\.\\d) \\d+ \\(experimental\\).*'	1007,1015,1032
'\\b(E?TSM?_(ASSERT[A-Z_]*|FAIL))\\s*\\('	0,139,785
'\\bCXXTEST_SUITE\\s*\\(\\s*(\\w*)\\s*\\)'	0,139,785
"Success: created profile .* at '([^']+)'"	1007,1015,1032
':\\s+\\(.*?\\)\\s+[-0-9x+]+\\s+[-0-9+]+$'	1025,1322,1505
'([^<>= ]+)(?:\\s*([<>=]{1,2})\\s*(.*))?$'	242,930,1323
'^/?[a-zA-Z0-9_.-]+(/[a-zA-Z0-9_.-]+)*/?$'	1121,1320,1355
'label(\\s*)=(\\s*)"\\s%tmp(.\\w*)*(\\s*)"'	0,785,1243
'^const int ASYNC_PROTOCOL_MINOR\t*= (.*);'	515,1245,1373
'multipart/byteranges; boundary="[^"]*"\\Z'	557,1223,1420
'(?:[^\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	640,945,1505
'^#T (gmake |pymake )?([a-z-]+)(?:: (.*))?$'	1007,1015,1032
'.*lib(stdc\\+\\+|gcc_s).* => (.*) \\(.*\\)'	515,1245,1373
'(\\s*def\\s+\\w+\\s*)\\[(html|plain)\\](.*)'	498,602,1495
u'<img [^>]*\\bid="plugin_obj_(\\d+)"[^>]*/?>'	1121,1320,1355
'^https?://github.com/([^/]+)/([^/]+)($|/.*$)'	1322,1326,1505
'^@[Rr][Ee][Ll][Aa][Tt][Ii][Oo][Nn]\\s*(\\S*)'	531,832,846
'\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'	1025,1215,1423
'(?:.*\\()?(?P<name>[-\\w*\\.]+)(?:,|\\)?.*)?'	257,1319,1448
'^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'	557,1223,1420
'^([,;/%?]|!!?|\\s*)\\s*([\\w\\.]+)(\\s+.*$|$)'	422,602,747
'(?:")?Dup(?:licate)?(?:d)?(?:")? of .*?(\\d+)'	1007,1015,1032
'^\\s+File .*erroneous\\.py", line \\d+, in go'	557,1223,1420
'^([ \t]*class +[a-zA-Z0-9_]+) *( *) *((=.*)?):'	12,1054,1087
'^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'	696,1025,1322
'(subroutine|function)\\s*(?P<name>\\w+)\\s*\\('	531,832,846
'.*?href\\s*=\\s*[\\\'"](?P<href>.*?)[\\\'"].*?'	278,432,1366
'{markers: (?P<markers>\\[.*?\\]),\\s*polylines:'	147,181,456
'.*?(?:inet6 addr: (.*?)/|inet6 )([0-9a-fA-F:]+)'	947,996,1491
'^@[Aa][Tt][Tt][Rr][Ii][Bb][Uu][Tt][Ee]\\s*(..*$)'	531,832,846
u'^\\s*(?:(?:else )?if|for|switch|while|with)(\\()'	304,1025,1322
'^\\s+File .*erroneous\\.py., line \\d+, in setUp$'	557,1223,1420
'^\\s*public static final int ([A-Z_]+) = (\\d+);$'	462,690,1119
'\\b(throw|try|catch|TSM?_ASSERT_THROWS[A-Z_]*)\\b'	0,139,785
'[-+]?(\\d+(\\.\\d*)?|\\d*\\.\\d+)([eE][-+]?\\d+)?'	758,1246,1540
'__start_page_load_report(.*)__end_page_load_report'	1007,1015,1032
'(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'	262,267,268
'Received: From yyy.com \\(\\[.*\\]\\) by localhost;'	557,1223,1420
u'^([a-z0-9.-]+|\\[[a-f0-9]*:[a-f0-9:]+\\])(:\\d+)?$'	1012,1158,1580
'(TARGET_XPCOM_ABI|OS_TARGET|MOZ_DEBUG)\\s*=\\s*(.*)'	1007,1015,1032
'^(.+)[ \\._\\-]([0-9]{1})([0-9]{2})[\\._ -][^\\/]*$'	506,1269,1498
'goog\\.provide\\s*\\(\\s*[\'"]([^\\)]+)[\'"]\\s*\\)'	240,343,1336
'goog\\.require\\s*\\(\\s*[\'"]([^\\)]+)[\'"]\\s*\\)'	240,343,1336
'^(?P<timestamp>\\d+) (?P<name>\\S+): (?P<metrics>.*)$'	1183,1506,1510
'^\\s+File .*erroneous\\.py., line \\d+, in test_fail$'	557,1223,1420
'Microsoft SQL Server.*? - (\\d+).(\\d+).(\\d+).(\\d+)'	1415,1469,1580
'^(.+)[ \\._\\-]([0-9]{2})([0-9]{2,3})[\\._ -][^\\/]*$'	506,1269,1498
'\\s*([0-9a-fA-F]+)\\s+([0-9a-fA-F]+)\\s+([0-9a-fA-F]+)'	1007,1015,1032
'^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2}).*?$'	890,1369,1644
'(?P<name>[\\w-]+)\\s*\\(\\s*(==\\s*)?(?P<ver>[^)]+)\\)$'	1263,1580,1594
'^([ \\t]*In \\[\\d+\\]: |^[ \\t]*\\ \\ \\ \\.\\.\\.+: )'	422,747,1517
'.*?(?:Mask:|netmask )(?:(0x[0-9a-fA-F]{8})|([\\d\\.]+))'	947,996,1491
'^(?P<prefix>(\\d+\\.)*\\d+)(?P<c>[ab])(?P<suffix>\\d+)$'	1007,1015,1032
'^@@ -([0-9]*)(?:,([0-9]*))? \\+([0-9]*)(?:,([0-9]*))? @@'	696,1025,1322
'^[ \t]+def +[a-zA-Z0-9_]+ *( *self *, *(( *(.*) *)) *) *:'	12,1054,1087
u'\\s*function\\s*(?P<name>[a-zA-Z_$]\\w*)?\\(.*\\)\\s*\\{?'	304,1025,1322
'.*?(?:inet6 addr: [0-9a-fA-F:]+/(\\d+)|prefixlen (\\d+)).*'	947,996,1491
'(.*)\\.([0123456789]+)\\.([0123456789]+)\\.([0123456789]+)$'	241,874,1249
'^(.*?)test phase (?P<matchphase>\\d+): (?P<matchstatus>.*)$'	1007,1015,1032
'href\\s*=\\s*"([^>"]*)"[^>]*title\\s*=\\s*"View larger image"'	813,927,1003
'^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'	12,1087,1580
'graph(?P<graphNumber>\\d+)_(?P<res>.*?)_?(?P<optNumber>\\d+)?$'	1099,1129,1472
'released on (\\w+\\s+\\d+\\w+\\s+\\d+)(?:, codename (.*))?(?i)'	337,992,1112
'^\\s+File .*erroneous\\.py., line \\d+, in testHiddenException$'	557,1223,1420
'^([^/]|/[^/])*\\bvoid\\s+([Tt]est\\w+)\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'\\bstatic\\s+\\w+\\s*\\*\\s*createSuite\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'^([0-9\\.]+)\\s*([0-9\\.]+)\\s*([0-9\\.]+)\\s*([0-9]+)\\/([0-9]+)'	1183,1506,1510
'(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'	381,1054,1087
'.*\\n.*f_edx:(.*)\\n.*f_ecx:(.*)\\n.*extf_edx:(.*)\n.*extf_ecx:(.*)'	560,1317,1501
'(?:(?P<jarfile>[\\w\\d.\\-\\_\\\\/]+).jar\\:)|(?:\\s*(\\#.*)?)\\s*$'	1007,1015,1032
'\\<[a-zA-Z0-9\\-\\_\\.\\="\'\\/\\\\%\\!\\@\\#\\$\\^\\&\\*\\(\\) ]*\\>'	1007,1015,1032
'\\bstatic\\s+void\\s+destroySuite\\s*\\(\\s*\\w+\\s*\\*\\s*\\w*\\s*\\)'	0,139,785
u'^\\s*(?:@outlet\\s+)?[a-zA-Z_$]\\w*\\s+[a-zA-Z_$]\\w*\\s+@accessors\\b'	304,1025,1322
u'^\\s*var\\s+[a-zA-Z_$]\\w*\\s*=\\s*function\\s+([a-zA-Z_$]\\w*)\\s*\\('	304,1025,1322
'^\\s*blocktrans(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?(?:\\s+|$)'	849,878,1634
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!\\s*(?P<cmd>.*)'	422,747,1517
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%\\s*(?P<cmd>.*)'	422,747,1517
'\\bclass\\s+(\\w+)\\s*:\\s*public\\s+((::)?\\s*CxxTest\\s*::\\s*)?TestSuite\\b'	0,139,785
'^((?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	251,498,1267
'(\\d+) bytes \\(\\d+\\.*\\d* \\w*\\) copied, (\\d+\\.*\\d*) s, \\d+\\.*\\d* \\w./s'	560,1317,1501
'([=!]=|is|is\\s+not)\\s*type(?:s\\.(\\w+)Type|\\(\\s*(\\(\\s*\\)|[^)]*[^ )])\\s*\\))'	640,945,1505
'\\b(std\\s*::|CXXTEST_STD|using\\s+namespace\\s+std\\b|^\\s*\\#\\s*include\\s+<[a-z0-9]+>)'	0,139,785
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(\\{)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	304,1025,1322
'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?\\s*'	849,878,1634
u'^(?:\\s*[-+]\\s*\\([a-zA-Z_$]\\w*\\)|@implementation)\\s*[a-zA-Z_$][\\w]*.*?\\s*(\\{)\\s*(?:$|//.*$)'	304,1025,1322
'DOCTYPE\\s+(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	220,927,1469
'^\\(?(?P<re>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?)??(?P<im>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?j)?\\)?$'	518,620,787
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1054,1087,1580
'^\\s*\\d+\\s+(?P<name>\\S+)\\s+(?P<size>-?\\d+)\\s+(?P<bytesLeaked>-?\\d+)\\s+-?\\d+\\s+(?P<numLeaked>-?\\d+)'	1007,1015,1032
'^(cpu[0-9]*)\\s+(?P<user>\\d+)\\s+(?P<nice>\\d+)\\s+(?P<system>\\d+)\\s+(?P<idle>\\d+)\\s+(?P<iowait>\\d+).*$'	1183,1506,1510
'^(syn keyword vimCommand contained|syn keyword vimOption contained|syn keyword vimAutoEvent contained)\\s+(.*)'	147,181,1087
'[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'	1004,1495,1580
'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	220,927,1469
'(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	534,1007,1466
u'(?x)\n        \\s*((continue|do|for|function|if|else|return|switch|while|with)\\b|\\[+\\s*[a-zA-Z_$]\\w*\\s+[a-zA-Z_$]\\w*\\s*[:\\]])\n    '	304,1025,1322
'^(MemTotal|MemFree|Buffers|Cached|SwapCached|Active|Inactive|SwapTotal|SwapFree|Dirty|VmallocTotal|VmallocUser|VmallocChunk):\\s*(\\d+)\\s*kB'	1183,1506,1510
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	1004,1074,1075
'\n                            \\s* ([^\\s;]+) \\s*            #content-coding\n                            (;\\s* q \\s*=\\s* ([0-9\\.]+))? #q\n                            '	1054,1087,1580
'\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'	350,1308,1403
'\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'	332,689,1007
u'(?x)\n        (?P<expression>.*)              # Everything up to the line separator\n        (?P<separator>[,;+\\-/*%^&|=\\\\]) # The line separator\n        \\s*                             # Optional whitespace after\n        $                               # End of expression\n    '	304,1025,1322
u'(?x)\n        (?P<indent>\\s*)         # indent before a var keyword\n        (?P<var>var\\s+)         # var keyword and whitespace after\n        (?P<identifier>[a-zA-Z_$]\\w*)\\s*\n        (?:\n            (?P<assignment>=)\\s*\n            (?P<expression>.*)\n            |\n            (?P<separator>[,;+\\-/*%^&|=\\\\])\n        )\n    '	304,1025,1322
'(?x)\n    ^\n    (?: (\\w+):                     )?  # optional label at start of line\n        \\s* (\\.?\\w+)                   # optional spaces, (pseudo-)opcode\n    (?: \\s+ ([+-]?\\w+ | \\([^)]*\\)) )?  # optional first immediate operand\n    (?: \\s+ ([\\w,-]+  | \\([^)]*\\)) )?  # optional second immediate operand\n    (?: \\s* (?:\\#.*)               )?  # optional spaces and comment\n    $'	1007,1015,1032
'    # mere offset\n                ^\n                &?                                          # possible ampersand\n                (       0                                       # just zero\n                |       [1-9]{1,1}[0-9]*        # decimal\n                |       0[0-7]+                         # octal\n                |       0x[0-9a-f]+                     # hex\n                )\n                $\n                '	1007,1015,1032
'^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'	1183,1506,1510
'(?x)\n        ^ OPDEF \\( (JSOP_\\w+),         \\s*  # op\n                   ([0-9]+),           \\s*  # val\n                   ("[^"]+" | [\\w_]+), \\s*  # name\n                   ("[^"]+" | [\\w_]+), \\s*  # image\n                   (-1|[0-9]+),        \\s*  # len\n                   (-1|[0-9]+),        \\s*  # uses\n                   (-1|[0-9]+),        \\s*  # defs\n                   ([0-9]+),           \\s*  # prec\n                   ([\\w_| ]+)          \\s*  # format\n                \\) \\s* $'	1007,1015,1032
'\n    (?:\n        ([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*list\\(\n            (\n                (?:\n                    \\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                    )\n                    \\s*,\\s*\n                )*\n                (?:\n                    (?:".*?")|              # double quotes\n                    (?:\'.*?\')|              # single quotes\n                    (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                )?                          # last one\n            )\n        \\)\n    )\n'	332,689,1007
'        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=[0-9]|\\.[0-9])        # ...a number (with at least one digit)\n        (?P<int>[0-9]*)          # having a (possibly empty) integer part\n        (\\.(?P<frac>[0-9]*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?[0-9]+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>[0-9]*)         # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'	287,602,1509
'        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'	1054,1087,1580
'    # indirect offset\n                ^\\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \\.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \\)$'	1007,1015,1032
'\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    '	332,689,1007
'^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'	332,689,1007
'a.*'	340,1557
'_.*'	640,662
'/.*'	616,1368
'c.*'	518,787
'\\S*'	1317,1501
'".*"'	826,1557
'(.*)'	1015,1032
', *<'	1263,1580
'\\s.*'	560,1488
'#.*?$'	881,928
'\\s*{'	171,1381
'\\s*-'	171,1381
'100.*'	340,1557
'\r*\n'	602,1054
'/(.*)'	345,383
'".*?"'	182,374
'^.*\\/'	1248,1488
'(.*)\n'	1317,1501
'(Y=.*)'	147,181
'<!--.*'	636,1125
'.*\\*$'	1054,1198
'__.*__'	640,662
"'[^']*'"	1087,1247
'-[^-]*$'	405,1219
'--.*?--'	305,1505
'\\.\\.*'	1269,1498
'^ (.*)$'	1205,1216
'[0-9]*$'	779,1407
'#!.*\\n'	534,1466
'^.*\\\\'	1193,1552
'^(\\w*)'	109,182
'[^\'"]*'	757,1087
'[ -~]*$'	332,689
'\\?(.*)'	1248,1488
'v=(.*)$'	382,386
'{[^}]*}'	1211,1495
'#.*?\\n'	534,1466
'[:;,] *'	757,1087
'(.*)\\('	1317,1501
'.*SUSE.*'	1317,1501
'10[01].*'	340,1557
'\\s*#.*$'	633,1007
'^\\|\\s*'	332,689
u'Robot.*'	1012,1158
'^"(.*)"$'	305,1505
'---\\s*$'	103,130
'.*\\.htm'	109,182
'^.(.*).$'	305,1505
'[:;, ] *'	757,1087
':[0-9]*$'	779,1407
'foo.*bar'	340,1557
'^\\s*#.*'	1088,1621
'\n[ \t]*'	103,130
'(.*)\\*$'	1054,1198
'\\s*,\\s'	113,1469
'<![^>]*>'	1247,1563
'^\\s*\\*'	1025,1322
'</?a.*?>'	169,179
'(-\\w*)$'	109,182
':.{2}-.*$'	1380,1526
'\\[.*?\\]'	110,472
'CPU\\s+.*'	1317,1501
'^[A-Z_]*$'	640,662
u'^[ -~]*$'	623,1181
'"([^"]*)"'	678,1133
'\\(.*\\)$'	757,1087
'\\s*/\\s*'	1248,1488
'.*postgis'	422,1644
'\\s*-{10}'	305,1505
'\\d*(\\S)'	332,689
'</[a-z]*>'	779,1407
'ftp://.*$'	241,1249
'^yt-(.*)$'	386,1181
'<body.*?>'	360,1513
'--+.*?--+'	305,1505
'<br[^>]*>'	169,179
'.*/(\\d+)'	1246,1540
'{([^}]*)}'	757,1248
'\\s*]\\s*'	1248,1488
'/b2g\\s*$'	1010,1014
'^[ \t]*\n'	12,1087
u'Spider.*'	1012,1158
'tray.*open'	1317,1501
'.*foo.*bar'	340,1557
'(\\d+)(.*)'	560,743
'\\s*->\\s*'	1248,1488
'\\s*#(.*)$'	276,771
'^%q.(.*).$'	305,1505
'(RHEL.*PC)'	1317,1501
'\\|(.*)\\|'	241,1249
'</?pre.*?>'	1050,1350
'(\\w+\\W*)'	1007,1301
'(.*//.*?/)'	109,182
'^\\s*\\*+/'	1054,1198
'(\\d*)(:?)'	1223,1420
'({[^{}]*})'	568,1144
'([^-]*-).*'	1246,1540
'\\A\\s*\\Z'	43,107
'^%Q.(.*).$'	305,1505
'\\s*\\[.*$'	308,743
'(!\\S*)(.*)'	171,1381
'^\\s*/\\*.*'	241,1249
':(\\s*)\x02'	757,1087
'[A-Z]*_API '	1054,1198
'\\s*\\}\\s*'	617,1247
'[0-9][} ]*$'	518,787
'{(.*?)}(.*)'	305,1505
'\\n\\s*\\n*'	779,1407
'^0*(?=[01])'	1317,1501
'\n([ \t]*)$'	305,1505
u'\\s*,?\\s*'	689,737
'^VPATH\\s*='	516,529
'\\s*\\{\\s*'	617,1247
'^ *([0-9]+)'	12,1087
'(.*) <(.*)>'	429,1582
'https?://.*'	1269,1498
'&lt;.*?&gt;'	391,872
'[1-9][0-9]*'	12,1087
'\\((.*)\\)$'	251,1468
'\\n[\\t ]*$'	46,1050
'=\\s*"(.*)"'	919,1007
'^\\s*\\/\\/'	1025,1379
'^\\s*\\/\\*'	1025,1379
'^.*\\*/\\s*$'	241,1249
'^\\s*//\\s*$'	241,1249
'^.*_test.py$'	1004,1262
'(.*)[-_](.*)'	1148,1469
'OUTPUT *(.*)'	308,743
'[{ ]*[-+0-9]'	518,787
'^\\s*\\*\\s*'	1054,1198
'%\\((.*?)\\)'	717,1229
'\\s*([-\\+])'	1248,1488
'^(\\s*)<.+> '	1199,1300
'\\s*\\}\\s*$'	305,1505
':\\s*(#.*)?$'	602,1054
'\\s*</table>'	1087,1555
'(.*) cache:$'	1506,1510
'(.*)\\(.*\\)'	109,182
'^.*Abstract.*'	640,662
'^\\s*\\]\\s*$'	1087,1555
'^([+-]) (.*)$'	241,1249
u'.*?\\S\\.\\s'	332,689
'[a-zA-Z]\\w*$'	251,1087
'  (http://.*)'	241,1249
'->\\s*(\\S+)$'	1248,1488
'HOSTNAME=(.*)'	779,1407
'href="(\\S*)"'	109,182
'(.*)\\(.*?\\)'	109,182
'BillID=(\\d*)'	109,182
'^(.+?)(\\d*)$'	518,787
'\\$\\{(.*)\\}'	1501,1644
'[0-9]+,[0-9]*'	332,689
'^([^\t]*)\t\t'	103,130
'^\\s*\\#+\\s*'	305,1505
'^[0-9]+-(.*)$'	103,130
'filename = .*'	757,1087
'\\A[ \\t]*\\Z'	43,107
'default:.*off'	171,1381
'([^#:]*#)(.*)'	251,1087
'^run(.*)Test$'	1004,1262
'\\A#!.*php.*$'	305,1505
'^\\s*\\**\\s*$'	1054,1198
'\\x1b\\[[^m]*m'	153,1301
'\\\\(.*?) (.*)'	1248,1488
'<pre>.*?</pre>'	485,1261
'<a.*?>(.+)</a>'	1263,1290
'^.*?:\\s+(.*)$'	103,130
'!!(.*?)\\.(.*)'	171,1381
'((.*?){(.*?)})'	753,942
'\\s*,\\s*|\\s+'	518,787
'^(.*)(ed|ing)$'	255,1184
';\\s*(--.*?)?$'	1087,1555
'\\A#!.*ruby.*$'	305,1505
'[a-zA-Z_]\\w*$'	757,1087
'\\d+(\\.\\d*)?'	1246,1540
'<a[^>]*\\shref'	757,1087
'^(.*)\\.stgit$'	103,130
'^Pull: (.*)\n$'	103,130
' failed: (.*)$'	1025,1326
'processor\\s*:'	1246,1540
'((^|\\n)\\s*)@'	757,1087
'((^|\\n)\\s*)-'	757,1087
'^.*##(.*)##.*$'	603,1625
'(?s)<!--.*?-->'	126,1454
'^SET_(\\S*)\\('	533,1117
'(.*) \\(\\d\\)'	1269,1498
'\\A#!.*perl.*$'	305,1505
'\\A#!.*node.*$'	305,1505
'(\\S+)\\s*,\\s*'	241,1249
'<map id="(.*?)"'	251,1087
'^\\s*/\\*\\*\\s'	1054,1198
'(filename = ).*'	757,1087
'&(\\S*)\\s*(.*)'	171,1381
'(.*?)\\s*, (.*)'	171,1381
'\\n\\r?[\\t ]*$'	1469,1621
'.*File exists.*'	440,542
'\\s+(.*?\\.inf)'	1317,1501
'^([^:]*):[^:]*$'	103,130
'\\s+(\\S+\\s*)$'	422,1644
'.*subject=\\w+$'	109,182
'^[Mm]akefile.*$'	305,1505
'::(\\s*($|\\n))'	757,1087
'<([^ ]+)(>| ).*'	558,1326
'(.+?)\\((.*)\\)'	602,747
'\\s*\\*\\/\\s*$'	1025,1322
'^[^:]*:([^:]*)$'	103,130
'([_A-Za-z]\\w*)'	1007,1301
'disable.*=.*yes'	171,1381
'(\\n\\s*<\\!--)'	558,1326
'^[0-9]+.[0-9]*$'	1317,1501
'\\s*\n\\s*\n\\s*'	1115,1248
'(\\.dev\\d*).*?$'	531,832
'^\\s*(\\S+)\\s*$'	147,181
'(.*)\\.\\w{3,4}$'	1269,1498
'^rmr: hdfs://.*$'	440,542
'  ([^:]*):  (.*)'	241,1249
'\\n\\s*(\\n|$).*'	757,1087
'\\<(\\d+)\\>(.*)'	1317,1501
'(\\w+)\\s*\\(\\)'	1054,1198
'\\s*[^\\s]+\\s*='	1007,1172
'\\s*(\\w*)\\s*::'	1464,1580
'\\/\\/[^\\n\\r]*'	1025,1322
'([a-z]+://|//).*'	482,579
'tag:.*\\[(.*)\\]'	1004,1262
'([^<]*)(<[^>]*>)'	9,148
'timestamp="(.*)"'	241,1249
'^(.+)<(.+)>(.*)$'	103,130
'^[A-Za-z0-9_-]*$'	539,1186
'^_[_A-Za-z0-9]*$'	640,662
u'.*\\$\\{.+\\}.*'	553,1414
'^#format \\w*\\n'	210,253
'(const)?\\s*int$'	241,1249
'^\\s*(\\w+)\\s*:'	518,787
'\x1b]0;(.*?)\x07'	602,747
'(\\s*[;,\\s]\\s*)'	147,181
'INPUT *(.*\\.aux)'	308,743
'rundll32.*?(\\d+)'	1317,1501
'\\s*(\\d+)  (.*)$'	1506,1510
'<b title="(.*?)">'	386,1181
'.*gtest_main.*\\n'	1007,1301
'@((?:\\w|-)*)(.*)'	533,1007
'^\\s*using fop.*$'	241,1249
'\\((.*?(\\d+))\\)'	777,1534
'[\\D]*(\\d+)\\w*$'	109,182
'^// Copyright .*$'	241,1249
'\\A#!.*python3.*$'	305,1505
'^(.*?)\\s*<(.*)>$'	757,1087
'http://(\\S+)\\s*'	498,1495
',[ ]*([-]?\\d+|n)'	1317,1501
'glWindowPos.*MESA'	533,1117
'([\\\'"])(.*?)\\1'	142,193
'gl.*Program(s|)NV'	533,1117
'Report time: (.*)'	241,1249
'^\\s*@([a-zA-Z]+)'	1025,1322
'[ \\t]*\\.[ \\t]*'	55,908
' *"(.*)" *<.*@.*>'	353,360
'^[A-Z][A-Z_0-9]*$'	516,529
'(.*): reinstated$'	492,1364
'\\A#!.*/\\bsh\\b$'	305,1505
'(fe80::[^\\s|/]*)'	1317,1501
'\\(live[^\\)]*\\)'	110,1431
'(\\S*)\\s*RHEL\\s'	1317,1501
'\\s*\\(.*\\)\\s*$'	251,1087
'(const)?\\s*long$'	241,1249
'call.*mount.*first'	1317,1501
"'(.*?)(?<!\\\\)',?"	1269,1498
'(?i)privat(.*)mail'	746,1378
'[vhs]d[a-z]*[\\d]+'	1317,1501
'clocksource=.*?\\s'	1317,1501
'.*[^.]\\.\\.[^.].*'	958,1308
'(?m)^alias.*virtio'	1317,1501
'\\s*@((?:\\w|-)*):'	533,1007
'^(.*[/#])([^/#]+)$'	210,253
'^(.*)\\*(\\d+)\\*$'	296,819
'(?m)&gdaKey=(.*?)&'	386,1181
'\\w{2}:\\s*"(.*?)"'	194,199
'(<!DOCTYPE[^]]*]>)'	210,253
'^(/\\*.*?\\*/\\s*)'	1339,1418
'(.+?)\\s*:\\s*(.*)'	171,1381
'^(?:get|set)_(.*)$'	1054,1198
'\\s*<((?:\\w|-)*)>'	533,1007
'((\\d*?)\\d{1,3})$'	391,872
'.* FAILED TESTS\\n'	1007,1301
'(const)?\\s*float$'	241,1249
'#[ \\t]*doctest:.*'	757,1087
'\\s+|(?:\\s*,\\s*)'	332,689
'(.*) ([(][^()]*[)])'	251,1087
'\\A#!.*/\\bbash\\b$'	305,1505
'(>(\\s*>)+)(,|\\n$)'	241,1249
'\\\\?(loc)\\(.*?\\)'	391,872
'(?i)pager(.*)nummer'	746,1378
'^[^{]*\\}|\\{[^}]*$'	1263,1580
'([a-zA-Z]):\\\\(.*)'	1246,1540
'(?i)haupt(.*)nummer'	746,1378
'^[\\s\t\n]*([^\n]*)'	640,659
'Node\\s+.*?zone\\s+'	1317,1501
'\\.\\. (.+?)::(.*)$'	251,1087
'^(?P<mark>\\s*)\\^$'	1025,1322
'(.*?)(\\s*[\\]}].*)'	171,1381
'<h3>ERROR: .*?</h3>'	1050,1350
'import (?P<name>.*)'	602,1054
'^(.*)\\|(-?[0-9]+)$'	1004,1495
'(?i)handy(.*)nummer'	746,1378
'^\\[([^]]+)\\](.*)$'	296,819
'class[ \t]+\\w+.*?:'	498,1495
'(?P<schema>.+)://.*'	251,1087
'(const)?\\s*double$'	241,1249
'^[-+]?([0][0-7,]*)$'	171,1381
'(?:^|/)ChangeLog.*$'	1199,1300
'^template\\s*<\\s*$'	241,1249
'from django.*import'	296,819
'\\s*modtime:\\s*(.*)'	241,1249
'\\s*\\((\\d+)\\)\\s*'	1248,1488
'\\[.*\\d+ tests.*\\n'	1007,1301
'^\\s*\n+\\s*\n+\\s*$'	558,1326
'.*\\.(gz|xz|7z|bz2)$'	1317,1501
'^\\s*(>>>|...) (.*)$'	339,1247
'((^|\\n)\\s*\\d+)\\.'	757,1087
'\\s*-\\s*at\\s*-\\s*'	241,1249
'(</?(?:ul|li)[^>]*>)'	1228,1231
'\\d+\\.\\d*(?!\\d*d)'	518,787
'(^|\\\\n)([^\\\\]*)$'	1248,1488
'[a-zA-Z][a-zA-Z0-9]*'	413,1076
'^\\s*using boostbook'	241,1249
'^(.*)\\s*<(.*)>\\s*$'	103,130
'href="/pypi/([^/"]*)'	1263,1290
'.*_?column_(\\d+)_.+'	1415,1580
'(?i)iphone(.*)nummer'	746,1378
'<graphic.*passwd=.*>'	1317,1501
'\\s*\\[auto-props\\]'	1007,1172
'(?<=kernel:)/.*(?:>)'	1223,1420
'(?i)privat(.*)nummer'	746,1378
'@@VERSION>(.*)@@(.*)'	503,656
'^\\s*#\\s*([0-9]+).*'	332,689
'^Working file: (.*)$'	12,1087
'"(.*)"(\\s*\\[.*\\])'	1451,1480
'^.*?(v[\\d\\.]+).*?$'	305,1025
'^\\s*(\\w|\\d)+\\s*$'	241,1249
'\\s*#*\\s*pylint:(.*)'	640,662
'\\t(\\S*)\\s+(\\S*.*)'	533,1117
'^\\s+typedef\\s+.*?;$'	241,1249
'([:\\-\\w]*){([^}]+)}'	753,942
'(.*?) (.*?) as (\\w+)'	293,1614
'.*\\?.*token=(.*)(&?)'	147,181
'^pull with (\\w+).*?$'	305,1025
'\\w+@(\\w+)(\\.\\w+)*'	757,1087
'^(.*)\\.(diff|patch)$'	103,130
'^\\s*using doxygen.*$'	241,1249
':( *\n     \\|\n)\x02'	757,1087
'(.*): mark as failed$'	492,1364
'(?m)(^|[^\\\\])(%.*$)'	86,88
'Capacity:\\s+(\\S+.*)'	1317,1501
'\\A#!.*python(?!3).*$'	305,1505
'.*lib2to3.*\\.pickle$'	1580,1594
'^(\\w+)\\s*=\\s*(.+)$'	173,369
'\\n[\\t ]*\\n[\\t ]*$'	602,747
'(\\w+)(\\.|:)\\s*(.*)'	1248,1488
'locate-root\\s+"(.*)"'	241,1249
'\\[(?P<section>.*)\\]'	1009,1442
'^(.*?)(?:-dev|-\\d.*)'	1263,1290
'^(\\S+)\\s+\\D*(\\d+)'	1010,1014
'<title>(.*?)<\\/title>'	200,960
'(\\s*)(\\\\.+?)(\\s+)$'	1087,1555
'^([A-Z][^A-Z]*?\\.\\s)'	251,1087
'__metrics(.*)__metrics'	1015,1032
'def[ \t]+\\w+\\(.*?\\)'	498,1495
'(?:#|#.*?&)egg=([^&]*)'	1263,1290
'\\/\\*[\\s\\S]*?\\*\\/'	1025,1322
'^@(\\S+)\\s*:(.*\\n?)$'	1054,1198
':([a-zA-Z_\\-]+):(.*)$'	332,689
'/cygdrive/([a-z])/(.*)'	1246,1540
'<[a-zA-Z][a-zA-Z0-9]*/'	413,1076
'^\\s*(\n\r|\r\n|\r|\n)'	173,369
'^\\s*using xsltproc.*$'	241,1249
"^\\d* *([\\w.,'\\s]+)$"	109,182
'[A-Za-z_][A-Za-z0-9_]*'	189,955
'^(\\w+)\\s*:\\s+(\\d+)'	1317,1501
'repo\\=[\\:\\w\\d\\/]*'	1317,1501
'(Saving to:|\\s*\\d+K)'	1025,1326
'^(.*?)([\\[\\*\\?].*)$'	440,542
'disk size:\\s+(\\S+.*)'	1317,1501
'.*-sdk ([a-zA-Z0-9.]*)'	0,1580
'/plugin-container\\s*$'	1010,1014
'"(.*)"\\s*->\\s*"(.*)"'	1451,1480
"location\\.href='(.*?)'"	425,1050
'^[a-z][a-z0-9_$()+-/]*$'	1068,1070
'[A-Za-z_][A-Za-z0-9_]*$'	640,662
'\\\\\\?([^\\.]+)\\.(.*)'	1248,1488
'^\\s*(#|//[^/]|////).*$'	241,1249
'Interim result: *(\\S+)'	1317,1501
'(<\\?xml version.*\\?>)'	210,253
'Disk*.(\\d+)\\s+Offline'	1317,1501
'[/*?]|\\[[^]]*/[^]]*\\]'	737,1315
'#define\\sSET_(\\S*)\\('	533,1117
'-\\*-\\s*(.*?)\\s*-\\*-'	305,1505
'^[-+]?(0|[1-9][0-9,]*)$'	171,1381
'((,|^)\\s*[\\w\\-\\.]+)'	757,1087
'^.*?(\\d+)([\\w\\s]+)?$'	1025,1326
'^([A-Z].*?\\.(?:\\s|$))'	332,689
'(?=.*\\d)(?=.*[a-zA-Z])'	391,872
'.. include:: (.+?)\\s*$'	274,573
'Allocation:\\s+(\\S+.*)'	1317,1501
'.*?_([a-z]*)_pid(\\d*)$'	1015,1032
'.*[/\\\\]bin[.]v2[/\\\\]'	241,1249
'# Command: [/\\w_]+ (.*)'	1116,1141
'^\\s+color:\\s*#4D926F;$'	1021,1468
'(?sm)^! Emergency stop.*'	757,1087
'^\\s*:internal:\\s*$(?m)'	337,1112
'_:([A-Za-z][A-Za-z0-9]*)'	55,908
'(.*?\\W*)(\\w+)(\\W.*?)?'	241,1249
'\\[tag:\\s*([\\S]+)\\s*]'	296,819
'(?s)^(.*)(\\n[ \\t]*)\\Z'	43,107
'.*lib(n?cursesw?)\\.so.*'	1087,1580
'\x1b\\]((?:.|;)*?)(\x07)'	1263,1580
'href\\="((?:\\w|[.-])*)"'	1015,1032
'(?:https?://)?([^/]*)/.*'	386,1181
'\\d+(\\.)?\\d*[eE]-?\\d+'	518,787
'\\d+ failur.*\\d+ librar'	241,1249
'<([^/!][^>]*[^/])>\\s+</'	558,1326
'.*6300ESB Watchdog Timer'	1317,1501
'"(\\\\\\\\|\\\\"|[^"])*"'	251,1087
'<noscript>.*?</noscript>'	391,872
'^(.*)\\s*\\((.*)\\)\\s*$'	103,130
'^modules\\/(\\w+)\\/(.*)$'	296,819
'&(#[0-9][0-9]*)(?![0-9;])'	43,107
'(?ms)By:\\s*<a .*?>(.+?)<'	386,1181
'(const)?\\s*char\\s*\\*?$'	241,1249
'^(?:(\\s*\\(.*\\)\\s*)*:)'	1054,1198
'\\s+([A-Z])\\s+.*CDFS.*\n'	1317,1501
'virtual size:\\s+(\\S+.*)'	1317,1501
'Stream #0.*?(\\d+)x(\\d+)'	391,872
'^[ \t]*[Xv!_][Xv!_ \t]*\n'	12,1087
'\\s*([^=:]+)(=|:)\\s*(.*)'	919,1007
'\\d+\\|[^|]+(?:\\|[^|]+)*'	1269,1498
'VERSION\\s*=\\s*"([^"]+)"'	441,628
'^(}|struct\\s+\\w+);\\s*$'	241,1249
':([a-zA-Z][a-zA-Z0-9_-]*)'	1246,1540
'^(\\d+\\.\\d+)\\.\\d+(.*)'	531,832
'http://([^/]+)(/\\S*)\\s*'	498,1495
'(/[a-zA-Z][a-zA-Z0-9]*)+$'	1004,1495
'^\\$\\w+:\\s+(.*)\\s+\\$$'	241,1249
'(?sm)\\s*Type X to quit.*'	757,1087
'\n.*cloud-stack-version=.*'	779,1407
'(\\s*[\\w\\W]*?\\.)(\\s|$)'	757,1087
'#:([a-zA-Z][a-zA-Z0-9_-]*)'	1246,1540
'(h|s)\\w*(\\d\\d\\d\\d\\d)'	109,182
'(\\w+)\\s*<((\\w|,| |-)+)>'	241,1249
'(.*)\\[([^\\[\\]]+)\\](.*)'	757,1087
'\\w\\w*\\d\\d\\d\\d\\d.htm'	109,182
u'\\?[a-zA-Z_][a-zA-Z0-9_]*'	55,1248
'h(e)l[A-Z]lo.*th[^e]*e(r)e'	171,1381
'/status/object/([0-9]+)/.*'	1225,1638
u'^[JB]?[0-9]+([.][0-9]*)?$'	332,689
'.. code-block:: (.+?)\\s*$'	274,573
'[A-Z]\\w*(?:::[A-Z]\\w*)*$'	305,1505
'\x1b\\[([0-9]+)(;[0-9]+)*m'	332,689
'.*\\.\\.\\.\\s+\\.\\.\\..*'	958,1308
'descr\\s+(\\S+?):\\s*(.*)$'	1248,1488
'^\\s*from flask import\\s+'	337,1112
'(\\A[ \n]*\n)|(\n[ \n]*\\Z)'	757,1087
'(((verify))) *\\(( *)(\\d+)'	503,656
'.*?_([a-z]*)_pid(\\d*).log$'	1015,1032
'["\'](.+)["\']\\s*:\\s*(.*)'	171,1381
"PREFIX\\('.*?'\\)(.*?)\\(.*"	1248,1488
'processor\\s+:\\s*(\\d+)\\n'	1317,1501
'\\[\\[\\!\\!([^\\]]*)\\]\\]'	482,579
'^hadoop.*streaming.*\\.jar$'	440,542
'^(\\w+)\\s*:\\s+(\\d+.\\d+)'	1317,1501
'BuildID\\s*=\\s*"(\\d{10})"'	1015,1032
'(^| )`\\w([^`]*?\\w)?`($| )'	1087,1580
'<(/?)([:a-z0-9_\\-]*)(.*?)>'	425,1050
'repo\\=cdrom[\\:\\w\\d\\/]*'	1317,1501
'([\\w]*)([^:=]*:?=?)([sif]?)'	602,747
'\\[.* test environment .*\\n'	1007,1301
'^\\s*(if|try|elif|while|for)'	433,1003
"\\bsub\\s+(\\w+(::|'))*\\w+$"	305,1505
'^(.*)\\s*<(.*)>\\s*(.*)\\s*$'	103,130
'(?i)<a.*?href.*?="(.+?)".*?>'	169,179
'(?i)gesch\xc3\xa4fts(.*)mail'	746,1378
'p\\s*cnf\\s*(\\d*)\\s*(\\d*)'	518,787
'^\\(\\s*\\*\\s*(.*?)\\s*\\)$'	251,1087
'^\\s*\\(\\s*(.*?)\\s*\\)\\s*'	1054,1198
'^[-+]?[0-9][0-9,]*\\.[0-9]*$'	171,1381
'(a|alpha|b|beta|pre|rc)\\d*$'	391,872
u'[A-Za-z0-9][A-Za-z0-9\\-_]*'	332,689
'(?s)<error (.*?)>.*?</error>'	958,1308
'^([^: \t\n]+):([1-9][0-9]*):'	12,1087
'(?sm)\\A.*?!( LaTeX Error:)?'	757,1087
'^(?P<name>.*?)=(?P<value>.*)'	241,1249
'\\[=+\\] \\d+ tests .* ran.*'	1007,1301
'virtualenv_version = "(.*?)"'	1015,1032
'^\\s*([0-9]+:[0-9]+)\\s*(.+)'	165,1545
'\\s*(\\S.*?\\S)\\s*=\\s*(.*)'	361,1062
'([A-Z]+[a-z]*)([A-Za-z0-9]+)'	1054,1198
'^[modprobe|insmod].*xen-vbd.*'	1317,1501
u'(?<!\\\\)/.*?[^\\\\]/[gims]*'	1025,1322
'LL_CHANNEL\\s=\\s"(.+)";\\s*$'	1246,1540
'^#\\s*next_offset=(\\S+)\\s*$'	1004,1075
'^--([^\\n]+)\\n(.*?)\\n--\\1$'	1087,1580
'range\\([ ]*([-]?\\d+|n).*\\)'	1317,1501
'^(\\d*)\\.(\\d*)\\[(\\d+)\\]$'	518,787
'^\\s+:template:\\s*(.*?)\\s*$'	251,1087
'((\\d*?)(\\d{0,3}?))\\d{1,3}$'	391,872
'<TestThread\\(.*, initial\\)>'	1087,1580
'(\\d+):.*virtio\\d+-input.\\d'	1317,1501
'\\A#!.*(tclsh|wish|expect).*$'	305,1505
'^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'	1317,1501
'\\[\\[([^\\]^!][^\\]]*)\\]\\]'	482,579
'(.*?)([\\\\\\{\\}\\[\\]])(.*)'	305,1505
'({[^{}$]*\\$[^{}$]*\\$[^{}]*})'	518,787
'^[A-Za-z_][A-Za-z0-9_\\.\\-]*$'	332,689
'(([A-Z_][A-Z0-9_]*)|(__.*__))$'	640,662
'([^\\r\\n]*)(?:\\r\\n|\\r|\\n)'	55,908
'<title>(.*?) Functions</title>'	1087,1555
'method "(.*)" is not supported'	171,1381
'the LaTeX files are in (.*)\\.'	295,1496
'__start_report(.*)__end_report'	1015,1032
'^// See .* for documentation.$'	241,1249
'^(\\S+ \\S+ \\S+ \\S+: )?(.*)$'	440,542
'(%?):([a-zA-Z][a-zA-Z0-9_-]*)%'	1246,1540
u'^([0-9]+x)*[0-9]*[*]?(s\\W)?$'	332,689
'\\W*File "(.*)", line ([0-9]+)'	602,1054
'(?i)gesch\xc3\xa4fts(.*)nummer'	746,1378
"(<module 'epydoc_test' from ).*"	757,1087
'^([a-zA-Z]:[^(]*)\\(([0-9]+)\\)'	602,1054
'^__[A-Za-z0-9]+[A-Za-z0-9_]*__$'	640,662
'@@VERSION(>|>=|!=)(\\d.*)@@(.*)'	906,1404
'(?i)<form[^>]* name="loginForm"'	386,1181
' name="flashvars" value="(.*?)"'	386,1181
'^__[_A-Za-z0-9]*[A-Za-z0-9]+_?$'	640,662
'(^RuntimeError:.* naughty.*){2}'	12,1087
'(?i)<embed.*?src.*?="(.+?)".*?>'	169,179
'\\{\\%[ \\t]+(load\\b.*?)\\%\\}'	305,1505
'version *= *([\'"][^\'"]*[\'"])'	222,1486
'(0x[0-9A-Fa-f]+|0\\d*|[1-9]\\d*)'	1246,1540
'\\*\\*\\* Error compiling (?:.*)'	1263,1580
'\\s*#+.*coding[:=]\\s*([-\\w.]+)'	640,662
'<form(.*)name="login"(.*)</form>'	386,1181
'(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'	251,1087
"^.*: Opening '(.*)' for reading$"	440,542
'(\\w+://.*|/.*|\\w:\\.*|\\w:/.*)'	305,1505
'(.*) (<tt class="py-line">.*)\\Z'	757,1087
'%\\s*#.*coding[:=]\\s*([-\\w.]+)'	1047,1277
'^((unit)?test.*|smoketest)\\.py$'	640,662
'^(\\s*#!("[^"]+"|\\S+))\\s+(.*)$'	1263,1580
'\\{\\%[ \\t]+(block\\b.*?)\\%\\}'	305,1505
'\\s*:?\\s*([\\w\\.]+\\s*,?\\s*)*'	757,1087
'(?im)<title>(.*) - Video</title>'	386,1181
'(?i)<img.*?src.*?=.*?"(.+?)".*?>'	169,179
'.*[^aeiouy][aeiouy][^aeiouywxY]$'	866,1184
'(?mi)^[ ]*\\:RequireModule:(.*)$'	757,1087
'(?s)<failure (.*?)>.*?</failure>'	958,1308
'<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'	413,1076
'^\\s*#\\s*include\\s*"(gmock/.+)"'	1007,1301
'S(\\s+0.0+){2}.*vhost-\\d+[\\d|+]'	1317,1501
'attempt model run (.*?) one more '	671,678
'@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'	1246,1540
'(?:require|load)\\s+[\\\'"](.*?)$'	305,1505
'^\\s*(if|try|elif|while|for|with)'	927,1202
'(initrd(.*).img|ramdisk.image.gz)'	171,1381
'^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'	1223,1420
'@import url\\((?P<filename>.*)\\)'	1009,1442
'model run (.*?) completed on node'	671,678
'.*\\srelease\\s(\\d)\\.(\\d)\\s.*'	1317,1501
'\\\\usepackage(\\[.*?\\])?{(.*?)}'	757,1087
'(^TypeError:.* return an int.*){2}'	12,1087
'model run (.*?) commencing on node'	671,678
'^(\\s+\\(copy-func\\s+)(\\w+)(.*)$'	1054,1198
'.*?\\n?.*?coding[:=]\\s*([-\\w.]+)'	757,1087
'^(\\s+\\(in-module\\s+)(\\w+)(.*)$'	1054,1198
'^(\\S.*?)??[=\\-\\(\\$\\\'\\"][#>]'	1087,1555
'^[a-zA-Z_]\\w*(\\.[a-zA-Z_]\\w*)*$'	757,1087
'((fasser(t|ted))) *\\(( *)(\\d+)()'	1459,1531
'[^aeiouy]*[aeiouy]+[^aeiouy](\\w*)'	866,1184
'((fassertFailed)()) *\\(( *)(\\d+)'	906,1404
'Node\\s+.*?zone\\s+\\s+([\\s\\d]+)'	1317,1501
'^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$'	55,908
'^(<=|>=|<|>|!=|==)?\\s*([^\\s,]+)$'	1263,1290
'{\\s*"name"\\s*:\\s*"([^"]+)"\\s*}'	1317,1501
'(\\S+[^<|^!|^>])\\s*(=+)\\s*(\\S+)'	241,1249
'(\\s*)((\\s*typedef\\s*.*?;)+)\\s*$'	241,1249
'^\\s+\\(c-name\\s+([^\\s]+)\\s*\\)$'	1054,1198
'\\s*<entry><type>([^<]+)</></entry>'	1087,1555
'(interface|) ([^ ]*) : public (.*)$'	602,1054
'&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'	413,1076
'(^[ ]*[+]?[\\(\\)0-9/\\/\\.\\- ]+$)'	717,1229
'HTTP/(\\d\\.\\d)\\s+(\\d+)\\s+(.*)$'	1025,1326
'(?P<id>.*)\\s*[:=]\\s*(?P<value>.*)'	1009,1442
'available:\\s+(\\d+)\\s+nodes\\s+.*'	1317,1501
'.*[/\\\\](.+)(\\:\\d+|\\(\\d+\\))\\:'	1007,1301
'^([a-zA-Z_]\\w*)(\\.[a-zA-Z_]\\w*)*$'	757,1087
'<meta name="title" content="(.*)" />'	386,1181
'i686-apple-darwin[0-9]*-llvm-gcc-4.2'	332,689
'^\\n?namespace\\s+\\w+\\s*{\\s*\\n?$'	241,1249
"'(?P<key>[^:]*)'\\:(?P<value>[^,]*),"	147,181
'addr:(.*)\\ *Bcast:(.*)\\ *Mask:(.*)'	779,1407
'^\\s*(typedef|struct|static)\\s+.*?$'	241,1249
'<link rel="image_src" href="(.*)" />'	386,1181
u'\\[\\s*~([A-z_][A-z_0-9.]+?)\\s*\\]'	810,985
'coding[:=]\\s*(?P<encoding>[-\\w.]+)'	305,1505
'((fassertFailed)()) *\\(( *)(\\d+)()'	1459,1531
'\\s*\\*\\s*G_CONST_RETURN\\s*\\*\\s*'	1054,1198
'#define\\s+ZLIB_VERSION\\s+"([^"]*)"'	441,628
'([^\\?\\!]*\\?)?([^\\?\\!]*\\!)?(.*)'	86,88
'"mediaURL":"(http.*?)","key":"(.*?)"'	386,1181
'@([a-zA-Z0-9_][a-zA-Z0-9_]*)\\.route'	337,1112
'model run failure on node (.*?); will'	671,678
'(\\S+)\\s*->\\s*(?:\\[([^\\]]*)\\])?$'	1248,1488
'^(\\s+\\(release-func\\s+)(\\w+)(.*)$'	1054,1198
'%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'	308,1216
'\\s*set\\s+default\\s*=\\s*"+(\\d+)"+'	1317,1501
'\\smarkdown(=[\\\'"]?[^> ]*[\\\'"]?)?'	236,1395
'\\[(\\w+)\\] (.*?) ::.*::.*::\\s*(.*)'	1269,1498
'^[\\w.\\*]+([\\s,:;]\\s*[\\w.\\*]+)*$'	757,1087
'[^[]+\\[(\\d+/[A-Za-z]+/\\d+):[^\\d]*'	1004,1075
'(.*)\\.\\[[\\w_\\.\\-]+?\\]\\.torrent'	1269,1498
'vmlinuz-(\\d+)\\.(\\d+)\\.(\\d+)-(.*)'	171,1381
'^@@ -\\d+,\\d+ \\+(\\d+),(\\d+) @@.*$'	640,1505
'(([umsg]asser(t|ted))) *\\(( *)(\\d+)'	503,656
'var (_0x[a-f\\d]+) ?\\= ?\\[(.*?)\\];'	1025,1379
'(([umsgf]asser(t|ted))) *\\(( *)(\\d+)'	906,1404
'^(%feature\\S+\\s+\\S+\\s*?)"\\s+(\\S)'	633,1432
'[a-z]::[^=]|:[a-z]+:|`|\\.\\.\\s*\\w+:'	1087,1580
'^(\\#{1,6})[ \\t]*(.+?)[ \\t]*\\#*\\n+'	55,200
'(.*),\\s+((\\w+\\.?) (\\d+), (\\d{4}))'	109,182
'"QOOXDOO_PATH"\\s*:\\s*"([^"]*)"\\s*,?'	1043,1619
'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'	1317,1501
'\\{\\%[ \\t]+\\b(block|if)\\b.*?\\%\\}'	305,1505
'Line:(?P<line>\\d+)\\s*(?P<message>.+)'	1199,1300
'(\\s*#include\\s+<)(.*?\\.hpp)?(>\\s*)?'	241,1249
'(\\S+)\\s*=\\s*("([^"]*)"|\'([^\']*)\')'	1228,1231
'^(([^:/?#]+):)?(//([^/?#]*):([^/?#]*))?'	1269,1498
'^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'<img.*?src="(.+?(?:\\.png|\\.jpg))".*?>'	169,179
'(\\S+):(\\d+): \\[(\\S+)(, \\S+)?] (.*)'	1223,1420
'^[-+]?[0-9]+(\\.[0-9]*)?[eE][-+][0-9]+$'	171,1381
'^([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*(.*)$'	602,747
'^\\s+(~?[_a-zA-Z][a-zA-Z0-9_.]*)\\s*.*?'	251,1087
'#[\\s]*?(TODO|FIXME|HACK|XXX)[\\s:]?(.+)'	422,1644
'^\\d*:\\s+(\\w+)(?:@)?(\\w+)?:\\s+<(.+)>'	614,947
'^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'	440,542
'^@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*'	233,1025
'\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'	1248,1488
'^([a-zA-Z_][a-zA-Z_0-9]*)(?:-([0-9]+))?$'	1004,1495
'initrd-(\\d+)\\.(\\d+)\\.(\\d+)-(.*).img'	171,1381
'Volume\\s+\\d+\\s+(\\w).*?(\\d+)\\s+\\w+'	1317,1501
'#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'	492,1364
'(?:\\s+([\\w-]+)\\s*=\\s*(".*?"|\'.*?\'))'	305,1505
'<a href="function\\..*?\\.html">(.*?)</a>'	1087,1555
'(?P<label>^T[A-Z]*)(?P<num>[1-9][0-9 ]*$)'	332,689
'^(.*)\\[(zero|one|two|few|many|other)\\]$'	919,1007
'^(<=|>=|<|>|!=|={2,3}|~=)?\\s*([^\\s,]+)$'	1263,1580
"invalid literal for long().*: '?0xOoops'?"	12,1087
'(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$'	640,662
'<meta name="description" content="(.*)" />'	386,1181
'<span id=short-desc-content>([^<]*)</span>'	386,1181
u'\\{\\{\\s*~([A-z_][A-z_0-9.]+?)\\s*\\}\\}'	810,985
'(grubby version)?(\\s)?(\\d+)\\.(\\d+)(.*)'	1317,1501
'refundInfoList.refundInfo\\((\\d+)\\).(.*)'	391,872
'^([^<]*)<([^>]*)>\\s+(\\d+\\s+[+-]\\d{4})$'	103,130
'^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'	602,1054
'index of (.*?) assigned to node at working'	671,678
'([0-9]+\\.[0-9]+\\.[0-9]+)\\s*(\\(\\S*\\))?'	1317,1501
'^(\\s+\\(implements\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'(const)?.*::basic_string<.*>\\s*(\\*|\\&)?$'	241,1249
'^([0-7]{6}) ([a-z]+) ([0-9a-f]{40})\\t(.*)$'	103,130
'([A-Za-z0-9_.-]*|"[^"]*")\\s+(\\S+)\\s+(.*)'	241,1249
'http(s)?\\://([\\w\\.-]*)(\\:(\\d+))?(/.*)?'	147,181
'(\\*\\*|__) (?=\\S) (.+?[*_]*) (?<=\\S) \\1'	55,200
'^\\d*:\\s+([\\w.]+)(?:@)?(\\w+)?:\\s+<(.+)>'	996,1491
'\\s*<table id="datatype-pseudotypes-table">'	1087,1555
'enum\\s*{([^}]*)}\\s*([A-Z][A-Za-z]*)(\\s|;)'	1054,1198
'^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'	1054,1087
'\\([^)]+\\)\\s*(([A-Za-z0-9_][A-Za-z0-9_]*))'	31,324
'^..\\s+(.+?)//(.+?)(\\s*\\|\\s*(\\d+))?\\s*$'	241,1249
'^\\s*(>>> )?(\\.\\.\\. )?from .* import .*\\*'	518,787
'(^/dev/x{0,1}[a-z]{0,1}d{0,1})([a-z]+)[0-9]*$'	1223,1420
'[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'	386,1181
'(--|-)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'	602,747
'^(\\[.*?[Pp][Aa][Tt][Cc][Hh].*?\\])?\\s*(.*)$'	103,130
'\\s*(<=?|>=?|===?|!=|~=)\\s*((\\w|[-.*_!+])+)'	1263,1580
'(\\S+)?\\s*->\\s*(\\S+)\\s*\\[(.*?):(.*?)\\]$'	1248,1488
'^#(ifndef|define|endif\\s*//)\\s*[\\w_]+\\s*$'	1007,1301
'^end_request: I/O error, dev (.*), sector .*$'	492,1364
'@/([^/\\\\]*(?:\\\\.[^/\\\\]*)*)*/[a-z]*(?ms)'	96,252
'<img class=thumbnail-img (?:.* )?src=(http.*)>'	386,1181
'^([a-z]\\w*)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)'	1506,1510
'.*?Error: (?P<error>.+) on line (?P<line>\\d+)'	1025,1322
'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'	757,1087
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/\\?]*)\\s*\\['	1248,1488
'flashvars: [\\\'"](?:.*&)?file=(http[^\\\'"&]*)'	386,1181
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)$'	1506,1510
'/(?:[^/\\\\]*(?:\\\\.[^/\\\\]*)*)/[a-zA-Z]*(?s)'	636,1125
'virtual (/\\*.*?\\*/ )?(.*?) (.*?) (.*?)\\(\\w?'	602,1054
'<title>(.*) video by (.*) - Photobucket</title>'	386,1181
'Number of files successfully Verified: ([0-9]*)'	1317,1501
'<code>(.*)</code><description>(.*)</description>'	1074,1075
'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'	332,689
'^[ \\t]*Traceback \\(most recent call last\\):.*'	757,1087
'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '	147,181
'{%\\W*block content\\W*%}.*?{%\\W*endblock\\W*%}'	1232,1233
'\\s*.*#\\s*.*define\\s.*SQLITE_VERSION\\W*"(.*)"'	12,1087
'<a href="([^"]*)"[^>]* id="lookup_id_defendant1"'	1012,1158
'<a href="([^"]*)"[^>]* id="lookup_id_defendant0"'	1012,1158
'<link rel="video_src" href=".*\\?file=([^"]+)" />'	386,1181
'(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'	602,747
'((msgasser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'\\S* *\\d*-\\d*-\\d* \\d*:\\d*:\\d* [+-]\\d* \\w*'	1317,1501
'(?P<urlcmd>\\s*url\\s.*)|(?P<nfscmd>\\s*nfs\\s.*)'	171,1381
'^lsr: Cannot access .*: No such file or directory.'	440,542
'<meta name="description" content="(.*)"(?:\\s*/)?>'	386,1181
'^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'	305,1505
'^(\\s+\\(parent\\s+)(\\w+)(\\s+\\((\\w+)\\))?(.*)$'	1054,1198
'\\(\\s*(?P<dims>(?:\\d+,\\s*)+\\s*\\d+)\\s*\\)\\s*'	332,689
'(?P<op>([<>=!~]=)|[<>])\\s*(?P<vn>(\\w|[.-])+\\*?)'	1263,1580
'(([wum]asser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'((?:http|https|git)://github.com/[^/]*/[^/]*)/{0,1}'	354,379
'# <nbformat>(?P<nbformat>\\d+[\\.\\d+]*)</nbformat>'	747,1580
"\\[(?P<tag>\\w+)\\]\\s*\\=\\s*\\'(?P<value>\\w+)\\'"	1596,1605
'^(.+?)[ \\._\\-]\\[?([0-9]+)((?:[x-]\\d+)+)[^\\/]*$'	1269,1498
'(mapper|table|column|session|attribute|engine):(.*)'	113,1469
'^(?P<message_id>[A-Z0-9]+): (?P<postfix_message>.*)'	440,542
'\\A#!.*^exec [^\\r\\n|\\n|\\r]*?(tclsh|wish|expect)'	305,1505
'(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'	1263,1580
'swfConfig.*?"(http:\\\\/\\\\/.*?watch.*?-.*?\\.swf)"'	386,1181
'^\\s*\\.\\.\\s+automodule::\\s*([A-Za-z0-9_.]+)\\s*$'	251,1087
'((?:@\\S+\\.(?:app_)?))(after_request)(\\b\\s*$)(?m)'	337,1112
'\\s*(\\w*(\\s*\\w+)+)\\s*<\\s*(\\S*(\\s*\\S+)+)\\S*>'	241,1249
'([+-]\\(.*?\\)|\\(.*?\\)[\\*\\+]|\\(.*?\\))(?:\\s|$)'	305,1505
'^/(artist|release|track|label|release-group)/([^/]*)$'	927,1003
'(?P<mimetype>[^;]+).*(?:charset=(?P<charset>[^ ]+))?$'	906,1404
'^(\\s+\\(of-object\\s+)(\\w+)(\\s+\\((\\w+)\\))?(.*)$'	1054,1198
'\\[0\\:0\\] -A .* -j ACCEPT -p icmp -s 192.168.11.0/24'	1223,1420
'^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'	296,819
'^(\\s*template\\s*<\\s*.*?|\\s*(private|public):\\s*)$'	241,1249
'<(app)\\((\\?[a-z][a-z]*)\\s*,\\s*(\\?[a-z][a-z]*)\\)>'	1248,1488
'\\^phoneCallContactId\\^=\\^urn:ace:(?P<identifier>.*)'	746,1378
'(^[ \\t]*In \\[\\d+\\]: |^[ \\t]*\\ \\ \\ \\.\\.\\.+: )'	422,1517
'(?P<names>\\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?'	602,747
'((msgasser(t|ted)NoTrace))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'((?:/|-|--)[-_a-zA-Z0-9]+)(\\s*.*?)(?=,\\s+(?:/|-|--)|$)'	251,1087
'^(https://nodeload.github.com/[^/]+/[^/]+/)zipball(/.*)$'	1025,1326
"name '(?P<symbol>[A-Za-z_][A-Za-z0-9_]*)' is not defined"	518,787
'(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'	1317,1501
's3n://.*\\.elasticmapreduce/libs/state-pusher/[^/]+/fetch'	440,542
'^([A-Z]\\w+:[a-z0-9-]+)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'	1087,1580
'^\\s*\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	251,1087
'<STREAM APP="(http://.*)" FULLPATH="/?(/.*\\.flv\\?[^"]*)"'	386,1181
'^(\\s*)(, | {2})((\\s*(\\w+)(\\s+|::)\\w+\\s*.*?,?)+)\\s*$'	241,1249
'(?:&([a-zA-Z][-.a-zA-Z0-9]*)|&#(x[0-9a-zA-Z]+|[0-9]+))(;?)'	12,1087
'^([A-Z]\\w+::[a-z0-9-]+)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'^\\s*(>>> )?(\\.\\.\\. )?raise((\\s*\\(\\s*)|\\s+)\\w+\\s*,'	518,787
'^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'.*SickBeard\\-win32\\-alpha\\-build(\\d+)(?:\\.\\d+)?\\.zip'	1269,1498
'builders/(?P<builder_name>.*)/builds/(?P<build_number>\\d+)'	1199,1300
'.*?Error: Parse error on line (?P<line>\\d+): (?P<error>.+)'	1025,1322
'((?<!{)(?:{{)+|(?:}})+(?!})|{(?:[^{](?:[^{}]+|{[^{}]*})*)?})'	568,1144
'((msgasser(t|ted))) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'	568,1144
'(?P<key>.*)\\s*=\\s*u?\\[?[\\\'\\"](?P<value>.*)[\\\'\\"]\\]?'	295,1496
'^\\s*([0-9]+:[0-9]+)\\s*\\|\\s*([0-9]+:[0-9]+)\\s*\\|\\s*(.+)'	165,1545
'^     Page [1-9][0-9]*[ \t]+\\|^.*Last change:.*[1-9][0-9]*\n'	12,1087
'(mapperprop|mapper|table|column|session|attribute|engine):(.*)'	1415,1580
'^(.+?)[ \\._\\-][Ss]([0-9]+)((?:[\\.\\-_ ]?[Ee]\\d+)+)[^\\/]*$'	1269,1498
'Tools and libraries NOT available at test time:\\n\\s*(.*?)\\n'	747,1330
'/\\* \\[([^\\]]*.*?)] \\*/[ \\t](.*[* ]+)(\\w+)(\\[ *])?[\\),]'	602,1054
'^(.+?)[ \\._\\-]\\[[Ss](\\d+)\\]((?:_\\[[Ee]\\d+\\])+)[^\\/]*$'	1269,1498
'Line (?P<line>\\d+),\\s*E:(?P<errnum>\\d+):\\s*(?P<message>.+)'	1025,1322
'\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'	243,481
"<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--"	927,1003
'^(I|E)/(stdout|stderr|GeckoConsole)\\s*\\(\\s*\\d+\\):\\s*(.*)$'	919,1007
'FOREIGN KEY \\((.*?)\\) REFERENCES (?:(.*?)\\.)?(.*?)\\((.*?)\\)'	113,1469
'^\\s*([\\w\\s\\*]+)\\(\\s*\\*\\s*(\\w+)\\s*\\)\\s*\\(([^()]*)\\);'	1054,1198
'[a-z,_]*_u:[a-z,_]*_r:[a-z,_]*_t(?:\\:[s,\\-,0-9,:[c,\\,,0-9]*]*)?'	1317,1501
'^(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\d+.\\d+\\s\\S+)\\s+(\\d+.\\d+.*)'	1317,1501
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*("\\S[^"]+\\S")\\s*,?.*'	1459,1531
'\\<\\!\\-\\-\\#\\s?[A-z0-9_-]*\\s?\\:s?[A-z0-9\\s_-]*\\s?\\-\\-\\>'	1021,1468
'(?P<atom>[^\\](){%*"\\\\\\x00-\\x20\\x80-\\xff]+)( (?P<rest>.*$)|$)'	1223,1420
'((msgasser(t|ted)NoTrace)) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'\\s*<entry><token>([^<]+)</token></entry>\\s*<entry>([^<]+)</entry>'	1087,1555
'\\[0\\:0\\] -A .* -j ACCEPT -p tcp --dport 80:81 -s 192.168.10.0/24'	1223,1420
'[a-z,_]*_u:[a-z,_]*_r:([a-z,_]*_t)(?:\\:[s,\\-,0-9,:[c,\\,,0-9]*]*)?'	1317,1501
'\\[0\\:0\\] -A .* -j ACCEPT -p udp --dport 200:299 -s 192.168.99.0/24'	1223,1420
'\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'	1054,1198
'^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+Exception|\\s*(\\(\\s*)+Exception)'	518,787
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*([\\S\\s+<\\(\\)"]+) *,?.*'	1459,1531
'^\\s*([0-9]+:[0-9]+)\\s*\\|\\s*(.+?)(\\s+\\(([0-9]+:[0-9]+)\\))?\\s*$'	165,1545
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!(?P<cmd>.*)'	422,1517
'^([-]+BEGIN CERTIFICATE[-]+[\\r]*\\n.*[\\r]*^[-]+END CERTIFICATE[-]+)$'	1087,1580
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'	422,1517
'(?<![\\\'\\"])require\\s*\\(\\s*[\\\'\\"]([^\\\'\\"]+?)[\\\'\\"]\\s*\\)'	247,1007
'[ ]*(?P<arg>.*?=(?:(?:[^"\']*?)|(?:"[^"]*")|(?:\'[^\']*\')))[ ]*[,\r\n]'	1232,1233
'^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'	518,787
'//.*?$|/\\*.*?\\*/|\\\'(?:\\\\.|[^\\\\\\\'])*\\\'|"(?:\\\\.|[^\\\\"])*"'	298,1007
'^.*ERROR org\\.apache\\.hadoop\\.streaming\\.StreamJob \\(main\\): (.*)$'	440,542
'^\\s*@param\\s+(?P<type>\\w+)\\s+\\$(?P<name>\\w+)(?:\\s+?(?P<doc>.*?))?'	305,1505
'^\\s*\\# DEBUG\\(filename=(?P<filename>.*?), lineno=(?P<lineno>\\d+)\\)$'	96,252
'^\\s*(GType|GtkType)\\s+\n([a-z]\\w+_get_type)\\s*(\\(void\\)|\\(\\)).*$'	1054,1198
'((DB|User|Msg|MsgAssertion)Exceptio(n))\\(( *)(\\d+) *,? *(\\S+.+\\S) *,?'	1459,1531
'^\\s+\\(field\\s+\\(type-and-name\\s+([^\\s]+)\\s+([^\\s]+)\\s*\\)\\s*\\)$'	1054,1198
'^\\s*@method\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\w+)(\\(\\))?(?P<doc>.*?)$'	305,1505
'([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'	779,1407
'([ \t(]|^)([-a-zA-Z0-9_+]*[\x7f-\xff][-a-zA-Z0-9_+\x7f-\xff]*)(?=[ \t)]|\n)'	602,1509
'^\\s*@var\\s+(\\$(?P<variable>\\w+)\\s+)?(?P<type>\\w+)(?:\\s+(?P<doc>.*?))?'	305,1505
'\\[0\\:0\\] -A .* -j ACCEPT -p icmp -m icmp --icmp-type 8 -s 192.168.11.0/24'	1223,1420
'(\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)")(?ms)'	96,252
'^[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*$'	492,1364
'(?P<before>.*?)[\\(]host (?P<host>\\S+) (?P<action>[^:]+): (?P<message>.*)[\\)]'	440,542
'^(\\d+\\.\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?$'	1263,1290
'^(\\s+typedef\\s+.*?;|\\s*(private|public):\\s*|\\s*{\\s*|\\s*(\\w|\\d|,)+\\s*)$'	241,1249
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'	1054,1087
'\\[0\\:0\\] -A .* -j ACCEPT -p tcp -m multiport --dports 80:81 -s 192.168.10.0/24'	1223,1420
'.*(?:PostgreSQL|EnterpriseDB) (\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:\\.\\d+)?(?:devel)?'	1415,1580
'(WARNING|ERROR|INFO) \\(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\\): (?P<rest>.*)'	332,689
'^\\s+\\(value\\s+\\(name\\s+([^\\s]+)\\)\\s+\\(c-name\\s+([^\\s]+)\\s*\\)\\s*\\)$'	1054,1198
'YEAS -?\\s?(\\d+)(.*)NAYS -?\\s?(\\d+)(.*)ABSENT( OR NOT VOTING)? -?\\s?(\\d+)(.*)'	109,182
'^\\s+\\(parameter\\s+\\(type-and-name\\s+([^\\s]+)\\s+([^\\s]+)\\s*\\)(\\s*.*)\\)$'	1054,1198
'^((http[s]?):\\/)#?\\/?([^:\\/\\s]+)((\\/[\\w\\-\\.]+)*\\/)*([\\w\\-\\.]+[^#?\\s]+)'	1028,1039
'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263,1290
'(require|define)\\s*\\(\\s*([\\\'\\"][^\\\'\\"]+[\\\'\\"]\\s*,)?\\s*\\[([^\\]]+)\\]'	247,1007
'((?:DEBUG|INFO|NOTICE|WARNING|ERROR|FATAL|HINT|DETAIL|CONTEXT|LINE [0-9]+):)(.*?\\n)'	1087,1555
'^Parse error:\\s*syntax error,\\s*(?P<error>.+?)\\s+in\\s+.+?\\s*line\\s+(?P<line>\\d+)'	304,305
'(?:\\W+File "(?:.*)", line (?:.*)\\W+(?:.*)\\W+\\^\\W+)?Syntax(?:Error|Warning): (?:.*)'	1263,1580
'^(?:\\s*\\.\\.\\s+automodapi::\\s*)([A-Za-z0-9_.]+)\\s*$((?:\\n\\s+:[a-zA-Z_\\-]+:.*$)*)'	332,689
'<meta[^>]*content\\s*=\\s*[\'"]?text/html;\\s*charset\\s*=\\s*([^ \'">]+)\\s*[\'"]?[^>]*>'	1228,1231
'^(?P<path>.*\\.java):(?P<line>\\d+): (?P<warning>warning: )?(?:\\[\\w+\\] )?(?P<error>.*)'	1025,1322
'^Parse error:\\s*(?:\\w+ error,\\s*)?(?P<error>.+?)\\s+in\\s+.+?\\s*line\\s+(?P<line>\\d+)'	1025,1322
'^class ([^,]*), addr (\\d\\d:\\d\\d.\\d+), pci id (\\w{4}:\\w{4}) \\(sub (\\w{4}:\\w{4})\\)'	1317,1501
"\\svalues\\s*(\\(((?<!\\\\)'[^\\)]*?\\)[^\\)]*(?<!\\\\)?'|[^\\(\\)]|(?:\\([^\\)]*\\)))+\\))"	422,628
'^(\\w{3})\\-(\\d\\d)\\s*(\\d\\d)\\:(\\d\\d):(\\d\\d)\\s*([A-Z]+)\\s*(.+?)\\s*\\:\\:\\s*(.*)$'	1269,1498
'(?P<fence>^~{3,})[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*(\\{\\.(?P<lang>[a-zA-Z0-9_-]*)\\})?[ ]*$'	236,1395
"((?P<prefix>[$@%\\\\*&]+)\\s*)?(?P<scope>(::)?\\b((?!\\d)\\w*?(::|'))*)(?P<name>(?!\\d)\\w+)$"	305,1505
'(\\s*)((BOOST_STATIC_CONSTANT\\(\\s*\\w+,\\s*|enum\\s*\\w*\\s*{\\s*)value\\s*=)(.*?)([}|\\)];)$'	241,1249
'(abstract[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?function[ \t]+?\\w+\\(.*?\\)'	498,1495
'^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	1087,1555
'<a href="#">(.*)</a><span class="emaillink js-hidden">(.*?)<span class="i">null</span>(.*)</span>'	391,872
'^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'	305,1505
'<h2 class="ti-5"><a href="http://video\\.yahoo\\.com/(people|profile)/[0-9]+" beacon=".*">(.*)</a></h2>'	386,1181
'\\s*(?P<name>.+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1263,1580
'(I[0-9a-f]{8,40})|([Bb]ug|[Ll][Pp])[\\s\\#:]*(\\d+)|([Bb]lue[Pp]rint|[Bb][Pp])[\\s\\#:]*([A-Za-z0-9\\-]+)'	1223,1420
'(?P<symbol>[^\t]+)\t(?P<filename>[^\t]+)\t(?P<ex_command>.*?);"\t(?P<type>[^\t\r\n]+)(?:\t(?P<fields>.*))?'	1025,1505
'^ *(0x[0-9a-f]+) +0x([0-9a-f]+): +eax=0x([0-9a-f]+) ebx=0x([0-9a-f]+) ecx=0x([0-9a-f]+) edx=0x([0-9a-f]+)$'	1317,1501
'^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'	305,1505
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(?:[\\w_]|\\[).+(;)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	1025,1322
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\((\\s+)?.+?(\\s+)?\\)\\s*(?:(?:\\{|//.*|/\\*.*\\*/)\\s*)?$'	1025,1322
'<h2 class="me">(.+?)</h2>.*?<span class="pron">(.+?)</span>.*?<span class="pg">(.+?)</span>.*?<td>(.+?)</td>'	169,179
'(?xs)(\n        \'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'  |\n        "(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"\n    )'	636,1125
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	72,1087
'\n        (<meta\n        (?:\\s+[\\w-]+\\s*=\\s*(?:".*?"|\'.*?\'))+  # attributes\n        \\s*/?>)\n        '	305,1505
'(?x)(\n        (?:0|[1-9]\\d*)\n        (\\.\\d+)?\n        ([eE][-+]?\\d+)? |\n        (0x[a-fA-F0-9]+)\n    )'	636,1125
'^for\\s+((?:\\(?)\\s*[A-Za-z_][A-Za-z_0-9]*(?:\\s*,\\s*(?:[A-Za-z_][A-Za-z0-9_]*),??)*\\s*(?:\\)?))\\s+in\\s+(.*):'	927,1202
'\\s*\n      (?P<mnemonic>JMP|JRP|LDN|STOP|STO|SUB|CMP)  \n       \\s* \n      (?P<arg>\\d+)        # numeric argument'	189,955
'(\\s+|(?<=\\s)(?::[a-z-]+:)?`\\S+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	251,1087
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)[$]?(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	666,707
'^v?(\\d+!)?(\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?(\\+([a-zA-Z\\d]+(\\.[a-zA-Z\\d]+)?))?$'	1263,1580
'(?x)\n    (?P<key>[^=]+)\n    \\s*=\\s*\n    (?P<val>\n        "(?:[^\\\\"]|\\\\.)*" |\n         (?:.*?)\n    )\n    \\s*;\n'	1415,1580
'(\\{[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}\\} |  # GUID\n                   [a-z0-9-\\.\\+_]*\\@[a-z0-9-\\._]+)  # Email format'	391,872
'\n      <\n      (?:mailto:)?\n      (\n         [-.\\w]+\n         \\@\n         [-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+\n      )\n      >'	55,200
'^(\\s+(,|:\\s+)?|struct\\s+)(\\w+)\\s*<((\\s*(typename\\s+)?\\w+\\s*(=\\s*.*|<(\\s*\\w+\\s*,?)+>\\s*)?,?)+)\\s*>\\s+((struct|class).*?)?$'	241,1249
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	82,89
'Host:\\s+(\\w+)\\s+Channel:\\s+(\\d+)\\s+Id:\\s+(\\d+)\\s+Lun:\\s+(\\d+)\n\\s+Vendor:\\s+([a-zA-Z0-9_-]+)\\s+Model:.*\n.*Type:\\s+([a-zA-Z0-9_-]+)'	1317,1501
'^(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<patch>[0-9]+)(\\-(?P<prerelease>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?(\\+(?P<build>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?$'	1025,1326
'<a href="#"><span class="emaillink">(.*?)<span class="i">null</span>(.*)</span></a><span class="emaillink js-hidden">(.*?)<span class="i">null</span>(.*)</span>'	391,872
'(?P<name>\\w+)\\s+(?P<type>[A-Za-z]+|\\(.*?\\))\\s+(?P<default>#REQUIRED|#IMPLIED|\\w+|(?:#FIXED)?((?:")([^"]*?)(?:")|(?:\')([^\']*?)(?:\')))\\s*(?:--(?P<comment>.*?)--)?'	305,1505
'(?x)\n    \\%\n        (?:\\(([\\w]*)\\))?\n        (\n            [-#0\\ +]?(?:\\*|[\\d]+)?\n            (?:\\.(?:\\*|[\\d]+))?\n            [hlL]?\n        )\n        ([diouxXeEfFgGcrs%])\n'	636,1125
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>([^ ]|\\\\ )*?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	1223,1420
'<[a-zA-Z][-_.:a-zA-Z0-9]*\\s*(\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@][][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*(?=[\\s>/<])))?)*\\s*/?\\s*(?=[<>])'	1087,1580
u'\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\\.)\\.\\.[ \\t]*\\w+:  # .. foo: (but NOT ... else:)\n    '	1087,1580
'\n                \'.*?(?<!\\\\)\' |    # single quoted strings or\n                ".*?(?<!\\\\)" |    # double quoted strings or\n                \\w+          |    # identifier\n                \\S                # other characters\n                '	747,1580
'\n            ^\n            \\s*\n            (={1,5})\n            \\s*\n            (?P<name>(?:!=+|\n                        [^=!]+|\n                        !)+?\n            )\n            \\s*\n            \\1\n            (?:\\s|\\#|$)\n         '	305,1505
'\n    ^\n    [ \\t]*\n    (?: if\n    |   for\n    |   while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    )\n    \\b\n'	602,1054
'^\n\\s*((?:-|\\w|\\&|\\*)+)   # return type\n\\s*                    # skip whitespace\n\\(\\s*\\*\\s*             # opening (\n([a-z]\\w+)\\)           # match the function name until the closing )\n\\s*\\(\\s*([^)]*)\\).*      # group the function arguments\n$'	1054,1198
'<\\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \\s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \\s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        '	305,1505
'FOREIGN KEY \\((.*?)\\) REFERENCES (?:(.*?)\\.)?(.*?)\\((.*?)\\)[\\s]?(MATCH (FULL|PARTIAL|SIMPLE)+)?[\\s]?(ON UPDATE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(ON DELETE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(DEFERRABLE|NOT DEFERRABLE)?[\\s]?(INITIALLY (DEFERRED|IMMEDIATE)+)?'	1415,1580
'\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '	55,200
'\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        '	1263,1580
'    # A numeric string consists of:\n    (?P<sign>[-+])?          # an optional sign, followed by\n    (?=\\d|\\.\\d)              # a number with at least one digit\n    (?P<int>\\d*)             # having a (possibly empty) integer part\n    (?:\\.(?P<frac>\\d*))?     # followed by an optional fractional part\n    (?:E(?P<exp>[-+]?\\d+))?  # and an optional exponent\n    \\Z\n'	1087,1580
'\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '	305,1505
' (                       # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n\n                  [ ]?                  # one optional space\n                  (?:\\n[ ]*)?           # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)               # id = $3\n                  \\]\n\n                )\n    '	55,200
'\\s*<AccessControlList>\\s*<Entries>\\s*<Entry>\\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\\s*<Permission>FULL_CONTROL</Permission>\\s*</Entry>\\s*<Entry>\\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\\s*<Permission>FULL_CONTROL</Permission>\\s*</Entry>\\s*<Entry>\\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\\s*<Permission>READ</Permission></Entry>\\s*</Entries>\\s*</AccessControlList>\\s*'	546,830
' (                 # wrap whole match in $1\n                  \\[\n                    (.*?)        # link text = $2 \n                    # [for bracket nesting, see below]\n                  \\]\n\n                  [ ]?           # one optional space\n                  (?:\\n[ ]*)?    # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)        # id = $3\n                  \\]\n                )\n    '	55,200
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*   # PS2 lines\n          \\n?)\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        '	757,1087
'((?<!(href|.src|data)=[\'"])((http|https|ftp)\\://([a-zA-Z0-9\\.\\-]+(\\:[a-zA-Z0-9\\.&amp;%\\$\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(\\:[0-9]+)*(/($|[a-zA-Z0-9\\.\\,\\?\'\\\\+&amp;%\\$#\\=~_\\-]+))*))'	296,819
' (                   # wrap whole match in $1\n                  \\[\n                    (.*?)          # link text = $2\n                  \\]\n                  \\(               # literal paren\n                        [ \\t]*\n                        <?(.+?)>?  # href = $3\n                        [ \\t]*\n                        (          # $4\n                          ([\\\'\\"]) # quote char = $5\n                          (.*?)    # Title = $6\n                          \\5       # matching quote\n                        )?         # title is optional\n                  \\)\n                )\n    '	55,200
' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '	55,200
"Devices of vm1:\nmachine\n  aid = __0\n  aobject = pci.0\n  parent_bus = ()\n  child_bus = \\[.*QPCIBus.*, .*QStrictCustomBus.*\\]\n  params:\ni440FX\n  aid = __1\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \\[\\]\n  params:\n    driver = i440FX\n    addr = 00\n    bus = pci.0\nPIIX4_PM\n  aid = __2\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \\[\\]\n  params:\n    driver = PIIX4_PM\n    addr = 01.3\n    bus = pci.0\nPIIX3\n  aid = __3\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \\[\\]\n  params:\n    driver = PIIX3\n    addr = 01\n    bus = pci.0\npiix3-ide\n  aid = __4\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \\[.*QIDEBus.*\\]\n  params:\n    driver = piix3-ide\n    addr = 01.1\n    bus = pci.0\nfdc\n  aid = __5\n  aobject = None\n  parent_bus = \\(\\)\n  child_bus = \\[.*QFloppyBus.*\\]\n  params:"	1317,1501
"\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "	1263,1580
'/*'	1218
'^/*'	830
': *'	49
'.*_'	1244
'.*:'	560
'  *'	1555
' .*'	232
'=.*$'	496
u'^ *'	1621
'.*->'	1571
'&.*$'	1283
'\n.*'	1618
'^0*$'	122
'\\W*'	781
'SD.*'	364
"^'.*'"	743
'\\|.*'	1555
'\\d*$'	687
'\\;.*'	1488
'\\/.*'	826
'\\(.*'	1512
'\\!.*'	31
':\\s*'	826
'[^"]*'	1076
"[^']*"	1076
"'.*?'"	436
'", .*'	1205
'rel.*'	437
'=\\s*'	560
'(to*)'	662
'^\\w*'	1247
'^\\D*'	781
'{\\s*'	1377
'^[ ]*'	1050
'//.*$'	1023
'ppc.*'	560
'Z(.*)'	632
'@\\w*'	640
'arm.*'	560
'.*elf'	57
'.*\\('	1512
'.*\\.'	826
'.*?: '	1076
'\n\n*'	566
".*?'''"	356
'^{.*}$'	630
"[^<']*"	1076
'C\\s.*'	1644
'>\\s*<'	753
'^\\s*-'	718
'^\\s*"'	200
'^\\s*!'	27
'^\\..*'	288
'[^<"]*'	1076
'^--- *'	1636
'nltk.*'	1470
'^(.*)$'	1644
'mips.*'	560
'[^/]*$'	126
'[A-Z]*'	1248
'### .*'	220
'.*.csv'	1044
'\\.0*$'	1569
'\\).*$'	1555
'\\(.*$'	1555
'[^%]*%'	356
'[\\s]*'	1201
"'(.*)'"	574
'[,.]*$'	220
' *\\w*'	498
'^[,.]*'	220
'-lang*'	294
'-*(.+)'	1302
'  [ ]*'	1495
'_\\d*$'	1122
'- *\\('	787
',*\\s*'	1190
'^KEY.*'	149
'(.)*{$'	842
'.*\\n?'	1248
'.*\\d$'	1501
'^.*\\('	1555
'pxem.*'	1135
'pxei.*'	1135
'gcc-.*'	318
'^-(.*)$'	1216
'{(.*?)}'	336
'{(.*)}$'	1470
'\\\\s*$'	317
'%%.*?\n'	971
'[\r\n]*'	1054
'^.*@.*$'	990
'^[\t ]*'	805
'.*[a-z]'	1025
'.*[\\/]'	812
'-[>-]* '	1594
'^e\\d*$'	1248
' *[^$]+'	735
'.*Ultra'	356
'.*:(.*)'	225
'({.*?})'	1076
'\\|\\s*'	1248
'[0-9.]*'	689
"'(.*)'$"	1470
'host:.*'	1644
'^FAIL.*'	1580
' *[;#!]'	735
'<(.)*?>'	85
'\\._.*?'	1580
'(".*?")'	498
'"(.*)"$'	1470
'_[^,]*,'	1143
'\\A\\s*'	1302
'\\s+/.*'	1501
'\\s*:.*'	1571
'\\s*/?>'	330
'\\s*(;)'	276
'\\.IX.*'	1618
'.*asf.*'	126
'^//(.*)'	1580
'[^-*+]*'	1248
'^.*\\] '	1555
'-->(.*)'	975
'.*\\s.*'	1580
'.*\\.fw'	318
'(<.*?>)'	1076
'.*:\\s*'	1571
'//.*:.*@'	420
'.esour.*'	1135
'\\{.*\\}'	121
'^[^0-9]*'	108
'.*?/(.*)'	200
'\\*\\w*$'	1268
'.eserv.*'	1135
'DEBUG:.*'	1248
'(.*).js$'	1318
'(.*)-.*$'	1563
'\\) (.*)'	1295
'@\\w+{.*'	1470
'G(.*)\\Z'	80
'[ \\t]*#'	53
'linux-.*'	318
u"'(.*?)'"	782
'^11111*$'	276
'/\\*(.*)'	413
'^\\s*\\|'	1005
'^\\s*\\['	1050
'^\\s*---'	727
'\\)\\s*:'	518
'L(.*)\\Z'	80
'^#SSL=.*'	1384
'G01Z(.*)'	632
'[^\\d.]*'	1101
'"[\\s]*"'	1205
'V(\\d*)_'	1205
"(.*?)','"	126
'``(.*)``'	138
u'[\\W_]*'	506
'^pad\\d*'	533
'^[_0-9]*'	1247
':[\\s]*$'	126
'.*?_info'	356
'<[^<]*?>'	498
'\\<opt.*'	1411
'(.)\\s*$'	734
'\\s*\\w+'	1522
'\\s*\\S+'	1522
'level.*='	232
'//|\\s*$'	633
'^01\\s*$'	760
'\\(\\s*;'	64
'G00Z(.*)'	632
'<img.*?>'	200
'.*\\.mp3'	856
'.*\\.bin'	318
'.*\\.arm'	318
'.lloca.*'	1135
'truth:.*'	1644
'.*suse.*'	562
'^03\\s*$'	760
'A(.*)\\Z'	80
'\\w+\\s*:'	292
'__pyx_.*b'	1621
'(.*).css$'	1318
'<HEAD.*?>'	1523
'.*app_id='	225
'^(.*)"""$'	960
'^v8dbg.*$'	534
'("[^"]*")'	1571
'(?m)^\\s*'	1248
'OK\\s*\\Z'	1470
'^.*(#{4})'	602
' - (.*),?'	126
'>([^<]*)<'	126
'mode=(.*)'	660
'if\\s*\\('	356
'^[^\\s]*$'	624
'.*?AMD-K7'	356
'.*?AMD-K6'	356
'(.*)_(.*)'	248
'(.*)=(.*)'	420
'\\s*{\\s*'	1247
'^[^:]*://'	220
'<head.*?>'	1523
'(\\\\*)\n'	1264
'BUG=(.*)$'	534
'[\\w\\d]*'	1594
'<BODY.*?>'	1523
'ssh-.*?=+'	705
'pytftpd.*'	1381
'(\\[\\])*'	1248
'(\\{\\})*'	1248
'^\\s*var '	1025
'\\ //(.*)'	1580
'(\\d*)\\.'	560
'[^\\?]*//'	1262
'iso.*?\\-'	1295
'\\s*-\\s*'	990
'.*stderr$'	542
'id=(.*?),'	560
'<\\S+.*?>'	539
'eth[0-9]*'	560
'^254\\d*$'	838
'root=\\S*'	560
'\\.(\\d*)'	560
'^\\s*else'	11
'^\\+(.*)$'	1216
'.*\\.txt$'	1564
'.*?: (.*)'	548
'([^0-9]*)'	829
'Auth=(.*)'	438
'init.*.rc'	1116
'^\\s*[#;]'	599
"''(.*?)''"	1083
'n_(?:.*?)'	749
'^[.]{1}.*'	84
'^dl.*_img'	126
'\\s*title'	560
'.*metis.*'	1384
'.*Ultra-5'	356
'.*Ultra-4'	356
'.*Ultra-2'	356
'.*Ultra-1'	356
'(.*)#(.*)'	1007
' \\* (.*)'	735
'\\%(\\w*)'	225
'<br/>(.*)'	746
'<([^"]*)>'	1133
'^.*\\.sql'	1469
'\\\\\\s*$'	11
'^.*_c_id$'	1023
'^(\\s*)//'	1322
"arch='.*'"	562
'\\ \\(.*$'	1555
'.*\\.CR2$'	364
'\\s*}\\s*'	1247
'^\\t(.*)$'	599
'(.*) [^ ]'	1331
'.*<.*?>.*'	1489
'child *::'	866
'(?s)<.*?>'	1248
'^[^^ ].*$'	1633
u'.+,\\s*$'	1158
'-Wl,[^,]*,'	506
'^.*(#-{3})'	602
'[\\r\\n]*$'	1302
'.*centos.*'	562
'^(\\s*\\*)'	1322
'\\s*[^=]+='	1258
u'-[^-]*U.*'	1007
'^ehlo\\s*$'	175
'(.*?)=(.*)'	1618
'/\\.[^/]*$'	1226
'\nUID:.*\n'	1055
'<[^<]*?/?>'	144
'<([^>]*?)>'	935
'fence_(.*)'	1381
'[123 ]*H.*'	1302
'\\s*\\*\\s'	1199
'(\\d+)\\s*'	1363
'\\s*\\(.*$'	1488
'^([@+])?.*'	340
'.*fedora.*'	562
'^helo\\s*$'	175
'(\\{\\})*$'	1248
'\\bq[^-+]*'	1248
'\\-\\s*\\>'	1050
'(.*):-(.*)'	122
'-(0\\.0*$)'	339
'<link .*?>'	220
'.*debian.*'	562
'adc #(.*)$'	157
'.*--> (.*)'	975
'/\\(.*\\)/'	1399
'\\bj[^-+]*'	1248
'(?s)<!.*?>'	126
'<!--.*?-->'	413
'.*?Pentium'	356
'\\s*dfs.*$'	990
'.*?XEON\\b'	356
'.*Ultra-80'	356
'.*Ultra-60'	356
'.*Ultra-30'	356
'<([\\w]*)>'	356
'(?i)(<.*>)'	1607
'.*?Celeron'	356
'.*minimr.*'	1208
'(\\d+.*?)/'	1412
'== (.*) =='	319
'^[a-zA-Z]*'	1230
'#\\s*endif'	533
'(fe80.*?)"'	1501
'^.*\\.zip$'	1178
'comp=[^&]*'	741
'^.*\\.xsd$'	1546
'.*\\/\\/.*'	557
'(^\\s*)\\-'	1580
'(^\\s*)\\+'	1580
'(^\\s*)\\*'	1580
'<.*>|</.*>'	1076
'  \\* (.*)'	735
'\\bm[^-+]*'	1248
'^\\s*@Test'	1570
'^--- (.*)$'	1216
'var(.*)\\$'	407
'RRULE:(.*)'	1116
u'(.*)-(.*)'	1469
'^.*\\.img$'	1178
'^net_(.*)$'	1205
'\\br[^-+]*'	1248
'.*_wrapper'	534
'\\{(.*)\\}'	1244
'\\s*//.*\n'	796
'X(.*)Y(.*)'	632
'(parent.*)'	1644
'\\s*kernel'	560
'\\s*initrd'	560
'.*Fedora.*'	562
'^\\s*endif'	11
'.*CentOS.*'	562
'(.+?):(.*)'	949
'\\bw[^-+]*'	1248
'\\bd[^-+]*'	1248
'^help\\s*$'	539
'^_.+__(.*)'	1017
'\\bp[^-+]*'	1248
'/>\\s*<img'	1494
'qt_(.*).qm'	570
'(\\s+)(.*)'	1288
'(?m)\n\\s*'	1463
'mod(?:.*?)'	749
'^Note :.*$'	1432
'xmlns=".*"'	1407
'^\\(.*\\)$'	1205
'^([.]*).*$'	1469
'^[0-9]*\\.'	153
'<br\\s*/?>'	813
'\\;\\s*\\Z'	1302
'\\;\\s*\\}'	617
'wl_apsta.*'	318
'.*ubuntu.*'	562
'\\s*(\\S+)'	975
'\\s*(<!>=)'	1415
'.*Sun-Fire'	356
'^(\\t*).*$'	560
'action="*"'	1523
'(\\[.*\\])'	394
'</BODY.*?>'	1523
'</*string>'	163
'\x1b[^m]*m'	1618
u'<.*?>|(.)'	1158
',\\s*(\\S)'	425
'\\s*<p>\\s*'	1488
'\\*(.*?)\\*'	1555
'[ \\*]*(.+)'	413
'<img[^>]*?>'	705
'ana="(.*?)"'	1248
'^(.*)\\..*$'	990
'{([^}^{]*)}'	1328
'(\\.\\d*)?Z'	1088
'.*CDFS.*?\n'	1501
'.*grplist.*'	182
'^[0-9,-^]*$'	562
'/testing/.*'	990
'[^ ]*\\.DLL'	1045
'^\\s*\\d+:/'	1534
'/log(/.*)?$'	1258
'(.*): [0-9]'	583
'^(\\:)(.*)$'	1025
'\\s*\\;\\s*'	617
'[nN]ew (.*)'	1594
'<tr(.*?)tr>'	1055
"[uU]('.*?')"	1087
'--[ \t\n]*>'	413
'(\\s*)(.*)$'	407
'^\\>(.*)\\n'	681
'^ORIGIN\\s*'	1331
'\\s*\\,\\s*'	617
'^/*([^/].*)'	1381
'---[ \t]*\n'	910
'type\\b\\s*'	356
'([a-z]*)_.*'	796
'hidraw:(.*)'	760
'(\\[.*?\\])'	1054
'<div.*?>\\n'	310
'\\s*(\\n|$)'	727
'\\((.*)\\);'	1007
'(vtk.*\\.h)'	557
'^  File .*$'	1633
'\\A( *\\n)+'	1470
'\\s*\\:\\s*'	617
'\\s*=+>\\s*'	1248
'(^|\\s)#.*$'	1263
'.*?\\blm\\b'	356
'\\s*geo\\s*'	456
'.*(DMD.cpp)'	1007
'\\([^\\(]*$'	809
'//.*\\r?\\n'	1247
u'\\+(\\d*)y'	624
u'\\+(\\d*)d'	624
'^timeout.*/'	560
'^[a-zA-Z]*$'	1230
'P=\\(.*?\\)'	1295
'videos/(.*)'	691
'\\s*(,)\\s*'	1571
'[-+]\\s*\\('	292
'^[A-Z]\\d*$'	1248
'.*"([^"]+)"'	735
'\\{[^}]*\\}'	498
'w[0-9]*[nN]'	498
'(.*?)\t(.*)'	1007
'Name: (.*)$'	33
'\\n\\s*\\*?'	356
'<\\&I[^>]*>'	1248
'mask(?:.*?)'	749
'^pylint\\s*'	31
'\\(\\w*\\)$'	506
'^.*\\.html$'	168
'.*Ultra-250'	356
'^//\\s*a2x:'	902
'[^A-Z]+(.*)'	1326
'sta (.*),s$'	157
'(.*) = (.*)'	882
'\\!\\s*(.*)'	796
'app_(.*).qm'	1607
'.*>(.+)</a>'	175
'take\\s*[(]'	356
'(\\w+)\\(.*'	1247
'^Merge: .*$'	122
'except\\s*:'	1384
'.*(?<=}<!>)'	1113
'[(](.*?)[)]'	1461
'^lib(.*).a$'	1384
'xApMon_(.*)'	1205
'\\s*\\.\\s*'	225
'\\{(.*?)\\}'	331
'silent=(.*)'	660
'^(.*)#(.*)$'	1267
'^Time: (.*)'	1007
'href="(.*)"'	1178
'\\. *(\n|$)'	1248
'.*[0-9]{6}$'	735
'.*?\\bsse\\b'	356
'<[^!][^>]*?>'	413
'.*\\.[^/.]+$'	560
'^(\\d{3,}).*'	1469
'^CCD\\s*=.*$'	1384
'^issuer=\\s*'	1025
'^CCP\\s*=.*$'	1384
'(#+)\\s*(.*)'	1580
':.*:\\s*(.*)'	1571
'^(\\t*)(.*)$'	560
'.*link/ether'	1364
'id_.*=(\\d+)'	126
'(?<=\\))#.*$'	1248
'^\\+proj=.*$'	743
'.*\\n\\s*\\n'	1470
'^lib.*\\.so$'	1384
'([^:]*):(.*)'	1462
'======+\\s*$'	1248
'link="(.*?)"'	138
'^FEATURE\\s*'	1331
'(.*) <(.+?)>'	599
'config=(.*)$'	1181
'^(.*\\.arc)$'	445
'^[\\*j.] .*$'	153
'2012.*cc.csv'	1044
'\\$(\\w*)\\$'	1301
'.*?\\bpni\\b'	356
' *array *\\('	826
'(\\w+)[^>]*>'	928
'\n([^\r]*)\r'	1007
u'.*/([^?#]*)'	1557
'(?sm)^\\s*\n'	796
'^API `(.*)`$'	1311
'^Traceback.*'	695
'(?m)^\\s*>>>'	1470
'^CCS\\s*=.*$'	1384
'.*\\(.*\\).*'	313
'^.*JPEGLS.*$'	1432
'DTSTART:(.*)'	1116
'data="(.*?)"'	594
'^\\s*##(.*)$'	960
'.*\\$\\>\x00'	1007
'(.*?)[,(:].*'	1321
'\\#.*\\r?\\n'	1247
'(.*):\\+(.*)'	122
' *Member\\("'	1205
'<!--(.*?)-->'	394
'<id>.*?</id>'	220
'^#!/.*python'	1384
'/\\*(.*)\\*/'	1354
'^\\[(.*)\\]$'	1007
'(nodev)?\\s*'	560
'(^|\\s)+#.*$'	1263
'^\\s*Notes:$'	1432
'href="(.*?)"'	126
'(.*)\t(.*)\n'	606
'.*?\\bmmx\\b'	356
'\\s*\\*/\\s*'	1247
'^\\s*$|^#.*$'	496
'^vendor_id.*'	356
'^Date: (.*)$'	206
'^scores\\s*$'	539
'^([ \\t]*#*)'	1580
'BUG=v8:(.*)$'	534
'([-a-z]*)_.*'	796
'^\\"(.*)\\"$'	826
'-(0\\.0*\\D)'	339
'type="(.*?)"'	1248
'^.*ANNEXE.*$'	1432
':.*\\.(\\d+)'	225
'^.*?\\=(.*)$'	1338
'^(\\d+)\\s*$'	692
'[1-9][0-9]*$'	1469
'[1-9][0-9]*-'	560
'(\\d+)->(.*)'	1247
'.*?Hammer\\b'	356
'.*mandriva.*'	562
"{'(.*':.*)'}"	826
'(^\\w+:)?.*/'	1248
'^(\\d+)(.*)$'	1143
'(\\D*)(\\d*)'	14
'splay(?:.*?)'	749
'^added:\\s*$'	122
':[^\\s]+\\s*'	1218
'([$]{[^}]*})'	313
'^\\.\\./(.*)'	1226
'.+\\((.*)\\)'	1025
'file://[^/]*'	18
'[A-Z][^A-Z]*'	596
'^.*[0-9]dev$'	1384
'(\\w+):(.*$)'	264
'^[0-9]*.jpg$'	1230
'\\{ *\\d+\\}'	726
'^.*>(.*)<.*$'	1542
'^"(.*)"\\s*$'	1088
'.*Ultra-5_10'	356
'[a-z]*[^A-Z]'	596
'msgid "(.*)"'	235
'.*\\(\\d+\\)$'	1571
'^(\\w+)=(.*)$'	1309
'^subject=\\s*'	1025
'^(.*)=:(.*?)$'	1644
'\\s*=\\s*(.*)'	1147
'lda.l (.*),x$'	157
'__metrics(.*)'	1007
'^.*?\\s+#|;.*'	990
u'{[{%].*[}%]}'	1557
'^\\..*\\.swp$'	258
'</?TIMEX2.*?>'	1488
'.*int\\d+_t.*'	1216
'^(.*?)(\\*+)$'	641
'<Cflip (.*?)>'	531
'\\n[ \\t]*\\n'	1248
'<([a-z]).*\\s'	1347
'(^[\\d].*) \n'	1563
'(.+);\\s*(.*)'	1539
'-actual\\..*$'	1300
'typecode\\s*='	356
'(?i)<br[^>]*>'	55
'(?=/)(.*?)\\s'	1178
'Href="(.*?)">'	126
'(?s){{(.*?)}}'	138
'(?s)__(.*?)__'	138
'(?=^[.]{1}.*)'	84
'(.+)=(".*")\n'	1363
'(/\\*.*?\\*/)'	498
'^#!\\s*(\\S+)'	1226
'[\\s\n\r]*\\Z'	1302
'/.*?/\\.\\./?'	879
'\\ASRC\\s*=.*'	1227
'seed_hosts:.*'	664
'encoding=".*"'	561
'--[ \t\r\n]*>'	1076
'^\\s*(\\s?>)+'	1517
'-clone[1-9]*$'	562
'^Exception:.*'	695
'</?\\w+[^>]*>'	1139
'^\\s*$|^\\s*#'	842
'.*/(\\w+).kcm'	600
'^.*failure.*$'	1348
"('.')\\s*(.*)"	600
'^(\\s*>[ >]*)'	747
'^[\\w,./=-]*$'	244
'<(.*?)(?<!-)>'	1248
'\\s*value\\s*'	456
'\\s|\\(.*?\\)'	973
'(.*?)_res_div'	749
'(.*),REV=(.*)'	225
'^(.*) <(.*)>$'	1146
'^#define __.*'	757
'.*?Opteron\\b'	356
'.*:ERROR:(.*)'	1007
'^.*\\.img.gz$'	1178
'CDFS.*Healthy'	1317
'^.*\\s(.*)\n$'	990
'\\s*<<start>>'	1248
'^([#*]+)\\s.*'	1267
'src="([^"]*)"'	190
'^(\\s*lib.*)+'	415
'js\\/(.*)\\.h'	1007
'==== .* -=-=='	819
'__version__.*'	521
'attribute *::'	866
'[\\d.]+[ ]*\n'	1101
'^LABEL: (.*)$'	1520
'DURATION:(.*)'	1116
'<--\\s+.*?-->'	1248
'.*?Itanium\\b'	356
'[^.]*\\.\\..*'	233
'(\\w+)\\s*\\('	356
'.*\\/([^?#]*)'	1557
'-*\\d+\\.\\d+'	1302
'(\\w*)=(\\w*)'	356
'(.*?)([?*]|$)'	1184
'^https?://.*$'	539
'/~([^/]+)(.*)'	1638
'^\\s*NTLM\\s+'	1326
'(\\[[^]]*\\])'	1328
'.*?\\bsse3\\b'	356
'.*?\\bsse2\\b'	356
'^([0-9]+)-.*$'	122
'^((?!\\.).)*$'	1384
'align="(.*?)"'	138
'^[^:/]+://.*$'	374
'(\\s+.*)|(^$)'	1143
'^std::set<.*>$'	1403
'^[a-zA-Z]\\w*$'	101
'(0|[1-9]\\d*)$'	557
'<url>.*?</url>'	220
'^message:\\s*$'	122
'[*][*]([0-9]*)'	356
'.*?\\|\\s*(.*)'	1083
'/[.]svn|.*26.*'	805
'mediatype=(.*)'	660
'.*\\.([0-9]+)$'	1007
'nic\\.(\\d+).*'	1644
'(.*?) \\(.*\\)'	1083
'->\\s*[^\\)]*$'	1025
'\\s*\\(\\s*\\('	1248
'link="([^"]*)"'	1431
'\\s*initrd\\s+'	560
'^\\s*\\d+\\s*$'	1571
'\\-Copy\\d*\\.'	1580
'medianame=(.*)'	660
'application:.*'	1247
'<!--.*cut.*-->'	1267
'(.*):([0-9]+):'	602
'^removed:\\s*$'	122
'guibg=#*(\\w+)'	1094
'^.*JPEG2000.*$'	1432
u'\\[[^\\]]*\\]'	1139
'^[^0-9A-Za-z]*'	108
"[^ ']*::[^ ']*"	560
'^11111*22222*$'	276
'^\\<.*\\>\\W*$'	126
'^(.*/)?\\.svn$'	1217
'\\s*\\n\\s*\\n'	173
'<dd>(.*?)</dd>'	1329
'private(.*)\\$'	407
'.*IDENT=(\\d+)'	560
'#\\{([^}]*)\\}'	1436
'[^\\n]*(\\n|$)'	727
'import\\s+(.*)'	1451
'^Status:.(.*)$'	225
'^(.*/)?\\.git$'	1217
'(\\<.*\\@*\\>)'	135
'^0000.*1111.*$'	276
'\\s*<style\\s*'	1007
'.*[Cc]aptcha.*'	55
'#alias\\s+(.*)'	173
'^[+]{0,1}\\d*$'	1607
'ov_tree(?:.*?)'	749
'guifg=#*(\\w+)'	1094
'^\\s*(?:#.*)?$'	1094
'(\\w+)="(.*?)"'	1142
'(^\\s*\\d*)\\.'	1580
'int.* unsigned'	574
'^PMAKE\\s*=.*$'	1384
'(\\w+)\\s+(.*)'	803
'^\\s*\\w*\\s*$'	602
'^.*(rc[0-9]*)$'	1384
'^([cku]?)x(.*)'	1278
'\\s+ANGSTROM.*'	1302
'\\/\\*.*\\*\\/'	873
'^\\s*default.*'	560
'(\\w*)(\\[.*])'	1302
'^[a-df-z]\\d*$'	1248
'^.*\\.tar.bz2$'	1178
'.*?\\bssse3\\b'	356
'.?A[\\W0-9_]*$'	1190
'^(\\w*)\\s*\\('	407
'disable.*=.*no'	1381
'(?P<id>^.*?) @'	640
'^std::map<.*>$'	1403
'(?s)\\S.*?/\\.'	1248
'^[^:]*[\\d:]+$'	741
'^.*/?bin/.*.py'	1570
"'Page\\$(\\d*)"	126
'\\d*ubuntu\\d*'	14
'^([^:]+):(.*)$'	910
'.*\\((\\d+)\\)'	1143
'^u_(.*)_level$'	740
'mediapath=(.*)'	660
'^test_.*\\.py$'	1007
'Notice\\\\?:.*'	218
'.*scientific.*'	562
'app_id=([^&]*)'	225
'(\\w+)\\s*(.*)'	600
'# *KNOWN-ISSUE'	365
'msgid\\s"(.*)"'	360
'(.*)-----*(.*)'	738
'Out\\[(.*)\\]:'	1580
'([^:]*)\\:(.*)'	765
'^(.*)([ \t]+)$'	1216
'.*MonoDevelop$'	341
'^[\\w/:\\.-]*$'	360
'\\([^\\)]*\\)$'	1431
'\\s*kernel\\s+'	560
'rb_tree(?:.*?)'	749
'^([^,]), (.*)$'	1408
'.*(dev|HEAD).*'	1217
'.*?\\b3dnow\\b'	356
'\\s*!important'	753
u'\\s+\\(.*\\)$'	1557
'resources/.*?/'	436
'.*\\?ptr=(.*)$'	1563
'Overfull.*wide'	31
'^renamed:\\s*$'	122
'^([^:]+):.(.*)$'	225
'^[0-9]{3}.*.py$'	261
'[0-9]*[nN]{1,1}'	498
'(.*?)\\s+<(.*)>'	1278
'[\\s\\S]*<TEXT>'	1248
'\n(\\s*\\*\\s*)'	1322
'^TEST-.*\\.xml$'	1208
'revision\\s*=.*'	747
'^(\\d*)\\scalls'	1199
'(\\w+)by.*group'	317
'bitcoin_(.*).qm'	570
'title="([^"]*)"'	1431
"VERSION.*'(.+)'"	777
'(\\S*)\\s*-\\*-'	782
'^((\\s)\\2*)\\S'	1376
'<h2>(.*)<\\/h2>'	175
'.*\\serror\\:.*'	649
'^try[0-9][0-9]*'	802
'\\s*(\\+?=)\\s*'	153
'caption="(.*?)"'	138
'# Updated on:.*'	1308
'<uuid>.*</uuid>'	1201
'(\\<.*\\@.*\\>)'	135
'<!DOCTYPE[^>]*>'	1248
'</?alpino_ds.*>'	1248
'^(<[^>]*/>)\\s*'	1301
'^([^_].*)\\.py$'	190
'([0-9][0-9.]*)$'	743
'^modified:\\s*$'	122
'\\s*(\\d*) (.*)'	443
'pat_trie(?:.*?)'	749
'endmacro\\s*\\n'	534
u'[\t ]*\n[\t ]*'	1438
'charset=([^;]*)'	393
'Usable as:\\s*$'	1244
'^{SSHA512}(.*)$'	931
'cluster_name:.*'	664
'^(\\w+://)?(.*)'	1088
'<[Bb][Rr][^>]*>'	110
'test_(.*)\\.py$'	1007
'test_(.*)\\.js$'	1007
'.*GA=(\\d+)&?.*'	182
'^[a-z|A-Z]\\w*$'	633
'.*\\((.*\\.tex)'	31
'^.*$(?<!\\.zip)'	908
'([^#]*)(?:#.*)?'	1248
'([A-Za-z0-9_]*)'	55
'^# (?P<data>.*)'	307
'^(.*?) - (.*?)$'	539
'.*test_.*\\.py$'	787
'^Version:.(.*)$'	225
'^(\\s*)"""(.*)$'	960
'^-?\\d*\\.\\d+$'	901
'.*?Athlon HX\\b'	356
'^std::list<.*>$'	1403
'text id="(.*?)"'	1248
'<name>.*</name>'	1201
'^\\s*msgid\\s+"'	200
'package\\s+(.*)'	1451
'(?P<ws>[ \\t]*)'	53
'(?P<fn>.*)\\..*'	1143
'/browser(/.*|$)'	645
"'(?:[^']|'')*'$"	1571
'(\\d+\\.\\d+).*'	682
'\x1b\\[([^m]*)m'	1580
'.*\\): \\t?(.*)'	1007
'^(\\d+)\\s(.*)$'	135
'hello_foo(_.*)?'	1216
'^(\\d+)[^\\d].*'	1007
'\\s*\\S+\\s*\\Z'	550
'(\\S+):\\s*(.*)'	1301
'(\\S+):\\s*(.+)'	413
'(([^/]*)(/.*)?)'	1248
'\x1b\\[[0-9;]*m'	328
'inet ([0-9.]*)/'	560
'.*ri\\/.*\\.ri$'	1226
'if\\s+.*\\sthen'	498
'(^\\d*)\\s*(.*)'	205
'name=\\"(.*)\\"'	178
'<div.*?>(.*?)</'	1469
'(?i)[a-z_]\\w*$'	12
'Warning\\\\?:.*'	218
'([^\\.])+\\..*$'	233
'(.*):(\\d+): .*'	602
'[ ]*%\\(.*?\\)s'	356
'^(0|[1-9]\\d*)$'	1495
'PyObject\\s*\\*'	1249
'\\w+([.]\\w+)*$'	1214
'\\((.+)\\)\\s*;'	812
'.*\\r(?=[^\\n])'	1580
'^[a-zA-Z0-9_]*$'	548
'\nsh: line 1:.*'	218
'&(?!([#\\w]*;))'	1638
'(.*)\\(\\w+\\)$'	1571
'.*(\\d+_\\d+).*'	990
'^(\\w+)\\.(.*)$'	560
'#(\\w+)\\s+(.*)'	165
'^(\\s*\\*)\\s*$'	1322
'name\\s+"(.*)",'	1501
'<\\?xml .*?\\?>'	1638
'-expected\\..*$'	1300
'rgba?\\((.*)\\)'	1054
'href="[^"]*.py"'	499
'href="[^"]*.in"'	499
'^(.*):([0-9]*)$'	1580
'http://[^ \n\r]*'	297
'^\\s*/\\*.*?\\*/'	1377
'.*([a-z][a-z]).*'	1512
'(\\D*)(\\d*)(.*)'	1543
'^(LD_X11\\s*)=.*'	1384
'initial_token:.*'	664
'(/:[a-zA-Z]\\w*)'	1268
'tmpl/[^ ]*_js.cs'	413
'(.*)\\(\\d+\\) :'	1164
'line-height:.*?;'	1513
'^"(?P<data>.*)"$'	307
'^std::deque<.*>$'	1403
'^#: (?P<data>.*)'	307
'^platform/(.*?)/'	1300
'^[a-zA-Z0-9_-]*$'	562
'^([\'"])(.*)\\1$'	1025
'([\r\n.]*)\r\n# '	506
'dti_recon (.*)\n'	975
'(?P<location>.*)'	746
'([A-Z_]*) = (.*)'	1007
'^std::stack<.*>$'	1403
'^text/html(;.*)$'	158
'drives\\/([^/]*)'	575
'.*?PentiumPro\\b'	356
'http://[^/]*(.*)'	360
'localtime=(.*)\t'	1501
'.*fulltext.asp.*'	182
'(?:(\\w+):)?(.*)'	1248
'^(variable\\w*)$'	633
'\\[\\[(.*)\\]\\]'	319
'^#include <(.*)>'	1243
'^[a-zA-Z_0-9.-]*'	436
'.*SPARCstation-5'	356
'^Capacity:.(.*)$'	225
'<!--[^>]*-->|<!>'	1247
'dprint\\((.*)\\)'	46
'^(.*)([\\?#].*)$'	988
'^\xff+\x00\xff*$'	1580
'(0x\\w+)\\s*(.*)'	600
'.*?Pentium IV\\b'	356
'.*\\((.+)\\)\r?$'	1278
'^.*VTK_LEGACY.*$'	557
'\\.so\\.[0-9.]*$'	1540
'.*[Ll][Ss]-120.*'	1051
'.*(\\d).*(\\d).*'	225
'^\\d+\\.\\d+\\w*'	718
'</?(ins|del).*?>'	360
'alias\\s+"(.*?)"'	1501
'.*?Pentium II\\b'	356
'^#, (?P<data>.*)'	307
'^\\s*--+\\s*(.*)'	727
'^.*system/bin/.*'	1465
'(0|[1-9]\\d*)(:)'	557
'[^ ]*\\.[A-Z]{3}'	1045
'^\\s* ([#\\*-]) '	738
'^std::tuple<.*>$'	1403
'<([a-zA-Z]).*\\s'	1347
'\\boperator\\b.*'	1227
'^/intertrac/(.*)'	1258
"domain type='.*'"	562
'([A-Za-z0-9_:]*)'	55
'.+::\\[None\\].*'	506
u'/data[^ ]*/hphp'	218
'[a-zA-Z0-9-]+=.*'	313
'.*video:(\\d+).*'	200
'[0-9]*n[wW]{1,1}'	498
'^(\\s*)\\s\\*/.*'	1322
'^_{2,}.*[^_]+_?$'	640
'^nic\\.(\\d+).*$'	1644
'\\s*latitude\\s*'	456
'^[0-9A-Za-z.-]*$'	1025
"'\\.\\./([^']*)'"	126
'"title":"(.*?)",'	1181
'\\s*([^()]+)\\s*'	1488
'LaTeX Warning:.*'	31
'^PID\\s*([0-9]+)'	679
'.*/python27.zip$'	1495
u"([a-z]+)([,']*)"	782
'^([^ ]+) - .*\\n'	506
'(.*?\\(.*?\\)).*'	1051
'([^:]+):\\s*(.*)'	1143
'(?sm)^\\s*//.*?$'	796
'^(.*)\\((.+)\\)$'	1571
'(.*?)name="numa"'	1055
'(0|[1-9][0-9]*):'	939
u'(\\d+).*?(\\d+)'	782
'artist="([^"]*)"'	1431
'^\\+\\+\\+ (.*)$'	1216
'^(\\s*LD\\s*)=.*'	1384
', \\w*?\\.|(I+)$'	182
'<(hr|br)[^>]*?/>'	1267
'protected(.*)\\$'	407
'@requires (.*)\n'	60
'.*?/video/films$'	84
'^std::queue<.*>$'	1403
'\\w+\\(.*\\)\\s*'	550
'"[^"]*"|\'[^\']*'	1076
'(.*?):(.*?)@(.*)'	1247
'</TEXT>[\\s\\S]*'	1248
'def\\s+(\\w+).*:'	1143
'<title>.*</title>'	384
'"(?P<heading>.*)"'	190
'"(?P<phrase>.*?)"'	631
'Governor on (.*)$'	182
'^(.*)(\\.py[oc])$'	1226
'\\w[^=]*\\s*=\\>?'	356
'logstore\\(.*\\);'	451
'<PATH>(.*)</PATH>'	975
'"(?:[^"]|\\\\")*"'	602
'^\\s*[\\w-]+\\s*$'	602
'.*?Pentium III\\b'	356
'\\s+\\-(\\w+)\\s*'	873
'^/blog(?:/(.*)|$)'	1090
'[^[]*\\[(.*)\\].*'	1488
'([0-9]*\\.[0-9]*)'	329
'(\\d+)(.*)\\s+/.*'	1054
'.*@example\\.com$'	1500
"machine type='.*'"	562
'(\\-)\\s*\\d{1,2}'	1008
'[ \\t]+sss[ \\t]*'	789
'(\\s)*class.+\\:$'	842
'^std::bitset<.*>$'	1403
'^BUILDTYPE\\s*=.*'	1384
'^([a-zA-Z]+)(.*)$'	1143
'^Memory:.(.*).MB$'	225
' validUntil=".*?"'	1500
'\\s*#\\s*endif\\b'	1007
'listen_address:.*'	664
'(\\w:[/\\\\])(.*)'	599
'# of (.*)\t(\\d+)'	560
' name: (?P<CN>.*)'	1205
'[A-z]+.*\\_[0-9]+'	1295
'(.*//*)*(.*)\\..*'	1430
'AWSSecretKey=(.*)'	1197
'^(\\s+)[-=]+\\s*$'	356
'<item>(.*)</item>'	431
'splay_tree(?:.*?)'	749
'\\s*longitude\\s*'	456
'^(0|[1-9][0-9]*)$'	537
'.*?([0-9]*)\\.xml'	55
'//(.*?)((/.*?)?)$'	542
'LawText1">(.*?)</'	126
'\\[\\[(.*?)\\]\\]'	1083
'.*?\\b3dnowext\\b'	356
'<body>(.*)</body>'	1076
'.*(\\([A-Z]\\)).*'	6
'autobench_args:.*'	560
'.*\\swarning\\:.*'	649
'^.*RLELossless.*$'	1432
'\\\\([1-9][0-9]*)'	53
'AJS =(.|\n)*\n}\n'	56
'thread: .+ - (.*)'	1304
'^committer: (.*)$'	122
'^WTF::Vector<.*>$'	1300
'^\\s*if\\s+(\\w+)'	11
'(.*?\\+.*?)x(.*?)'	1278
'[ \t]*\\[[\\w]+ $'	626
'(<pre>\\s*)<br />'	1363
'^%include\\s+(.*)'	548
'^(?P<n>.*) *\\(.*'	1599
'(.*) \\([0-9]+\\)'	506
'/([^/]*)/([^/]+)/'	1319
'.*?Pentium.*?M\\b'	356
'.*Chrome/(\\d*).*'	557
'ticket: .+ - (.*)'	1304
'\\{([^}]+)\\}(.*)'	1500
'[A-Z0-9_]{0,8} *='	571
'^std::vector<.*>$'	1403
'[_a-zA-Z][\\w-]*$'	819
'.*\\<use (.*?)\\>'	31
'have a nice day.*'	1437
'^[\\w][\\w\\d.]*$'	1594
'(\\/display[^"]*)'	110
'.*?/spec/.*?\\.rb'	1025
'(.*?)(\\(.*\\))?$'	1248
'^(\\s*)(-)?[\\w]*'	1025
'^    \\w(\\w)+.*$'	1633
'\\w*\\s*=\\s*\\w*'	184
'.*?/video/tv/Misc'	84
'^(\\w+)(\\:\\w+)*'	1247
'<\\s*((.*?))\\s*>'	356
'^ *\\(.*=.*\\) *$'	1205
' ?([^=]+)="(.*?)"'	1244
'^\\s*<(\\w+)(/?)>'	244
'koko\\=[a-z,A-Z]*'	185
'^[ \\t]*def \\w+$'	1555
'^CPU.[0-9]:.(.*)$'	225
'(?P<spaces>^\\s*)'	1227
' *[0-9]+ + [0-9]+'	1302
'</table>.*?<table'	1258
"^File '([^\n]*)'$"	889
'{*[a-zA-Z_ 0-9]+}'	1328
'^[a-z][a-z0-9_]*$'	557
'^\\s*(\\d+).?\\s+'	771
'(\n|^)\\s*\\*\\s*'	1322
'{[a-z][a-z0-9-]*}'	200
'<font.*>.*</font>'	1620
'^(.*)\\((\\d+)\\)$'	1571
'(autotest_args:).*'	560
'<\\[\\/?[^>]+\\]*>'	1248
'[a-z]*.example.com'	336
'^IP Address:.(.*)$'	225
'^.*JPEGExtended.*$'	1432
'\\s*import\\s+(.*)'	1147
'(?i)<i>([^<]*)</i>'	1607
'(\\d+)( *\\* *)\\('	787
'^.* \\(#[0-9]+\\)$'	539
'([^<]+) (<[^>]*>)$'	502
'\\s+(eth\\d+):(.*)'	803
'(\\$\\([^\\)]*\\))'	413
'^:.*[MAD]\\s*(.+)$'	122
'int\\s*[(][^)]*[)]'	356
'(?i)<li>(.*?)</li>'	539
'^([0-9]+)\\..(.*)$'	225
'\\s\\s\\s\\s+.*\\Z'	1302
'(.*?)_settings_div'	749
'ID_LENGTH=([0-9]*)'	903
'.*DESC:\\s+(.*)\\n'	225
'Ref1\\=(http.*)\\s'	1150
'flake8[:=]\\s*noqa'	1505
'^[a-z]\\d(?:,\\d)*'	748
'^.*? (\\d+)\\.wav$'	748
'.*(Rep|Sen). (.+)$'	182
".*'(.*)'.*'(.*)'.*"	1025
'(?ims)<ul>.*?</ul>'	539
'^GC Function: (.*)'	1007
'<info>(.*?)</info>'	1093
'\\d+(.\\d*)?|.\\d+'	1076
'ltq\\":\\"(.*?)\\"'	1419
'\\s*([a-f0-9]+):.*'	464
'\\s*global\\s+(.*)'	1147
'[ \r\t]*\n[ \r\t]*'	757
'.*videos/(\\d+)/.*'	200
'.*Firefox/(\\d*).*'	557
'.*pdfTeX warning.*'	31
'^.*JPEGBaseline.*$'	1432
'[\\/]*\\.\\.[\\/]*'	908
'raise\\s+\\w+\\s*,'	1025
'([1-9][0-9]*)*(.*)'	498
'@requires:? (.*)\n'	60
'([0-9a-f]+)\\W(.*)'	233
'([^\\s].*?)(\\s|$)'	747
'(?s)<!DOCTYPE .*?>'	1470
'http.+?(?:(?!").)*'	1059
'<link href="(.*?)"'	1096
'^\\* (.*): (.*)\n$'	1311
'^(\\s*)"""(.*)"""$'	960
'v=([0-9a-zA-Z_]*)&'	126
'v=([0-9a-zA-Z_]*)$'	126
', (\\w*?)\\.|(I+)$'	182
'^ *L([0-9]+) *: *$'	1260
'^\\s+/*\\{*\\s*SC_'	531
'OUTPUT *(.*\\.bcf)'	743
'OUTPUT *(.*\\.aux)'	743
'(?i)<b>([^<]*)</b>'	1607
'(?sm)^\\s*load.*?$'	796
'.*/index/([^/]+).*'	200
'.*?Pentium.*?II\\b'	356
'\\w*\\([\\w, ]*\\)'	232
'^(\\S+ +\\S+)\\s*$'	1246
'\\{(.*?)\\}(?!\\})'	1094
'^#\\. (?P<data>.*)'	307
'(\\:[_a-zA-Z]\\w*)'	1268
'(\\s)*#begin-fold:'	842
'\\[ip:([0-9_]*)\\]'	1007
'\\s*(?P<a>,|:)\\s*'	1247
'mcolc_1div2(?:.*?)'	749
'V :\\s*([\\d.]+).*'	1437
'^([^:]+:)\\d+:\\s*'	1226
'/[ ]*[\\d.]+[ ]*kg'	1101
'\\s+\\-\\-(.*?)\\s'	873
'(0|-?[1-9][0-9]*)e'	939
'(0|-?[1-9][0-9]*)$'	534
'^branch\\s*=[^=].*'	747
'^group__\\w*\\..*$'	633
'^([0-9a-f]+) (.*)$'	122
'^:.*[MAD]\\s+(.+)$'	122
'(.*)\\s\\((.*)\\)$'	1607
'.*Ultra-Enterprise'	356
'.*videoId=(\\d+).*'	200
'(?ims)<li>.*?</li>'	539
'(?:(?:,\\s*)|\\s+)'	1094
'^ssh://(.*?)(/.*)$'	560
'^.*JPEGLossless.*$'	1432
'\n(\\s*\\*\\s*\n)+'	1322
'(\\d+:)*(.*)(_.*)*'	1143
'^.* +resolv.conf.*'	1465
' *\\)(?P<comma>,?)'	826
'\\n(?:[ \\t]*\\n)+'	666
'\\s*[a-zA-Z_]\\w+='	1258
'G00X(.*)Y(.*)Z(.*)'	632
'<uuid.*?uuid>\\n  '	1353
'<[a-zA-Z\\/][^>]*>'	175
'^[^_]{1,1}.*\\.py$'	1528
'^([^ \\t]+)[ \\t]*'	813
'<name>(.*?)</name>'	1093
'(.*\\.zip)/?(.*)$|'	1248
'[a-z,0-9,A-Z]*.nii'	530
'Underfull.*badness'	31
'(.*?) trace output'	1007
'(.*?)([^.]*?)(_?id)'	241
'class\\s*(\\w+)\\s*'	407
'([\\-0-9]*)([ADIP])'	1248
'<script.*?</script>'	1469
'(\\S+?)\\s*=\\s*(.)'	1179
'version: \\s*(.*)\n'	975
'(<!--.*-->|<[^>]*>)'	992
'except\\s*Exception'	1384
'(SW)?TWIW?=W?{.*?};'	1580
'^([^-]*)(?:(-.*))?$'	1094
'^#~ "(?P<data>.*)"$'	307
'"file" ?: ?"(.*?)",'	1093
'<h1[^>]*>(.+?)</h1>'	1277
'^(MW|W)\\((.*?)\\)$'	1636
'(?<!\\:)//(?P<a>.*)'	1247
'(\\n|^)--- *(\\n|$)'	1636
'smallint.* unsigned'	574
'\\A\\s*@deprecated:'	1248
'^std::weak_ptr<.*>$'	1403
'.*?Pentium.*?MMX\\b'	356
'power_(.*).template'	171
'(?:[^\\n]*\\n){0,2}'	1594
'^#wal_level\\s*=.*$'	1520
'Model name:\\s+(.*)'	1501
'^\\d\\d\\d_.*\\.py$'	560
'^\\((\\?P<[^>]*>)?$'	1248
'[ \\t]*(#[^\\n]*)?$'	908
'\\[[a-z]+?:.*\\]\\s'	1431
'^std::multiset<.*>$'	1403
'^\\[([;\\d]+)m(.*)$'	1463
'(.*?)(_\\d\\d){1,2}'	971
'^[a-zA-Z0-9 .:,-]*$'	585
'copy.*from\\s+stdin'	1520
'^.* vim: set .*:.*$'	640
'.*Test.(java|scala)'	1570
'<img [\\W\\w\n]*?/>'	185
'arrResume\\[\\d*\\]'	126
'.*Video: ([^,]+),.*'	53
'(\\\\*)("""|\'\'\')'	560
'([\'"][^\'"]*[\'"])'	1054
'\\s*\\(\\s*\\)\\s*$'	1248
'>\\s*(\\S+)\\s*(.*)'	1412
'^Properties on .*:$'	926
'</?\\s*[a-zA-Z0-9]+'	1247
'(?sm)//SNIP-START.*'	796
'.*/vote_history.pdf'	182
'gene_id \\"(.*?)\\"'	1412
'[\\w|\\W]*quarter.*'	557
'^(-?[0-9\\.]+)\\s*$'	1503
'<[a-zA-Z\\/][^>]*?>'	175
'.*Audio: ([^,]+),.*'	53
'^Name:[ ]*([^\\s]*)'	122
'^\\s*$|^(-+).*(-+)$'	1384
'\\$\\([^ ]* \\$<\\)'	534
'^TEST-UNEXPECTED-.*'	695
'^.*<\\s*(\\S+)\\s*>'	1559
'([a-z()!]+)\\s*(.*)'	1580
'typedef (\\S+) (.*)'	413
'.*/watch/([^/]+)/.*'	200
'^(\\s*)(\\*|0|o|-) '	290
u'__|try\\s*:|lambda'	1557
'^/([^/]+)(?:/(.*))?'	66
'([0-9]+).*?([0-9]+)'	903
'images/([^/]*)/(.*)'	1381
'\\<\\?[^\\>]*\\?\\>'	605
'^Server.Name:.(.*)$'	225
'UKUPNO:\\s([\\d.]*)'	540
'\\# On branch (.*)$'	747
'hello_foo_new(_.*)?'	1216
'bool\\s*[(][^)]*[)]'	356
'(\\w+(?:\\.\\w+)*)$'	1495
'^Product.Ver:.(.*)$'	225
'^(\\+|\\-)\\s*(.*)$'	641
'dc_([a-zA-z]*)\\.qm'	1396
'\\A\\s*\\.START\\s*'	1248
'\\?[\\w\\.\\-/]*\\='	384
'(\\S+)([ \t]*?)(.*)'	338
'http://qik.com/\\S*'	1247
'([\\\'"])[^\\1]*\\1'	1469
'^\\s+[END|START].*$'	560
'model name\\s*:\\s*'	1143
'image:url\\((.*)\\)'	1175
'.*?Pentium.*?III\\b'	356
u'^[\\s]*==([^=]+)=='	1100
'AWSAccessKeyId=(.*)'	1197
'<Directory (".*?")>'	1182
'@requires?:? (.*)\n'	881
'(\\d\\.\\d\\.?\\d*)'	534
'(#include\\s*".+?")'	894
'\\s*District (\\d+)'	182
'^[>|\\s]*[-_]+\\s*$'	43
'{{(?P<braced>.*?)}}'	1268
'private(.*)function'	407
'^[ \\t]*class \\w+$'	1555
'project.[^=]*=(.*)$'	444
'.*?Core\\(TM\\)2\\b'	356
'In&nbsp;\\[(.*)\\]:'	1580
'^std::multimap<.*>$'	1403
"VERSION = '([^']*)'"	757
'(\\\\.|[^#])*(#.*)?'	1248
'^Part.Number:.(.*)$'	225
'\\[\\[image:([^ ]*)'	138
'^(.*)#{(\\w+)}(.*)$'	220
'-?(\\d*)([.]?\\d*)?'	1248
'^(\\w+\\:)\\s*(.*)$'	641
'([^<]*)<([\\w]*|/)>'	363
'.*\\.(CR2|JPG|MOV)$'	364
'^([0-9]+[.][0-9]+).*'	1621
'\\/\\*\\*(.*?)\\*\\/'	617
'^.+? (.*) (\\d+) .*$'	599
'[^{}]*{[^{}]*}[^{}]*'	1248
'^[0-9]+(\\.[0-9]+)*$'	1225
'checksum: \\s*(.*)\n'	975
'(?<=\\()\\w*\\,?\\s*'	1580
'(\\s*&|)(?P<line>.*)'	356
'(.*)-[0-9_]+(.*[.]a)'	1249
'<script .*?</script>'	1247
'^regex:(?P<regex>.*)'	826
'^START TIME:\\s(.*)$'	1520
'^[ -/:-@[-`{-\x7f]*$'	204
'\\*?\\*?\\w+\\s:\\s*'	550
'.*Scientific Linux.*'	562
'<source>.*?</source>'	220
'^#(\\s*-DUSE_SSL -I)'	1384
'^Product.Name:.(.*)$'	225
'ID_AUDIO_ID=([0-9]*)'	903
'.*http://.*?(/\\S*/)'	118
'([a-z][a-z0-9]*)\\+$'	407
'([\\w\\-]+\\s*:)\\s*'	407
'\\s*(-?\\w+:\\w+)+,*'	1534
"('(?:[^']|(?:''))*')"	1258
'[1-9][0-9]*[.][0-9]+'	533
'^\\s*(?P<arg0>[^ ]+)'	902
'(\\S+)\\s\\((.*)\\)$'	264
'^([a-z_-]+) if (.*)$'	402
'def\\s*(\\w+)\\s*\\('	407
' \\([=<>]* [^ )]*\\)'	1143
'(?=-)([^>]*)(?=.tar)'	1178
"u?'(.*)' != u?'(.*)'"	1258
'<div class="m">(.*),'	1494
'PATCH\\s*=\\s*(\\d+)'	1540
'.*: (.+):([0-9]+):.*'	498
'^(\\s)*import (\\w)+'	842
u'[a-z]+(-[a-z0-9]+)*'	55
'.*/videos/([^/]+)/.*'	200
'^.*"(\\d{10})\\/".*$'	566
'.*/video/([^/?#]+).*'	200
'^Name\\s*:\\s*(\\S+)'	1491
'.*?[^a-zA-Z0-9_]_\\('	1377
'name="[\\w\\.\\-/]*"'	384
'\\W*@\\W*|\\W+at\\W+'	485
'release\\s*=\\s*True'	531
'DocumentRoot (".*?")'	1182
'<EMAIL>(.*?)</EMAIL>'	1001
'.*(Reader|Tribune).*'	1081
"LOCALROOT.'([^']*?)'"	1182
"XAMPPPATH.'([^']*?)'"	1182
'([.]flat(\\s*?[[=]))'	356
'<genre>(.*?)</genre>'	1093
'\\[caption[^\\]]*\\]'	1267
'^ttp(s?)://\\S+\\s*$'	175
'<(.*?)>; rel="(.*?)"'	366
'(?P<line>.*)&\\s*\\Z'	356
"jsclassref='([^']*)'"	1181
'<include_file=(.*?)>'	531
'<script>.*?</script>'	971
'(.*)callsign\\=(.*)$'	1474
'/vote/(up|down)/(.*)'	645
'MINOR\\s*=\\s*(\\d+)'	1540
'MAJOR\\s*=\\s*(\\d+)'	1540
'.*DocTypeID=(.+?)&.*'	182
'(?!__init__).*\\.py$'	1315
'([\\d.]+)\\s*(\\D.*)'	1469
u'</tbody>\\s*<tbody>'	782
'-?[0-9]+\\.[0-9e+-]*'	339
'.*CDFS.*?Healthy.*\n'	1317
'^(.*?)(\\d*):(\\d+)$'	518
'\\[\\[Image:.*\\]\\]'	539
'title\\+?= *(.*?) *$'	153
'filename: \\s*(.*)\n'	975
'^INSTALL_FER_DIR =.*'	1384
"'((?:[^']|(?:''))*)'"	1258
'"([^\\\\"]+|\\\\.)*"'	339
'/\\*.*?\\*/\\s*|[()]'	292
'\\[hwid:([^\\]]*)\\]'	1007
'^(?P<d> *)(?P<o>.*)$'	1599
'^([a-z-]*) +([^ ].*)'	1618
'^\\s*(.*?)[\\s({\\[]'	534
'^(\\s*) [#\\*-] (.*)'	738
'lda.b tcc__(r[0-9]*)'	157
'float\\s*[(][^)]*[)]'	356
'(\\s*)(File "(.*))\n'	602
'(?!\\\\)(\\\\\\\\)*"'	1179
'\\((.*)/(.*)/(.*)\\)'	126
'(?:0|[1-9][0-9]*)\\Z'	677
'`([a-z_][a-z0-9_]*)`'	251
'^(\\d+)\\,\\s(.*)\\n'	681
'^(?P<version>\\d+).*'	1315
'name=\\"q\\">([^<]*)'	1248
'dlamch_\\("(.*?)"\\)'	356
'([+-]?\\d*\\.?\\d+)$'	456
'^SPM2 (.*) http(.*)$'	1432
'^Subject: [^\n]+$(.*)'	335
'DISTRIB_CODENAME=(.*)'	225
'lc_1div8_1div2(?:.*?)'	749
'.*?_([a-z]*)_pid\\d*$'	1007
'(?<!\\w)[a-zA-Z_]\\w*'	1247
'/?schemas/.*/.*\\.xsd'	436
'(\\w:)?(\\w*)-?(\\w*)'	1302
'-[ \\t]*\\n[ \\t\\r]+'	1618
'.*Short Description.*'	182
'.*VERSION:\\s+(.*)\\n'	225
'^\\s+commonName=(.*)$'	1025
'\\#!\\S+\\bpython\\S*'	313
'^.* - ntp1.npl.co.uk$'	539
'\\s<br/>\\s*\\S*<br/>'	1494
"USINGXAMPP.'([^']*?)'"	1182
"APACHEPATH.'([^']*?)'"	1182
'(\\w+\\d+-cd\\d+): .*'	560
'^<([a-z][a-z0-9_]*)>$'	557
'LaTeX Font Warning:.*'	31
'^(.*)PS 3.6-2007(.*)$'	1432
'nickname\\s*=\\s*(.+)'	1094
'seeds:(\\s*-.*)*\\s*#'	664
'AppleWebKit/.*Mobile/'	78
'(AIX version: .*) TCP'	225
'.*[0-9]_srcCol[0-9].*'	1295
'/\\* ".*/mtrand.pyx":'	356
'(gr|usrp2|trellis)_.*'	633
'<([\\w]*)=([, \\w]*)>'	356
'^\\s*([a-z]+)\\s+(.*)'	796
'^std::shared_ptr<.*>$'	1403
'DataText4>([^<]*)</a>'	126
'sta.b (tcc__r[0-9]*)$'	157
'.*PKGINST:\\s+(.*)\\n'	225
'File (.*) is removed;'	413
'[ \\t]*\\n([^\\r\\n])'	1025
'suppressions.*\\.txt$'	1007
'^Serial.Number:.(.*)$'	225
'\\$\\$([^\\$]*)\\$\\$'	1340
'sta.b tcc__r([0-9]*)$'	157
'protected(.*)function'	407
'^([0-9a-f]{40}) (.*)$'	233
'enabled\\s*=\\s*false'	1570
'RESIDUE NUMBERS :(.*)'	726
'^(-?[0-9\\.]+)\\s*mm$'	1503
'^(-?[0-9\\.]+)\\s*in$'	1503
'^(-?[0-9\\.]+)\\s*cm$'	1503
'^```(.*?)\n(.*?)^```$'	485
'<updated.*?</updated>'	220
'\n?(\\w*)\\:\\s(.*)\n'	225
'[^:]+://(.*)/([^/]*)$'	560
'.*\\[(.+)  ;  (.+)\\]'	1302
'\\([Dd]isc *[1-9]+\\)'	110
'release\\s*=\\s*False'	531
'(.*(\\s+|[*]))(\\w+)$'	356
'.*i=([a-zA-Z0-9_]+).*'	200
'.*\\n.*\\n\\s+(.*)\\n'	225
'\\s*[A-Z]+\\s[A-Z ]+$'	1001
'nic\\.\\d+\\.(.*)\\.0'	1644
'<(\\w+)(\\s.*)?[^/]?>'	992
'(?sm)}\\s*else\\s*{.*'	796
'\\(applications/\\(.*'	1247
'^std::unique_ptr<.*>$'	1403
'\\s*([^,;]+?)\\s*[,;]'	1522
'((?:\\w+\\.)*\\w+)\\.'	1594
'reporter:status:(.*)$'	440
u'([^ ]+) *(\\+\\+|--)'	1422
'BENDING RESIDUES:(.*)'	726
'^[-\\\\.(),!&^|>=<]*$'	1248
'^(\\d+):.*,.*,(\\d+)$'	176
'<\\s*/?\\s*([^\\s>]+)'	1248
'^#include "llvm/(.*)"'	1243
'<hr class=".*?" />\\n'	310
'("(\\\\.|[^"\\\\])*")'	539
'(.*)\\s(ASC|DESC)(.*)'	1158
'^.*MemberID=(\\d+).*$'	182
'hdfs://(.*?:\\d+)(.*)'	990
'^[a-zA-Z_]+[\\w0-9]*$'	602
'.*\\{\\s*(.*?)\\s*\\}'	1522
'^\\((.*?)\\)\\s*(.*)$'	641
'^B.[1-9].*Private .*$'	1432
'^Serial Number:.(.*)$'	225
'[\\w|\\W]*financial.*'	557
'"[^=]*=\\s*"([^"]*)";'	520
'^(platform/.*?/)?(.*)'	1300
'^http://.+? \\(.*\\)$'	539
'\\bhostname="([^"]*)"'	727
'^(\\d+) (\\d+) "(.*)"'	1251
"^\\$db\\s*=\\s*'\\w+'"	721
'([^\\w.@+-/]|[,;?!])*'	585
'^file\\:\\/\\/[^\\?]*'	1555
'Summary in:\\s*(\\S*)'	1571
'enum\\s+(\\w+)\\s*\\{'	1244
u'(?s)<[^>]*>|&#?\\w+;'	506
'((\\\\.|[^#])*)(#.*)?'	1248
'lda.b tcc__r([0-9]*)$'	157
'([\\w ]+)(\\(.*?\\))?'	1580
" *(?P<key>'.+') *=> *"	826
'<img .*?src="([^"]*)"'	641
'<[a-zA-Z0-9\\[\\]_]*>'	108
'(?:([0-9a-f]+):)?(.*)'	133
'^(my_gnu\\s*=\\s*).*$'	1384
'^[a-zA-Z]+[\\w0-9-]*$'	602
'^[^/\\\\.~][^/\\\\]*$'	1529
'^[a-z][-_\\.0-9a-z]*$'	826
'.*\\((\\.\\/.*\\.tex)'	31
'^\\s*(\\w+)\\s*=(.*)$'	11
'\\s*DRI_CONF_DESC_END'	533
'[$]([A-Z_][A-Z0-9_]*)'	1258
'\\[([^]]*)\\]:(\\d*)$'	687
'^[ \\t]*from [\\w.]+$'	1555
u'.*([-.*?]|\\[.+\\]).'	737
'/[*]\\s*f2py\\s.*[*]/'	356
'^GlueCEUniqueID: (.*)'	1205
"'file'\\s*:\\s*'(.*)'"	1168
'/{1,2}.*?(?=/{1,2}|$)'	436
'[a-zA-Z][a-zA-Z0-9_]*'	1302
'^([^\\)]+)\\((.*)\\)$'	630
'http://vimeo.com/\\S*'	1247
'lc_1div8_1div1(?:.*?)'	749
'\\s+\\(feat. [^)]*\\)'	913
'^(my_r32\\s*=\\s*).*$'	1384
'(\\S+)\\s*=\\s*(\\S+)'	1205
'\\${(\\d+)(?::(.*?))?}'	597
'^([a-zA-Z0-9_]*) *=.*$'	875
'gaphor-version="[^"]*"'	1115
'^msgid "(?P<data>.*)"$'	307
'NPY_NO_EXPORT\\s+(.*)$'	356
't=.*(\\d+) +to +(\\d+)'	1295
'.*film source: 29.97.*'	53
'<poster>(.*?)</poster>'	1093
'[^#]*?(<.+>).*(<.+>).*'	420
'\\[\\[([^][|:]*)\\]\\]'	1454
'NAME\\s*=\\s*"([^"]*)"'	1540
'^scores\\s+(\\S+)\\s*$'	539
'creating \\S*setup.cfg'	313
'^/changeset/([^/]+).*?'	816
'^\\s*([^\\s;]+)\\s*.*$'	55
'^(\\w+)\\s*=\\s*(\\S*)'	1184
'About\\((.*)\\).should'	46
'^---\\s+.*\\s+\\(.*\\)'	1218
'<\\/strong><br>([^<]*)'	1248
'Cert\\s+\\d+:\\s+(.*)$'	1025
'^reporter:status:(.*)$'	542
'(?i)year\\s*=\\s*(.*)$'	1470
'^GlueSiteUniqueID=(.*)'	1205
'^\\$[a-zA-Z0-9_]+ *= *'	826
'^[\\w\\<][^\\n]*(\\n+)'	485
'author: (?P<name>.*?);'	531
'(\\s)*except\\s*.*\\:$'	842
'^\\s*PS 3.3 - 2007\\s*'	1432
'<\\&frasl>\\s*<p[^>]*>'	1248
'^Error #([0-9]+): (.*)'	1007
'^[A-Za-z0-9+/]*={0,2}$'	1580
'##\\s*(\\S+)\\s+(\\S*)'	1412
'exampleLocalVar.*abcde'	557
'[name|class]="([^"]*)"'	1249
'^(@|<|>|-|!|\\.)(\\s)*'	842
'([^!]*)!?([^@]*)@?(.*)'	539
'^([^:]+):\\s+(.+)\\s*$'	49
'^\\s*msgid_plural\\s+"'	200
'<string>(.*?)</string>'	163
'([A-Z0-9]+)([a-z0-9]*)'	975
'<%[\\=\\-\\#]?(?!.*%>)'	1025
'^(\\d\\d\\d)-.*[^\\~]$'	1023
'exampleLocalVar.*xyzzy'	557
'/(?P<tenant_id>.*?)/.*'	993
'\\|\\s+([^\\|*])\\s+.*'	1247
'<rating>(.*?)</rating>'	1093
'([^a-z]+)\\s*([a-z]+)?'	729
'^##([a-zA-Z]+)\\=(.*)$'	1412
'^((\\d+)(\\.\\d+)*).*$'	1067
'^\\s*<html.*<style.*?>'	1513
'^#include "gtest/(.*)"'	1243
'^[ ]{0,3}[*+-][ ]+(.*)'	236
'^(?:admin-console)(.*)'	1004
'^\\[(.*)\\](:(\\d+))?$'	187
'[(]([^)]*)[)]\\*(\\d+)'	356
'[a-zA-Z][a-zA-Z0-9_]*$'	1302
'^([^=]+)[ ]*=[ ]*(.+)$'	502
'\\w+\\s*:\\s*\\(.*?\\)'	292
'[\\r\\n]+\\s*[\\r\\n]+'	43
'RT[\\d\\w]+_Firmware.*'	318
'^.*rate = ([0-9.]+).*$'	451
'<(.*?)>; rel="(.*?)",?'	1441
'(.*)-[0-9_]+(.*[.]lib)'	1249
'(<[^<]*snum=)([^">]+)>'	1248
'.*v=([A-Za-z0-9-_]+).*'	200
'^#archive_mode\\s*=.*$'	1520
u'\\+(\\d*) |\\+(\\d*)$'	624
'PRIMARY KEY \\((.*)\\)'	574
'^__gnu_cxx::slist<.*>$'	1403
'(\\.?)(\\s*)(.*)(\\s*)'	173
'<xlarge>(.*?)</xlarge>'	1093
'#include *["<](.*)[">]'	119
'(VIOS version: .*) TCP'	225
'^\\s*sub [A-Za-z0-9_]+'	1426
'Next nothing is (\\d*)'	578
'^.*(?P<number>[0-9]+)$'	392
'^(.*does not exist.*)$'	542
'(.*?)\\s+([a-z]+)\\s*$'	796
'action="[\\w\\.\\-/]*"'	384
'(?s)<!--(.*?)-->[\\n]?'	1248
'.*\\bin\\b(?!\\b.+ing)'	1248
'^complement\\((.*)\\)$'	1302
'.*chromeframe/(\\d*).*'	557
'^\\s*include\\s+(\\w+)'	11
'diff --git .* b/(.*)\n'	557
'^\\s+- Standard -\\s*$'	1432
'.*://(?P<namespace>.+)'	1247
'library\\("?(.*?)"?\\)'	1555
'\\(*[Vv]ol.*[1-9]+\\)*'	110
'^ *\\[git-p4: (.*)\\]$'	1278
'\\-\\-test\\-name=(.*)'	1007
'self\\.go\\("(.*?)"\\)'	53
'\\t(.*)\\((.*):(.*)\\)'	1576
'(.*): line (\\d+),(.*)'	1007
'.*?Pentium.*?(IV|4)\\b'	356
'DataText4>([^<]*)</td>'	126
'(?=qtonpi)([^>]*)(?=-)'	1178
'unicode\\s*[(][^)]*[)]'	356
'<TITLE>([^<]*)</TITLE>'	126
'^[^,]+,([0-9A-F]+),.*$'	1432
'complex\\s*[(][^)]*[)]'	356
'DTSTART;TZID=(.*):(.*)'	1116
'\\s*("[^"]*"|.*?)\\s*,'	1118
'<(?:/|)(\\w+).*(?:/|)>'	1076
'.*\\.(\\d{10})\\.log\n'	1563
'<studio>(.*?)</studio>'	1093
'[_A-Za-z][_A-Za-z1-9]*'	224
'(?m)(?:^[ \\t]*\\n){1,}'	1258
'==== Subject Name: (.*)'	1135
'^bytes=(\\d{1,})-(\\d*)'	737
'\\(\\s*([*]|[:])\\s*\\)'	356
'^[A-Za-z][A-Za-z_0-9]*$'	1256
'[a-zA-Z_][a-zA-Z0-9_-]*'	1243
'.*<\\s*a\\s*href\\s*=.*'	55
'^\\w+:/*(\\w+:|www\\.)?'	220
'lda.b tcc__([rf][0-9]*)'	157
'(\\d[.]\\d)([.].*\\d)?$'	313
'processor \\((.*)\\)\\n'	225
'^std::basic_string<.*>$'	1403
'\\s*[^#]{3,}:\\s*(#.*)?'	407
'^std::__debug::set<.*>$'	1403
'^#readline readline.c.*'	1384
'([a-zA-Z_]\\w*)\\s*(.*)'	975
'^mark2\\.format\\.(.*)$'	1463
'(.*?)\\$(\\$?[\\w\\.]+)'	747
'[a-zA-Z][a-zA-Z0-9_-]*$'	1580
'\\>Yarn\\<.*?\\<\\/a\\>'	1059
'(?is)<tr [^>]*>.*?</tr>'	55
'([0-9]{3})\\.(.*)\\.sh$'	153
'href\\=\\"([^\\"]*?)\\"'	33
'(?ims)<dd[^>]*>.*?</dd>'	539
'^\\s*\t*#|^\\s*$|^\\s*}'	317
'\\Anamelist:(\\w+).*\\Z'	1571
'.*Build successful\\..*'	341
'(?P<rate>\\d*(\\.\\d*))'	55
'(?m)^(\\/\\*.*?\\*\\/)$'	796
'\\s*(\\w+)\\s*=?(.*)\\n'	560
'^nic\\.\\d+.*\\.(\\d+)$'	1644
'(\\s)*class(\\s)+|:|\\('	842
'^msgstr "(?P<data>.*)"$'	307
'[^_]+_toy-([\\w-]*)-x86'	1068
'^\\s*=[A-Za-z_]+\\w*.*$'	602
'[ \\t]*// @(\\w+): (.*)'	1534
'\\$[0-9]+\\,?\\.?[0-9]*'	707
'var-bind=[\'"](.*)["\']'	596
"^\\$host\\s*=\\s*'\\w+'"	721
'https?://([^/]*?)(/.*)?'	867
'<h\\d\\>(.*)\\<\\/h\\d>'	960
"^\\$pass\\s*=\\s*'\\w+'"	721
'<script.*?>.*?</script>'	425
'\\s*</TestFunction>\\s*'	896
'^[ MADRCU?!]{1,2}\\s+.*'	1025
u'(</SCR.*?)...(.*?IPT>)'	1557
'ref:\\s*refs/heads/(.+)'	1094
'^(.*)(#[0-9a-fA-F]{6})$'	407
'#\\s*pragma\\s+FLIP\\s*'	1210
'(?ims)<tr[^>]*>.*?</tr>'	539
'.*command\\snot\\sfound'	415
'\\s*"\\s*<p=\\\'"\\\'/>'	1248
'^GlueSiteUniqueID: (.*)'	1205
'^Release\\s*:\\s*(\\S+)'	1491
'u(".*?")|u(\\\'.*?\\\')'	1087
'EXTRA\\s*=\\s*"([^"]*)"'	1540
'^#\\s+([0-9]+)\\s+(.*)$'	1533
'\\s*#\\s*(elif|else)\\b'	1007
'^.*BigEndianExplicit.*$'	1432
'^[ ]{0,3}:[ ]{1,3}(.*)$'	1395
'[A-Za-z][-A-Za-z0-9._]*'	1076
'^#include "(Config/.*)"'	1243
'^TestScanFiles.*\\.txt$'	908
'(screendump\\S*_[0-9]+)'	1501
'.*?Athlon\\(tm\\) 64\\b'	356
'(.+):([0-9]+)[:]{0,1}.*'	498
'(?:["\'])(.*)(?:["\'])$'	1258
'^tick_0*([0-9]+)\\.sql$'	1520
'^[A-Za-z][A-Za-z0-9_]*$'	1495
'^.*<\\s*html(\\s*|>).*$'	336
'.*?Athlon\\(tm\\) MP\\b'	356
'^([A-Za-z0-9_-]+)=(.*)$'	1495
'^[0-9x]+ [0-9xA-F]+ .*$'	1432
'\\/\\/\\[(.*)\\]:(\\d*)'	705
'^[^ :]+:([^ ]+) - .*\\n'	506
'^std::__debug::map<.*>$'	1403
'<td v[^>]+>([^<]*)</td>'	55
'.*Pop: (.+) Locus: (.+)'	1302
'(.*?)/(.*?)/(.*?)/(.*)$'	560
'\\=[\\s]+([\\d\\.]*) KB'	560
'Google Web Toolkit (.*)'	560
'^Version\\s*:\\s*(\\S+)'	1491
'\\s*([^\\s\\(\\)]*)\\s*'	1248
'(/.*?):(\\d+):\\s*(.*)$'	31
'^((?!\\.).)*\\.(py|sh)$'	1384
'<sentence>.*</sentence>'	1248
'^\\s+(\\S+\\-\\d+)\\s*$'	1246
'contentTitle = "(.*?)";'	1181
'\\#access_token=([^&]*)'	1160
'^\\s*(- Standard -)\\s*'	1432
'^[a-zA-Z]+[\\w:.0-9-]*$'	602
'\\s*libssl.so.0.9.8\\s*'	1225
'[ \t]*File.*line (\\d+)'	53
'[a-zA-Z_][-a-zA-Z0-9_]*'	107
'blocks_coords[0-9]*.txt'	767
'^\\t*(\\S[^\\t]*\\t){3}'	560
'.*BillStatus.*DocTypeID'	182
'KEY `(\\w+)` \\((.*)\\)'	574
'^\\s*\\s*\\(([^ )]*)\\)'	557
'GREENLET_VERSION "(.*)"'	1200
'lighttpd-([0-9\\.]+) .*'	826
'Ignore tracebacks: (.*)'	827
"^\\$user\\s*=\\s*'\\w+'"	721
'[_a-zA-Z][_a-zA-Z\\d]*$'	44
'\\A<[^>]*?href=["\']\\Z'	245
'(?i)author\\s*=\\s*(.*)$'	1470
'(\\/display[^>]*)([^<]*)'	110
'\\s+def\\s*(\\w+)\\s*\\('	407
'[a-zA-Z][a-zA-Z0-9_]*}.*'	101
'Fatal\\\\? error\\\\?:.*'	218
'^(join|order)\\((.*)\\)$'	1302
'/posters/archive/main/.*'	506
'(?i)editor\\s*=\\s*(.*)$'	1470
'[a-zA-Z_][a-zA-Z0-9_.-]*'	1076
'^GlueCEStateStatus: (.*)'	1205
'\\[\\s*expr ([^\\]]+)\\]'	557
'^(?:\\[([^]]+)\\])?(.*)$'	819
'\\s*(([^,]|(,\\s*\\d))+)'	1500
'^Version:[ ]*([0-9\\.]*)'	122
'<hostname name="([^"]*)"'	727
'<([^>]*)/([^>]*)@(\\d+)>'	1248
'^[a-zA-Z_][a-zA-Z_0-9]*$'	53
'^(Index|diff).*\\s+(.+)$'	498
'(?s)<script>.*?</script>'	126
'<.+>(?P<content>.*)</.+>'	1502
'^(\\w+)\\s*=\\s*(\\S.*)$'	570
'<tt>\\s*(.*?)\\s*<\\/tt>'	1244
'<HEAD[\\W\\w\n]*?</HEAD>'	185
'<runtime>(.*?)</runtime>'	1093
'(\n\\s*)(built on.*)(\n)'	415
'^([a-z]?[a-z-]*[a-z]).*$'	1025
'TEST-START \\| ([^\\s]*)'	1007
'([a-zA-Z_][a-zA-Z0-9_]*)'	787
'^[ ]{0,3}\\d+\\.[ ]+(.*)'	236
'^std::unordered_set<.*>$'	1403
"replace\\(':',\\s*','\\)"	1384
'Copying (.*?) to (.*?)\n'	560
'L"\\\\0(\\d)" L"([^"]*)"'	1209
'<\\s*(\\w[\\w\\d]*)\\s*>'	356
'(\\d+)\\.(\\d+).(\\d+).*'	873
'sta.b (tcc__[fr][0-9]*)$'	157
'\\(CVS[NT]*\\) ([\\d.]+)'	122
'\\s*(not\\s+set)?\\s*\\Z'	80
'python\\s*module\\s*\\S*'	531
'&#[x]*(?P<name>[0-9]+);*'	1431
'<preview>(.*?)</preview>'	1093
'((/\\*.*?\\*/)|(//.*?$))'	1522
' *\\bservicefp="([^"]*)"'	727
'^\\s*Page\\s+[0-9]+\\s*$'	1432
'^Firmware.Version:.(.*)$'	225
'@oplist.push\\("(.*)"\\)'	1295
'\n\\s*Stream.*Video:.*\n'	415
'("[^"]*?")|(\'[^\']*?\')'	1247
'.*Ultra-Enterprise-10000'	356
'td bgcolor=white>([^<]*)'	1248
'.*\\stest_([:\\w]+)\\s.*'	1025
'(^[\\w\\s]{1,20}?):(.*$)'	31
'^spec\\/(.*?)_spec\\.rb$'	1025
'(.*)-[0-9_]+(.*[.]dylib)'	1249
'lyricbox.*?div>(.*?)<!--'	1431
'(.*?) Thump thump - (.*)'	1007
'.*View Special Session.*'	182
'\\s*?- \\S+? \\[(.*)\\]$'	1007
'(\\D|^)\\d{1,2}\\W*\\d00'	1122
'http[s]*:.*flickr.com/.*'	1285
'\\${folder:(?P<file>.*)}'	626
'(run\\s+)([^\\s]*)(\\s*)'	1547
'(?<!\\\\)\\$[a-zA-Z]\\w*'	1247
'(<title>Lyrics: )([^<]*)'	110
'^(?!.*(Win64|x64))Win.*$'	872
'(".*?")|(\'.*?\')|(\\s+)'	1258
'//\\s+FaketimeFlags:(.*)'	534
'http(s)?://youtu.be/(.*)'	539
'^\\s+[A-Z\\s]+MACRO\\s*$'	1432
'GNU Fortran.*?([0-9-.]+)'	356
'^@@.*\\+(\\d+)(,(\\d+))?'	1244
'/\\*[^\\n]*-- translated'	356
'([A-Z][a-z]+[A-Z][a-z]*)'	1534
'^#include "(Support/.*)"'	1243
'^/etc/logrotate\\.d/(.*)'	1226
'class=\\"evpill-(.*?)\\"'	225
'\\$((Id|File|Log).*?)\\$'	43
'^std::__debug::list<.*>$'	1403
'(Artist:.*html">)([^<]*)'	110
'^fish_color_(\\S+) ?(.*)'	1618
'(?<=/)[a-z,0-9,A-Z]*.nii'	530
'^BUG[ \\t]*=[ \\t]*(.+)$'	534
'^\\s*easyblock\\s*=(.*)$'	1384
'^std::tr1::weak_ptr<.*>$'	1403
'\n\\s*Stream.*Audio:.*\n'	415
'^[a-zA-Z_]+[\\w:.0-9-]*$'	602
'<!-- BUG([^ ]*) (.*) -->'	1244
'\\S+@\\S+\\.\\S*[^\\s)?]'	18
'(?:\\n|^)(File (.*?))\\n'	679
'^queryCid(\\(.+\\))\\s*$'	1569
'(.*/)?report-(.*)\\.html'	1244
'^host\\s+(.*)\\s+{(.*)}$'	1644
'^std::unordered_map<.*>$'	1403
'#\\s*(\\w*)\\s*=([^#]*)#'	356
'"[^\\n]*Q_OBJECT[^\\n]*"'	1587
'([A-Za-z])([A-Za-z0-9])*'	1051
'.*[0-9]+_srcCol([0-9]+).*'	1295
'\\[\\s*([^\\]]+?)?\\s*\\]'	1087
'<title>(.*?)\\s+-\\s+XVID'	1181
'.*\\bin\\b(?!\\b.+ing\\b)'	1488
'^NIC.1.MAC.Address:.(.*)$'	225
'Query: (\\d+)\\s*(.+) \\d'	1302
'^Spare.Part.Number:.(.*)$'	225
'^GlueCEInfoHostName: (.*)'	1205
'^.*?(\\d+(\\.\\d+)+)\\r?$'	1426
'.*[<]KILLLINE[>].*(\\n|$)'	356
'<large[^>]*>(.*?)</large>'	1093
'<td class="LawText1">(.*)'	126
'^#~ msgid "(?P<data>.*)"$'	307
'mk/images/members/.*?.jpg'	126
'^\\s*select (.*?) from .*'	1488
'^std::__debug::queue<.*>$'	1403
'^(\\d+\\.x-)?(\\d+)\\..*$'	1217
u'==\\s*Delta[kg]ere\\s*=='	1100
'(?is)<td [^>]*>(.*?)</td>'	55
'oauth_token" value="(.*)"'	823
'\\s*(\\d+)\\s*(\\d+)\\s*$'	560
'^.*[/\\\\]koans[/\\\\].*$'	1633
'.*/analytics/v3/data/ga.*'	1558
'__version__ = (\\(.*?\\))'	929
'\\A(\\w+)://([^ *?[]*)\\Z'	1462
'PathChannelLink.*?>(\\d+)'	126
'Content-Length: ?([0-9]*)'	1375
'(.*?)</manifest:manifest>'	902
'^std::priority_queue<.*>$'	1403
'padding:10px[^>]+>([^<]*)'	1248
'(.*)show/(?P<id>[0-9]*)/?'	539
'^std::__debug::deque<.*>$'	1403
'[a-zA-Z_][\\w\\.\\-_]*\\Z'	1076
'(\\s*\\t*location)\\=(.*)'	560
'Property changes on: (.*)'	1426
'^std::__debug::stack<.*>$'	1403
'=(.*?)SlAsHcOdEsTrInG(.*)'	32
'^GNU gdb [^\\d]*(\\d+)\\.'	1087
'^NIC.2.MAC.Address:.(.*)$'	225
'(build_git_sha = ")(\\w)*'	372
'\\bgl_Position\\b([^;]*);'	685
'^\\s*\\{\\s*([A-Z_0-9]+),'	1023
'^(?:\\\\(\\S+)\\s*)?(.*)$'	1248
'\\s*(\\S+)\\s+/(.*)/\\s*$'	1248
'((--reject-with) *(\\S+))'	826
'\\/MapServer\\/*(f=json)*'	740
u'(?:\\s*).+?\\.(?:\\s+|$)'	971
'<published.*?</published>'	220
'(?P<name>.*)_dmesg\\.txt$'	1599
'<([\\w ]+(,\\s*[\\w]+)+)>'	356
'(.*?) and (.*?) as (\\w+)'	871
'(\\s)*class(\\s)+(\\w)+.*'	842
'charset\\s*=\\s*"([^"]+)"'	422
'([\\w\\.-]+)\\s+([^(]+).*'	1501
'queryUrl(\\(1,.*\\))\\s*$'	1569
'^C (0x[0-9a-fA-F]+) (.*)$'	534
'\\[\\[(?P<text>.*?)\\]\\]'	117
'.+::\\(.+\\) \\[None\\].*'	506
'<p>\\.notes:\\s?(.*?)</p>'	310
'\\s+\\<br(?P<a>.*?)\\/\\>'	1247
'^[a-zA-Z][a-zA-Z0-9+.-]*:'	506
'([a-zA-Z_][a-zA-Z0-9_]*)$'	550
'^[A-Za-z][A-Za-z0-9+_-]*$'	1268
'^std::_List_iterator<.*>$'	1403
'^(.*, |)([a-zA-Z0-9_*]+)='	1087
'\\bplural\\s*=\\s*([^;]+)'	1258
'[ \\t]*(#[^\\n]*)?\\r?\\n'	908
'(module|def|class) (\\w*)'	1130
'^\\s+[A-Z\\s]+MODULE\\s*$'	1432
'150 .* \\((\\d+) bytes\\)'	1580
'([\\w-]+)\\s*([\\d]+):.*$'	1263
'.*?_([a-z]*)_pid\\d*.log$'	1007
'Merge: +([0-9a-f]+ *){2,}'	1540
'(\\s*\\t*num_files)\\=(.*)'	560
'sta.b tcc__([rf][0-9]*h?)$'	157
'^([^-]+)-([^-/]+)(/(.*))?$'	850
'.*Why is My App Over Quota'	225
'.*/video/([a-zA-Z0-9]+)_.*'	200
'^MemTotal:\\s*(\\d*)\\s*kB'	534
'.*/video/([a-zA-Z0-9]+)/.*'	200
"(\\'\\'(?P<txt>.*?)\\'\\')"	190
'(setenv WIEN_MPIRUN\\s*).*'	1384
"^(FFLAGS\\s*=').*-m64 (.*)"	1384
'^std::__debug::bitset<.*>$'	1403
'&([a-zA-Z][-.a-zA-Z0-9]*);'	330
'(triangulo|trapecio): (.*)'	982
'(\\w+)\\.(\\d+)\\:\\s*(.*)'	1248
'^\\$[a-zA-Z][a-zA-Z0-9_-]*'	891
'.*webos/([0-9+\\.]*)\\w*.*'	557
'Sat *Feb *2 *03:04:.. 1980'	560
'(\\S+[.]savespace[(].*[)])'	356
'.*Audio: .+, (.+) (?:Hz).*'	53
'^#~ msgstr "(?P<data>.*)"$'	307
'(?P<name>.*)_ftrace\\.txt$'	1599
'\\[([\\w\\-\\:]+)=(.*?)\\]'	1247
'(.*)-[0-9_]+(.*[.]dll[.]a)'	1249
'^[0-9-\\,]*(\\.[0-9Ee]*)?$'	1313
'^\\s*\\S*\\s*IN\\s*A\\s*.*'	1644
'\\[  PASSED  \\] ?(.*)\r\n'	1007
'href="?/imgres\\?(.*?)[ >]'	183
'^(?:M|A)(\\s+)(?P<name>.*)'	1325
'[A-Z]{([^}<]*)(<[^>}]*>)?}'	1248
'^.*LittleEndianImplicit.*$'	1432
'^(my_readonly\\s*=\\s*).*$'	1384
'\\s\\s\\s\\s\\s\\s\\s.*\\Z'	1302
'(\\d+)\\s+\\w+\\s+(\\w+).*'	1205
'\\?[a-zA-Z_][a-zA-Z0-9_]*$'	1248
'.*\\n\\s+\\w+ \\((\\w+)\\s'	225
'(\\s*configuration:)(.*)\n'	415
'Mop/s total\\s*=\\s*(.*)\n'	560
'(_)(?=\\S)([^\\r]*?\\S)\\1'	888
'.*bitrate: (.+) (?:kb/s).*'	53
'(%(\\([^\\s\\)]*\\))?[sd])'	162
'\\$\\$(?P<latex>.*?)\\$\\$'	1247
'\\s+\\w+\\s*=\\s*models\\.'	21
'\\s*[:_\t]+\\s*|\\s{2,}|\n'	1190
'^std::__debug::vector<.*>$'	1403
'^([^=]*)\\{(\\w*)\\}=(.*)$'	560
'<location>(.*?)</location>'	1093
'^##AGENT-WARNING##\\ ?(.*)'	1007
'^(\\s)*class(\\s)+(\\w)+.*'	842
'([a-zA-Z-]+)\\s*\\((.*)\\)'	1087
'changeset: \\[.*\\] - (.*)'	1304
'^.*LittleEndianExplicit.*$'	1432
'(#[a-zA-Z_][a-zA-Z0-9_]*)$'	550
'<EMAIL>[^<]*(<\\/EMAIL>|$)'	1001
'^std::tr1::shared_ptr<.*>$'	1403
'(?mx) (?:^\\s*$)|(?:--.*$)'	619
'^s3n:/|hdfs://(.*?)(/.*?)$'	440
'^std::_Deque_iterator<.*>$'	1403
'\\w+[\\w\\s]*?class (\\w*)'	407
'^.* - tycho.usno.navy.mil$'	539
'\\[ RUN      \\] ?(.*)\r\n'	1007
'[+-]?\\d*\\.\\d*|[+-]?\\d+'	374
'<director>(.*?)</director>'	1093
'^(?:app|lib)\\/(.*?)\\.rb$'	1025
'^\\s*\\*(?P<fromStar>\\s*)'	1322
'Target: ([a-zA-Z0-9_\\-]*)'	356
'^(\\d+):(\\d+):(\\d+):(.*)'	692
u'\\s*\\[(?P<section>.*)\\]'	737
'\\[       OK \\] ?(.*)\r\n'	1007
'abort: .*: no match found!'	566
'.*\\([+]{0,1}\\d{3,15}\\)$'	1607
u'https?://[^/]*imdb\\.com/'	1557
u'\\s+\\[(?P<section>.*)\\]'	737
'^nic\\.\\d+\\.(.*)\\.\\d+$'	1644
'^let g:(\\w+)\\s*=\\s*(.*)'	1094
'^function\\s*(\\w+)\\s*\\('	407
'^([^-]*)-(.*)\\.tar\\.bz2$'	560
'python\\s*module\\s*(\\S*)'	531
'\\[  FAILED  \\] ?(.*)\r\n'	1007
'^[a-z][a-z](,[a-z][a-z])*$'	200
'.*hpwOS/([0-9+\\.]*)\\w*.*'	557
'\\s*<\\s*br\\s*/?\\s*>\\s*'	1181
'^jsonrpc:\\/\\/(.*):(\\d*)$'	101
'.*\\[([0-9]+):[0-9]*:.*\\]$'	200
'^(([^}]*?[^;]?)\\s*)(?=\\})'	1025
'{{\\s*([a-zA-Z0-9_]+)\\s*}}'	872
u'(?i)\\w{0,4}://[\\w\\d./]*'	1139
'^(.*[^a-z0-9\\n])?insmod .*'	1465
'# -\\*- (?P<codec>.*) -\\*-'	46
'http://\\S*?flickr.com/\\S*'	1247
u'[^ ]*/debugger(/[^ ]*.php)'	218
'^Table B.1.? .* Private .*$'	1432
'  <node .*? cat="(\\w+)".*>'	1248
'world\\[(\\d+)\\]\\[(.*)\\]'	1463
'^(\\s*end_date\\s*=\\s*).*$'	1384
'<p(?: [^>]*){0,1}>(.*?)</p>'	1248
'http://*.revision3.com/\\S+'	1247
'^([^-]+-[^-]+)-(.*)\\.fail$'	1208
'\\s*#\\s*define (\\S+) (.*)'	413
'\\/\\*Universe: (.+)*\\*\\/'	55
' *[0-9]+ *=> *(?P<value>.+)'	826
'[A-Za-z0-9_.-]*[.][r][p][m]'	560
'\\s*([A-Za-z][A-Za-z0-9_]*)'	276
'{[a-zA-Z0-9_\\-\\.\\/\\:]*}'	567
'#\\s*include\\s*<libintl.h>'	533
'\\s*(CREATE|ALTER|DROP)\\s+'	284
'<style [\\W\\w\n]*?</style>'	185
'.*\\ttimestamp=(\\d+)\\t.*$'	560
'^HTTP/\\d\\.\\d\\s+\\d+\\s*'	1025
'<Compile Include="([^"]*)"*'	504
'[a-zA-Z_:][\\w\\.\\-_:]*\\Z'	1076
'\\<(\\w+?)\\>\\s*\\</\\1\\>'	472
'^emulator-(\\d+)(\\s*)(.*)$'	1007
'([^\\-\\.]*)-([\\d+.\\-]+)$'	1248
'(?m)(?s)</locale>.*</terms>'	796
'<s(?: [^>]*){0,1}>(.*?)</s>'	1248
'(?:\\n|^)(# file: (.*?))\\n'	679
u'download/\\d+/.*\\.torrent'	1557
'^#(\\s*-L\\$\\(SSL\\)/lib )'	1384
'\\[\\[file:([^|\\]]*)\\]\\]'	138
'^(.*) (\\d+) (\\d+) (\\d+)$'	920
'\\s*([^\\s\\=]+)[\\s=]+(.*)'	1412
'\\s*<TestFunction name=\\s*'	896
'^\\s*[\\d\\.]+\\w{0,3}\\s*$'	200
'File "([^"]*)", line (\\d+)'	602
'\\w+\\.[\\w\\.\\-/]*\\.\\w+'	384
'(^|[\\W_])trailer\\d*[\\W_]'	1469
'^\\s*Package\\s*:\\s*(\\S+)'	1491
'lib(64)?/lib[^/]*\\.so\\..*'	1226
'^[\\w|\\s.]+\\(([^)]*)\\).*'	1580
'\\=[\\s]+([\\d\\.]*) KB/sec'	560
'^([^:]+):.([0-9]+).Watts.*$'	225
'\\x1b\\[33m(.*?)\\x1b\\[0?m'	407
'BUNDLE_ID\\s*=\\s*"([^"]*)"'	1540
'^[a-zA-Z0-9][-_\\.0-9a-z]*$'	826
'Disk\\s+(/dev/sd.*\\s+GiB),'	1501
'^\\s*Version\\s*:\\s*(\\S+)'	1491
'Job not submitted.*<(\\w+)>'	1205
'(\\S+)\\s+(\\S+)(,| )( .*)?'	1247
'[-+]\\s*\\(.*?\\)\\s*(\\w+)'	292
'frame=.*time=([0-9\\:\\.]+)'	415
'^END .*\\t----\\t----\\t.*$'	560
'Mop/s/thread\\s*=\\s*(.*)\n'	560
'^(\\d+\\.\\d+(\\.\\d+)*).*$'	873
'([\\\\/])([.,]?)([.,]?)(.*)'	1248
'^\\s*\\[\\s*exe\\s*\\]\\s*$'	1050
'([a-zA-Z0-9/]*Command.java)'	1570
'<\\s*[a-z]+\\s*[\\w"=\\.]*>'	911
'\\s*importScripts\\((.*)\\)'	1007
'(.*[*?[\\\\]|ignorecase\\:)'	679
'^([\\w\\d\\s\\_\\-]+):(.*)$'	1420
'((?:"[^"]+"|[^,"]+)+)\\s*,?'	1249
'(.*)\\*\\*STRONG_LINE\\*\\*'	757
'^<\\?xml.* encoding="(.*?)"'	902
'SCRAM_PROJECTVERSION=(\\S*)'	1205
'^[A-Za-z]+(?:/[A-Za-z_]+)*$'	539
'<!-- REPORTPROBLEM (.*?)-->'	1244
'__title__.*?["\'](.*?)["\']'	431
'^\\S*(/dev/\\S+).*\\s/\\s*$'	560
'^(?P<call>.*?): (?P<msg>.*)'	1599
'[A-Za-z0-9_.-]*[.][d][e][b]'	560
'Set TRANSCOMM\\s*=\\s*(.*)$'	1384
'^(?P<download_dir>.*/)[^/]*$'	566
'.*UTS_RELEASE\\s+"([^"]+)".*'	560
'(?m).*([0-9a-fA-F]{32,32}).*'	859
'\\[\\[(ftp://[^|\\]]*)\\]\\]'	138
'(.*)-[0-9_]+(.*[.]so)[.0-9]*'	1249
'\\s*([^;# \\t\\n\\r\\f\\v]+)'	276
'^\\s*\\.*\\w+(\\.\\w+)*\\s*$'	1567
'__version__\\s*=\\s*(.+?\\n)'	673
'Line ([0-9]*) of "([^"]*)".*'	1007
';?\\s*end(\\.|,|&|\\||\\s|$)'	407
'Hadoop ([0-9]+)\\.([0-9]+).*'	990
'^\\s*//.*|^\\s*/\\*[^*]*\\*/'	1621
'(?P<pid>\\d+)\\s+killed by.*'	1170
'[ \\f\\t]*(?:\\r\\n|\\r|\\n)'	53
'([0-9]+\\.[0-9]+\\.[0-9]+).*'	560
'\\$[a-zA-Z_][:a-zA-Z0-9_.-]*'	1076
'^\\s*\\S*\\s*IN\\s*PTR\\s*.*'	1644
'.*Red Hat Enterprise Linux.*'	562
'^[ \t]*(?i)script(?i)[ \t]*$'	1591
'^(?:\\d-)?(\\d{2})\\.? (.*)$'	748
'^test \xe2\x80\x94 noun: .*$'	539
'^.*(\\d+){(\\+|-?)(\\d+)}.*$'	1644
'{(?P<macro>[a-z][a-z0-9-]*)}'	200
'build/bdist\\.[^/]+/egg/(.*)'	1258
'@requires?:?\\s+(\\S*)\\s*\n'	928
'^std::__debug::multiset<.*>$'	1403
'(\\s*)#\\!([\\w+-][\\w+-/]*)'	1258
'[a-zA-Z_][a-zA-Z0-9_.-]*:\\*'	1076
'.*clock (\\d+)\\s(\\w+).*\\n'	225
'(<p>\\.fx:\\s?(.*?)</p>\\n?)'	310
'\\[ CRASHED      \\](.*)\r\n'	1007
'^fill_bt_list\\((.+)\\)\\s*$'	1569
'(\\w+)\\s*District\\s*(\\d+)'	182
'.*UTS_VERSION\\s+"([^"]+)".*'	560
u'(?x) \\( [^()]* \\b few \\b'	1557
'\\${\\W*next.body\\(\\)\\W*}'	1232
'\\<(.*)\\>\\; rel\\=shorturl'	104
'coding[:=]\\s*"*([-\\w.]+)"*'	498
u'^import (.*)\\.\\d+[^\\s]*$'	1158
'Duration:\\s*([0-9\\:\\.]+),'	415
'([a-z]*)[\\s\t]+([0-9:, -]+)'	317
'^(.*:.*/jobmanager-.*?)-(.*)'	1205
'[#\n]*#\\s+Copyright\\s+\\d*'	1384
'Difference maps.*:\\s*(\\S*)'	1571
'^\\s*msgstr(\\[\\d\\])?\\s+"'	200
'<.* at remote 0x-?[0-9a-f]+>'	1580
'^std::_Rb_tree_iterator<.*>$'	1403
'^[a-z]+\\*?\\d[a-z]*[>\\.]?$'	1248
'^\\s*\\[Branch\\s+([^]]+)\\]'	122
'^(<stream:stream [^>]*>)\\s*'	1301
'.*?/(app|config|db)/.*?\\.rb'	1025
'<span class="c_1">.*?</span>'	1569
'.*Audio: .+, (.+) (?:kb/s).*'	53
'\\ssubroutine\\s(.+)\\(.*\\)'	356
'(?ims).*DOCTYPE.*\\[.*\\]\\>'	743
'^location{primary}\\[(.*)\\]'	1571
'U ().*\\/([\\w\\.]+):(\\d+)$'	1007
'.*[ :\\+\\-,\\.\\*\\?\\[\\]]'	975
'<xi:include href="(.*?)".*/>'	1470
'(\\s*\\t*num_files)\\=(\\d+)'	560
'\\s*target remote :([0-9]+)$'	1250
'TX\\s+bytes:?\\s*(?P<c>\\d+)'	567
'RX\\s+bytes:?\\s*(?P<c>\\d+)'	567
'^nic\\.(\\d+)\\..*\\.(\\d+)$'	1644
'^\\+\\+\\+\\s+.*\\s+\\(.*\\)'	1218
'^(FCOPTIM.*)(\\s-O3)(\\s.*)$'	1384
'(\\d+)-\\s*(\\d+)-\\s*(\\d+)'	1168
'(.*)artist:(?P<artist>[^,]+)'	539
'\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'	356
'\\\\g<([a-zA-Z_][a-zA-Z_]*)>'	53
'Parse error.* on line (\\d+)'	1326
'Total threads\\s*=\\s*(.*)\n'	560
'^TEST-(PASS|EXPECTED-FAIL).*'	695
'^1.2.840.10008.[0-9.]+ (.*)$'	1432
"package: .*name=\\'(\\S*)\\'"	1007
'Total times\\s*cpu:.*wall:.*'	1384
'^(.*?)(\\.|)(\\w?[\\w\\d]*)$'	1594
'^std::__debug::multimap<.*>$'	1403
'Transcript written on (.*).$'	31
'^[^\\s/].*\\s(\\w+)\\([^;]*$'	1023
'^.*(default:\\s*|case.*:.*)$'	407
'\\[".*?\\]+?.*?\\[/".*?\\]+?'	472
'^([ >]*)(import|from) +nifti'	975
'^std::tr1::unordered_set<.*>$'	1403
'\\s*#\\s*include\\s+<([^>]*)>'	1007
'(?i)<A NAME=results>(.*?)</A>'	539
'<script [\\W\\w\n]*?</script>'	185
'^LDFLAGS\\s*=(?P<ldflags>.*$)'	1384
'<xnat:Subject\\sID="(.*?)"\\s'	436
'lyricbox.*?</script>(.*?)<!--'	1431
'\\<\\s*([a-zA-Z][a-zA-Z0-9]*)'	498
'^(.+?): .*?(\\(attached\\))?$'	1094
'\\s*from\\s*.*?import\\s+(.*)'	1147
'^std::unordered_multimap<.*>$'	1403
'^-?[\\.,]?\\d[\\d,\\.-]*\\.?$'	1248
'((?<=>)\\s+)*\\n*(\\s+(?=<))*'	993
'#slipfactor\\s+(\\d+\\.?\\d*)'	173
'(<p class="find-aka">.*?</p>)'	1469
'productType\\s*=\\s*"([^"]*)"'	820
'(Senator|Representative) (.*)'	182
u'\\.\\.\\s+doctest-skip\\s*::'	689
'Zip [0-9]\\.*[0-9]*\\.*[0-9]*'	108
'(?<=\\(|\\))[a-z|A-Z]*(?=\\()'	152
'"([^"]+)"\\s*(0x[0-9a-fA-F]+)'	633
'((?:[^ \\t\\.#]|\\.\\.)+)(.*)'	338
'/libedit[\\.\\d+]*\\.dylib\\s'	422
'\\s*([REWCF]):\\s*([0-9]+):.*'	498
'^([^<,]+)\\s*(?:<([^>,]+)>)?$'	1553
'(?s)<li id="dMT-00">(.*)</li>'	55
'(?s)id="TEXT_PH">(.*?)</span>'	126
'[a-zA-Z][^\t\n\r\x0c />\x00]*'	1580
'^[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'\\A(.*\\.)(\\d+)(\\.html)?\\Z'	1571
'(/rsem && \\$\\(MAKE\\))\\s*$'	1384
'(^.*[^a-z0-9\\n])?setprop +.*'	1465
'^GlueCEStateWaitingJobs: (.*)'	1205
'[\\w\\-:]+(\\.[\\w\\-]+)*\\.?'	1247
'got played (?P<last>\\w*?)\\s'	1588
'(\\W)len\\( *(\\S+) *\\)(\\W)'	1571
'^\\s*([^=\\s]+)=?\\s*(\\S.*)$'	496
'%\\(line *([\\+-]) *(\\d+)\\)'	1243
'^std::unordered_multiset<.*>$'	1403
'([1-9][0-9]*)([DdHhMm]|[sS]?)'	1074
'Reading specs from (.*)/specs'	356
'^msgid_plural "(?P<data>.*)"$'	307
'.*(?P<urn>urn\\:nbn\\:.*?)\\<'	1338
'/(export|browser|file)(/.*)?$'	1258
'^\\s*\\S*\\s*IN\\s*AAAA\\s*.*'	1644
'<div class="pginfo">.*?</div>'	1569
'^\\-?[0-9]*\\.?[0-9]*\\s?\\%$'	729
'plink\\.(.*)\\.assoc\\.linear'	1297
'([0-9])\\.([0-9])\\.([0-9]).*'	1570
'.*pion_session_id="([^"]+)".*'	1072
'(?m)(?s)<terms.*<locale[^>]+>'	796
'^std::tr1::unordered_map<.*>$'	1403
'^GlueSiteDescription: (OSG.*)'	1205
'.*[\\*,\\[,\\],\\{,\\},\\?].*'	290
'^AUTOTEST_TEST_COMPLETE:(.*)$'	560
'(.*?)(\\s*<br\\s*/?>\\s*)*\\Z'	291
'([^\\s]+)\\s*<->\\s*([^\\s]+)'	735
'(?:\\d{2}:\\d{2}:\\d{2}) (.*)'	1463
'\x1b\\[[34][0-9]m*.*?\x1b\\[m'	498
'%([A-Z]), +[$](0|[1-9][0-9]*)'	1260
'(<\\s*[a-z]+\\s*[\\w"=\\.]+>)'	911
'^(my_installroot\\s*=\\s*).*$'	1384
'^(\\s*start_date\\s*=\\s*).*$'	1384
'\\\\_\\w*\\.(eps|png|jpg|gif)'	1247
'^\\s*(\\w+)\\s*=\\s*(.*)\\s*$'	990
'GlueCEInfoContactString: (.*)'	1205
'\\s*#\\s*(if|ifdef|ifndef)\\b'	1007
'HTTP/1.[01] ([0-9]+) ([^\r]*)'	606
'H([FOP])([A-Z]{3}).*?:(.*)\\Z'	80
'^convert_file \\"([^\\"]*)\\"'	107
'^(?P<instance>.*)/(?P<db>.*)$'	1247
'(?ims)^.*DOCTYPE.*\\[.*\\]\\>'	743
'\\s*#\\s*include\\s+"([^"]*)"'	1007
'^\\s*#\\s*end\\s+wxGlade\\s*$'	602
'^"my dog" \\(fr to en, .*\\)$'	539
' *[0-9]+: +[1-9][0-9a-z]{3,3}'	1302
'(:pserver:)([a-zA-Z0-9]*)(@.*)'	313
'rb_tree_mmap_lu_mtf_set(?:.*?)'	749
'^\\+.*VTK_LEGACY\\((.*)\\).*\n'	557
'^(.*?\\.pyc?):(\\d+):\\s+(.*)$'	31
'^http://instagr\\.am/p/[\\S]*$'	175
'^[S7]\\s*[T8]\\s*[O6]\\s*[P7]$'	838
'([^:]*):(\\d+): Emergency stop'	31
'progress on (?P<last>\\w*?)\\s'	1588
'^In\\-Band.IPv4.Address:.(.*)$'	225
'(sqlite-amalgamation.*?\\.zip)'	1022
'^<([a-z][a-z0-9_]*):([a-z]*)>$'	557
'^Bonding Mode:\\s*(?P<mode>.+)'	826
'Transcript written on (.*)\\.$'	31
'\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'	1247
'([a-zA-Z_.]+)\\(([0-9]+)\\):.*'	498
'^std::__debug::unique_ptr<.*>$'	1403
'^def ([a-zA-Z0-9_]*)\\((.*)\\)'	960
'(?sm)^\\s*\\/\\*.*?^\\s*\\*\\/'	796
'^} *\\/\\* *(?P<n>.*) *\\*\\/$'	1599
'modified:\\s+(?P<name>.*\\.py)'	1207
'rootpw[ ]+--iscrypted[ ]+.*\\n'	1051
'TM-score\\s*=\\s*(\\d*\\.\\d*)'	726
'.*([sS][0-9]{2}[eE][0-9]{2}).*'	1489
'^AUTOTEST_STATUS:([^:]*):(.*)$'	560
'^0 \\w+ [01]\\.[0-9]* \\?\\s*$'	1248
'([:][ ]*)([/])(.*)([/][ismx]*)'	1354
u'^VERSION\\s*=\\s*[\\\'"]{1,3}'	689
u'<a href="(.*?)">joepublic</a>'	1158
'rFAILED.*\\(failures=(\\d+)\\)'	1603
'<viewer version_test="(.*)" />'	1540
'AC_INIT[(][^,]*,\\s+([^)]*)[)]'	1520
'Working file: (?P<filename>.*)'	531
'.*INTFACE\\s*=\\s*-D(\\S+)\\s*'	1384
'<?xml.*encoding=\\W*([\\w_-]+)'	200
'^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'^\\s*//\\s*end\\s+wxGlade\\s*$'	602
'.*Video: .+, (.+) (?:fps|tb).*'	53
'cpu MHz\\s+:\\s+(\\d+\\.?\\d*)'	1205
'^GNU gdb [^\\d]*(\\d+)\\.(\\d)'	1580
'Number of variables:\\s*(\\d+)'	844
'[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'	126
u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'	1158
'\\s+ASSERT_EQUALS\\(\\"(.*)\\"'	500
'(?s)(?<=\\|\\|)(.*?)(?=\\|\\|)'	138
'MythFrontend Network Control.*'	506
'/[*]+(?:[^*]+|[*]+[^/*])*[*]+/'	1023
'http[s]*:.*youtube.com/watch.*'	1285
'/changeset(?:/([^/]+)(/.*)?)?$'	1258
'skeins\\ \\=.*?(?:(?!yards).)*'	1059
'^[^ #]+\\s+(\\S+)\\s+\\S+\\s*$'	506
'^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'AJS\\.([\\w_$]*?)(?:\\(|,|\\.)'	56
'/v(?P<version_no>\\d+\\.?\\d*)'	993
'^(?P<component>[\\w\\/-]+)\\s*'	225
'.*No packages found matching.*'	993
'DISTRIB_DESCRIPTION=\\"(.*)\\"'	225
'^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'	902
'http://([^:/]+)(:(\\d+))?(/.*)'	1205
u'.*\\.imdb\\.com/title/tt\\d+/'	1557
'(\\s)*File "(.*?)", line \\d.+'	842
'update_(smoke)?test_(.*)\\.py$'	1007
'\\[       OK \\] ?(.*?) .*\r\n'	1007
'^.+? (.*) (\\d+) ([+-]\\d+).*$'	599
'http://www.hulu.com/watch/\\S*'	1247
u'{{[^}]*(?:stubb|spire)[^}]*}}'	1100
'new file:\\s+(?P<name>.*\\.py)'	1207
'Time in seconds\\s*=\\s*(.*)\n'	560
'^s3://([A-Za-z0-9-\\.]+)/(.*)$'	440
'GNU Fortran\\s+95.*?([0-9-.]+)'	356
u'^attachment; filename="(.*)"$'	1557
'\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'	407
'outputName\\s*=\\s*(\\w*?.yml)'	566
'Downloading.*setuptools.*egg\n'	313
'(\\d*):?(.*)-(.*)-(.*)\\.(.*)$'	737
'buildout: Running \\S*setup.py'	313
'\\s*?- Method:\\s*(\\S*)[(].*$'	1007
'\\$?([a-z]+)_\\{*(\\d)\\}*\\$?'	92
'^[a-zA-Z0-9_][a-zA-Z0-9_\\.]*$'	1118
'(\\[.{16,16}[^,)]*?),.*?\\]\\)'	436
'ERROR \\| Test Failure\\: (.*)'	695
'^\\s*class\\s+(\\w+)\\s*[:\\(]'	1248
'.*(\\.ipy|\\.ipynb|\\.py[w]?)$'	1580
'r\\d+\\s[|]\\s(.*)\\s[|]\\s200'	356
"(?im)^what's new in (.*?)\\??$"	1580
'^([><]*\\d+)\\.\\.([><]*\\d+)$'	1302
'ALT=[\'"]?([\\w\\d\\s]*)[\'"]?'	1248
'^msgstr\\[0\\] "(?P<data>.*)"$'	307
'(</variablelist>\\s*)(<simpara)'	1520
'^std::_List_const_iterator<.*>$'	1403
'\\[ RUNNER_FAILED \\] ?(.*)\r\n'	1007
'([!=]=\\s*None)|(None\\s*[!=]=)'	1054
'os\\.environ\\[\\w+\\]\\s*=\\s*'	1384
'(.*)([\\(\\[]([0-9]+)[\\]\\)])$'	506
'^([\\w:\\.]+)\\s+([A-Z]+):(.*)$'	560
'<\\s*script.*?<\\s*/script\\s*>'	506
'from\\s*(.*?)\\s*import\\s*(.+)'	531
'#define PYSQLITE_VERSION "(.*)"'	1022
'(?P<user>[^:]+)(:?(?P<pswd>.*))'	1143
'(|.*/)applications/(?P<a>[^/]+)'	1247
'\\[\\[(https?://[^|\\]]*)\\]\\]'	138
'(<td class="char">)(.*?)(</td>)'	1469
'^.*"cat > (?P<filename>.*?)".*$'	542
'rb_tree_mmap_rb_tree_set(?:.*?)'	749
'[\\s|\\[]*(\\w+)(?:\\s*=\\s*.*)'	1580
'cdef\\s*class\\s*(\\w+)\\s*[(:]'	407
'^Function.*has unnecessary root'	1007
'^#!\\s*/usr/bin/vm(ware|player)'	562
'CPU \\d+ - CPU \\d+ =\\s+-*\\d+'	560
'(\\w+(?:\\+\\d)?)\\s*\\((.*)\\)'	1087
'\\s*(?P<a>[\\+\\-\\*/\\=]+)\\s*'	1247
'^[a-zA-Z\\_][a-zA-Z0-9\\-\\_]*$'	732
'\\s*@(\\w+){((\\S+),)?(.*)}\\s*'	1179
'(?sm).*version="([.0-9a-z]+)".*'	796
'lp:\\s+\\#\\d+(?:,\\s*\\#\\d+)*'	290
'<table id="showall" .*?</table>'	1569
'^(\\w\\w\\w\\w)(?:$|\\s+|_)(.*)'	1302
'^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'	31
'Site-class models:\\s*([^\\s]*)'	1302
'^.+num1=(\\d+)&.*num2=(\\d+)&.+'	182
'^GNU gdb [^\\d]*(\\d+)\\.(\\d+)'	1621
'\\$Revision:\\s*([0-9]*)\\s*\\$'	815
'<img\\s.*?src="(.+?)"\\s?.*?/?>'	310
'\\w+\\d+-cd\\d+: .*file=(\\S*) '	560
'[^\\s]*?[\'|"].*?[\'|"]|[^\\s]+'	560
'Working file: ([a-zA-Z0-9_./]*)'	1528
'^.*?(?P<version>(\\d|\\.)+).*?$'	542
'\\s*(([\\\'"])\\2)\\s*([},=]|$)'	727
'(http://|https://|ftp://)(\\S*)'	275
'(<s>\\s*(?P<sent>.+?)\\s*</s>)+'	1488
'\\s*XKBLAYOUT="(?P<kt>[a-z-]+)"'	562
'(?is)</font>(.*?)(?:</UL>|</p>)'	55
'^.*(\\d+){(\\d+),(\\d+),(.)}.*$'	1644
'v([1-9][0-9]*)([if][1-9][0-9]*)'	1244
'^[a-z0-9]([a-z0-9-]*[a-z0-9])?$'	485
"releaseDate.*=.*'(?P<date>.*)';"	1469
'class\\s([A-Za-z][A-Za-z0-9_]*)'	498
'^\\s+extern.*? dlamch_.*?;$(?m)'	356
'productReference\\s*=\\s*(\\S*)'	820
'^\\s*<policy-file-request\\s*/>'	557
'st([xy]).b tcc__([rf][0-9]*h?)$'	157
'bogomips\\s+:\\s+(\\d+\\.?\\d*)'	1205
'([A-Z]\\w*)\\s+=\\s+([A-Z]\\w*)'	982
'defined\\s*\\(\\s*(\\w+)\\s*\\)'	1007
'\\(pymacs-(defun|python) [0-9]*'	297
'^\\s*[A-Z/\\s-]+ATTRIBUTES\\s*$'	1432
'^\\w+[\\w\\s\\*]*?(\\w*)\\s*\\('	407
'(?m)^[\\t ]*/\\* *\\.\\. .*?\\n'	356
'^(?P<op>=|[<>!]=?)?(?P<ver>.*)$'	1025
'\\s*wordpress_id:\\s*(\\d+)\\s*'	870
'[ _\\.-]+cd[ _\\.-]*([0-9a-d]+)'	1469
'^(<([^ >]*)[^>]*>.*?</\\2>)\\s*'	1301
'^[ \t]*(?i)end script(?i)[ \t]*$'	1591
'^\\s*\\.\\.\\s+autosummary::\\s*'	251
'\\s*?- Constant element value.*$'	1007
'.*=\\(([^)]+)\\) already exists.'	735
'^date: .* author: ([a-zA-Z]+);.*'	1528
'hostname=\\"[a-zA-Z0-9-_\\.]*\\"'	772
'^std::_Deque_const_iterator<.*>$'	1403
"trailerTitle.*=.*'(?P<name>.*)';"	1469
'<OutputType>([^"]*)</OutputType>'	504
'.*<body>(?P<section>.*).*</body>'	477
'\\ssubroutine\\s(.+)\\([^()]*\\)'	531
'^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'	1599
'^"I\'m fine" \\(es to en, .*\\)$'	539
'(?:aka) <em>"(.*?)(<br>|<\\/td>)'	1469
'^.*\\s*host=\\s*([^\\s]+)\\s*.*$'	1520
'<releasedate>(.*?)</releasedate>'	1093
'bitrate: ([0-9\\.]+)\\s*(.*)\\s+'	415
'([^:]*):(\\d+): LaTeX Error:(.*)'	31
"\\s*index.append\\('(.+)'\\)\\s*"	498
'\\$\\(([^\\$]|\\$[^\\(])*?\\$\\)'	743
'id="__VIEWSTATE" value="([^"]*)"'	126
"(\\'\\'\\'(?P<txt>.*?)\\'\\'\\')"	190
'(Input \\#.*)\n(Must|At\\sleast)'	415
u'\\s*include\\s*=\\s*(?P<url>.*)'	737
"''(?P<t>[^\\s']+( +[^\\s']+)*)''"	1247
'.*Video: .+, (\\d+)x(\\d+)[, ].*'	53
'libbcc_([A-Z_]+)\\s*:=\\s*([01])'	1116
'.*\\((.*)(\\s*Format*\\s*)\\).*?'	740
'http\\:\\/\\/([a-zA-Z0-9\\.-_]*)'	1358
'.*AppleWebKit/([0-9+\\.]*)\\w*.*'	557
'^.*\\s*user=\\s*([^\\s]+)\\s*.*$'	1520
'^\\s+[A-Za-z\\s]+Attributes\\s*$'	1432
'(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'	265
'(</literallayout>\\s*)(<simpara)'	1520
'([^:]*):(\\d+): (Emergency stop)'	31
'.*(?P<line>\\d+)\\) (?P<file>.*)'	1326
'((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'	1249
'\\.\\.\\s*doctest-ignore::?\\s*$'	1248
'^Synset\\([\'"]([^\\)]*)[\'"]\\)'	1230
'WARN: target directory .* exists'	566
'(\\s)*def(\\s)+(\\w)+(\\s)*\\(.*'	842
'^__gnu_cxx::_Slist_iterator<.*>$'	1403
'\\s+(<td align=.*?>)(.*?)(</td>)'	31
'^[ ]{4,7}((\\d+\\.)|[*+-])[ ]+.*'	236
'^(\\s*terminal .*--timeout)=\\d+'	560
'^ 0  (?:.*!)?(?:void )?([^\\[]+)'	1007
'<h5>also known as:</h5>.*?</div>'	1469
'(.+);\\s*([0-9\\-\\.]+)?\\s*(.*)'	1539
'([^= ]+)=(?:"([^"]*)"|([^,]+)),?'	557
'^%!TEX\\s+([\\w-]+)\\s?=\\s?(.*)'	31
'(<p>\\s*(?P<para>.+?)\\s*</p>?)+'	1488
'^[a-zA-Z_]+[\\w-]*(\\[\\w*\\])*$'	602
'^\\s*\\+\\+\\+\\s+(?P<file>\\S+)'	1384
'\\s*"(([^"]|(\\\\"))*)(?<!\\\\)"'	276
'(?sm)^^(/\\*.*?^\\s*\\*/\n*)(.*)'	796
'(<h5><a name="?akas"?.*</table>)'	1469
'\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'	220
'~~(?P<t>[^\\s*]+( +[^\\s*]+)*)~~'	1247
'H([FOP])([A-Z]{3})[A-Z]*:(.*)\\Z'	80
'<description>(.*?)</description>'	1093
'^([^}{]*?[^;,}{\\s])\\s*(?=\n|$)'	1025
'.+ at (.+) line ([0-9]+)[,\\.].*'	498
'^([^\\[\\]]+|\\[[^\\[\\]]*\\])*$'	1248
'(.*) - (.*) \\((.*) - (.*)\\).*$'	23
'(\\s+|\\A)@([a-zA-Z0-9\\-_]*)\\b'	265
'COMMAND_ID\\s*=\\s*([0-9]+)\\s*;'	1570
'^.*\\s*port=\\s*([^\\s]+)\\s*.*$'	1520
'(.*)\\t([0-9\\.]+)\\t([0-9]+)\\n'	1331
'(/fastool && \\$\\(MAKE\\))\\s*$'	1384
'<p>\\.qr:\\s?(\\d*?)\\|(.*?)</p>'	310
'^\\s*?([*]|/\\*\\*)(?P<line>.*?)'	706
'<span class="pro-link".*?</span>'	1469
'^#~ msgid_plural "(?P<data>.*)"$'	307
'<tr[^>]*id\\s*=\\s*"task_(\\d+)"'	330
'<table id="emuleFile">.*?</table>'	1569
'((?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)$'	550
'Error .* "(.+)" on line ([0-9]+) '	498
'amp.*(\\d+\\.\\d+).*(\\d+\\.\\d+)'	1295
'-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)%'	729
'<FRAME SRC="(.*?)" NAME="CONTENT"'	32
'^__gnu_debug::_Safe_iterator<.*>$'	1403
'action="http?\\w://[\\w.\\?=/&]*/'	1523
'([0-9]+) jobs currently running.*'	990
'https?://[^/]*(/.*reset_key/\\S*)'	181
'^(CFLAGS_LOCAL.*)(\\s-O3)(\\s.*)$'	1384
'\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'	1454
u'[^\\s"]*"[^"]*"[^\\s"]*|[^\\s"]+'	782
'-D([A-Za-z0-9_]*)=([A-Za-z0-9_]*)'	498
'medea\\._addMod\\(.*?,\\[(.*?)\\]'	522
'^(\\d+)x(\\d+)\\+(\\d+),(\\d+).*?'	233
'(.*?)(?:@2x|~iphone|~ipad)*\\.png'	724
'\\.(?!\\\\(\\\\\\\\)*($|[^\\\\]))'	1248
'(\\d*.?\\d+).(h|hr|hrs|mins|min)+'	1469
'^([^-]+)-([^-]+).*\\.egg(-info)?$'	944
'<meta.*charset\\W*=\\W*([\\w_-]+)'	200
'Content-Type: ?([a-zA-Z0-9\\-/]*)'	1375
'^[.0-9\\(\\)\\+\\-/\\*\\s]+\\s*=$'	175
'^\\s*package\\s+([^\\s;]+)\\s*;.*'	885
'([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'	1495
'AJS.Class =(.|\n)*\n};//End class'	56
'<[wc](?: [^>]*){0,1}>(.*?)</[wc]>'	1248
'([^\\s]*)\\s*(\t|  )\\s*([^\\s]*)'	1322
'^\\s*class\\s+([a-zA-Z_]\\w*)\\s*'	602
'^\\s+organizationalUnitName=(.*)$'	1025
'^#~ msgstr\\[0\\] "(?P<data>.*)"$'	307
'^\\s*\\$INCLUDE\\s*([^;\\s]*)\\s*'	1644
'^([^\\s\\.#]+\\.)*([^\\s\\.#]+)?$'	557
'^std::__norm::_List_iterator<.*>$'	1403
'^std::__debug::unordered_map<.*>$'	1403
'^(dir_last\\s*=\\${dir_base})/.*$'	1384
' color="#(?:6666CC|333366)"[^>]*>'	55
'^GlueClusterUniqueID\\s*=\\s*(.*)'	1205
'(public|private|protected)\\s*\\:'	498
'^[@]?[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'(?P<NCName>[a-zA-Z_](\\w|[_.-])*)'	1500
'<a class="check_in" href="(.*?)">'	981
'data\\s+does\\s+not\\s+exist\\s*$'	975
'^(\\s*geog_data_path\\s*=\\s*).*$'	1384
'\\[\\[[Ii]mage:([^.]*)(.*?)\\]\\]'	1454
'<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'	748
'Creating main pack (.*) \\.\\.\\.'	1384
'("[^"]*"|0x[0-9A-Fa-f]{1,4}|\\d+)'	804
'<field>((?:[^<]|<(?!/))*)</field>'	780
'[ \\t]*#indent[ \\t]*(?P<args>.*)'	53
'^(\\s)*def(\\s)+(\\w)+(\\s)*\\(.*'	842
'^\\s*#\\s*include\\s*["<]([^>"]+)'	557
'^std::__debug::unordered_set<.*>$'	1403
'(?P<pre>.*)/ephox/(?P<package>.+)'	1478
'st([axyz]).b tcc__([rf][0-9]*h?)$'	157
'^-([a-z]*)\\|--([a-z]*) +([^ ].*)'	1618
'^\\s*Tag\\s+Name\\s+VR\\s+VM\\s*$'	1432
'^#~ msgstr\\[1\\] "(?P<data>.*)"$'	307
'^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'	1580
'^([0-9]\\.[0-9])(\\.[0-9]+)(.*?)$'	1241
'.*/discovery/v1/apis/analytics/.*'	1558
'^Database cluster state:\\s+(.*$)'	1520
'(ns3::|::ns3::|)Ptr<([^>]+)>\\s*$'	1216
'<h\\d[^>]*>presenter notes</h\\d>'	310
'^\\{(\\d+)\\}\\{(\\d*)\\}\\s*(.*)'	692
u'Name(?:\\[([^]]+)\\])?\\s*=(.*)$'	782
'<TestThread\\(.*, \\w+ -?\\d+\\)>'	1087
'\\(([\\d\\.]+),\\s*([\\d\\.]+)\\)'	982
'^\\s*git-svn-id:\\s+(\\S+)@(\\d+)'	1301
'\\s*([^#]\\S+)\\s*=\\s*(\\S+)\\s*'	993
'\\s\\s\\s\\s+[\\w]{4}.\\s+\\d*\\Z'	1302
"(?mx) ([^';]* (?:'[^']*'[^';]*)*)"	619
'[\\d]+(-|/)[\\d]+(((-|/)[\\d]+)*)'	330
'<[^>]* alt=[\'"]([^\'"]*)[\'"].*?>'	220
'/_ah/img/([-\\w]+)([=]*)([-\\w]+)?'	1004
"''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"	1247
'url\\([\'"]?(.*?)[\'"]?[\\)\\?\\#]'	1579
'^(\\s*)\\.\\.\\s+autosummary::\\s*'	1087
'VERSION\\s*=\\s["\\\'](.*?)["\\\']'	252
'^std::__debug::priority_queue<.*>$'	1403
'\\s*?- Annotation \\[L(\\S*);\\]:$'	1007
'.*:([0-9]+):([0-9]+):  *error:(.*)'	796
'<img.*?src="(?!http://)(.*?)".*/?>'	310
'^.*postfix/local.* status=sent .*$'	778
'(.*?)user (.*?)system (.*?)elapsed'	560
'(?P<slug>[a-z0-7_]+)(?P<suffix>.*)'	872
'mass.*(\\d+\\.\\d+).*(\\d+\\.\\d+)'	1295
'^std::__norm::_Deque_iterator<.*>$'	1403
'\\s*?- Program class:\\s*([\\S]+)$'	1007
'^\\s*function [A-Za-z0-9_]+\\s*\\('	1426
'^(\\d+),*(\\d*),*(\\d*) *of: *(.+)'	317
'http(s)?://(www\\.)?([a-z]*?)\\.no'	1408
'\\[(?P<name>.*)=(?P<num>[0-9]+)\\]'	234
'(?m)^vendor_id\\s*:\\s*(\\S+)\\s*$'	560
'(-?[0-9]+\\.?[0-9]*(?:e-?[0-9]*)?)'	1054
'(?P<name>[^:]+):(?P<value>[^,]*),?'	1067
'^(\\t*)START\\t----\\t([^\\t]+).*$'	560
'(\\S*)[-](\\d+\\.\\d+\\.*\\d*)\\S*'	975
'^std::tr1::unordered_multimap<.*>$'	1403
'(?P<directory>.*)/(?P<filename>.+)'	1478
'(?<=content-type:\\s).*?(?=\r\n|$)'	436
'^__gnu_cxx::__normal_iterator<.*>$'	1403
'http://([^/:]+)(?::(\\d+))?(/.*)?$'	1569
'^std::_Rb_tree_const_iterator<.*>$'	1403
'&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'	330
'^\\s*<(?:div|table)(?:\\s+[^>]+)?>'	1258
'^(.+)(\\d{3})-(\\d{3})-(\\d{3}).*$'	182
'^\\s+([_a-zA-Z][a-zA-Z0-9_.]*)\\s*'	436
'^(http|ftp):\\/\\/[\\w.]+\\/(\\S*)'	826
'^[ ]{0,3}((\\d+\\.)|[*+-])[ ]+(.*)'	236
'^.*/gene\\W*\\"(?P<gene>\\w+)\\".*'	1331
'(.*)[\r\n](.*)[\r\n](.*)[\r\n](.*)'	1488
'(#\trenamed:\\s+)(.*?)\\s->\\s(.*)'	233
'^std::tr1::unordered_multiset<.*>$'	1403
'\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\/'	498
'.*?/video/films/Short Films(/.*?)?'	84
'(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'	619
'(?<=\\(|\\))?[a-z|A-Z|0-9]*(?=\\()'	152
'(BUG:.*---\\[ end trace .* \\]---)'	560
'Greenplum[a-zA-Z\\s]*(\\d+\\.\\d+)'	1235
'^#define PACKAGE_VERSION "([^"]*)"'	533
'\\<doctest (.*\\.rst)\\[(.*)\\]\\>'	283
'^[./]*resolve[Uu]id/([^/]*)/?(.*)$'	988
'^[@&]?[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'return\\s+transit<\\s*(\\w*)\\s*>()'	592
'(^|[\\W_])fanart|backdrop\\d*[\\W_]'	1469
'[ ]{0,3}\\[\\^([^\\]]*)\\]:\\s*(.*)'	1395
'<([wc](?: [^>]*){0,1}>)(.*?)</[wc]>'	1248
"ProtEOnlineLoad\\((.*), 'false'\\);"	126
'^(CHRYSALIS_MAKE_FLAGS\\s*=\\s*).*$'	1384
'<title>.*Log in to Bugzilla</title>'	178
'medealib\\.define\\(.*?,\\[(.*?)\\]'	522
'<img src="file://.*?/monkey.jpg" />'	310
'<sync start="(\\d+)">([^<]*)</sync>'	1431
'^((?:\\w|-|_|\\.)+)(?:\\[(.*)\\])?$'	897
'^\\s*(class|function) [A-Za-z0-9_]+'	1426
'(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'	356
'Job <(\\d+)> is submitted.*<(\\w+)>'	1205
'^\\s+[A-Z/a-z\\s]+Module Table\\s*$'	1432
"\\s*<?xml\\b.*\\bencoding='([^']+)'"	1248
'Member\\(".*", .*RunTimeEnvironment'	1205
'\\*END\\*?\\s*THE\\s*SMALL\\s*PRINT'	1248
'^([a-zA-Z_][a-zA-Z0-9_]*)\\((.*)\\)'	1054
'<tr[^>]*status\\s*=\\s*"not%20done"'	330
'\\s*<?xml\\b.*\\bencoding="([^"]+)"'	1248
'[\\s\\S]*(exception|error)[\\s\\S]*'	1007
'<indexentry>[\\s\\S]*?</indexentry>'	1470
'(?P<num>\\d+) logs discarded\\s*\\Z'	1485
'\\n\\s*[^!]\\s*<include_file=(.*?)>'	531
'[0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+$'	1248
'\\W*\\.\\W*|\\W+dot\\W+|\\W+d0t\\W+'	485
'^HTTP/\\d\\.\\d\\s+(\\d+)(\\s+.*)?$'	1025
'\\[(.*?)\\][^\\:]+\\:\\s+(\\-?\\d+)'	1247
'^#synchronous_standby_names\\s*=.*$'	1520
'(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'	356
'(\\d{3})\\s*(\\[not run\\])\\s*(.*)'	560
'steamcommunity.com/openid/id/(.*?)$'	997
'^\\s+Table\\s+C.[0-9A-Za-z-.]+\\s*$'	1432
'PostgreSQL[a-zA-Z\\s]*(\\d+\\.\\d+)'	1235
'.*<([^@]+)@[^@]+>\\s*|([^@]+)@[^@]+'	1258
'^\\s*(?P<keyword>[\\w-]+)\\s+{\\s*$'	600
'href\\s*=\\s*"((?!%TWIKIDRAW%).+?)"'	190
'(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'	820
'\\A\\s*----+[ ]*\n(.*)\n----+[ ]*\n'	1470
'<a [^>]*href="([^"]+)"[^>]*>.*?</a>'	1340
'LaTeX Warning.*?input line (\\d+).$'	31
'/_ah/img/([-\\w:]+)([=]*)([-\\w]+)?'	1495
'<[^>]* term=[\'"]([^\'"]*)[\'"].*?>'	220
'Input \\#\\d+\\,\\s*(\\S+),\\s*from'	415
'^(.*[^a-z0-9\\n])?(chown|chmod) +.*'	1465
'^\\s*vtkType(Revision)*Macro\\s*\\('	557
'(\\S+)\\s*[.]\\s*info\\s*[(]\\s*[)]'	356
'.*used_suppression:\\s+(\\d+) (.*)$'	557
'<br />\\s*([^<]+)<br />\\s*([^<]+)<'	506
'<meta http-equiv="Content-Type".*?>'	360
'.*\\.imdb\\.com\\/title\\/tt\\d+\\/'	1557
'Throughput (.*?) MB/sec (.*?) procs'	560
'^(\\d+):(\\d+):(\\d+),\\d+\\s*-->.*'	692
'PartitionName=(\\S+).*?Nodes=(\\S+)'	693
u'^#\\s*-\\*-\\s*coding:\\s*.*-\\*-$'	971
'(?s)id="SUBJECT_PH".*?>(.*?)</span>'	126
'([A-Za-z_]+)\\s*(::|[-=]+>)\\s*(.+)'	1248
'(^|.*[^\\\\])(?P<obr>\\[)[^\\]]*\\Z'	866
'^\\s*description\\s*{(.*?)}[^\n]*\n'	1522
'\\${(\\d+)/(.*?)/(.*?)/([a-zA-z]*)}'	597
'(?is)<(script|style).*?>.*?(</\\1>)'	1248
'\\A[^*]*\\* \\* \\*[^*]*\\* \\* \\*'	1401
'^#define\\s*(bm\\w*)\\s*(\\w*)(.*)$'	633
'(?ims)<title[^>]*>(.*?)</title\\s*>'	539
'<FRAME\\s+SRC="(.*?)"\\s+NAME="TEXT"'	32
'^\\t*GOOD\\t----\\treboot\\.start.*$'	560
'^(.*?)\\b(2|R_386_PC16)\\s+(__\\w+)$'	1580
'<img src="file://.*?/monkey.jpg" */>'	310
'[0-9-]* [0-9:\\.]* [+-][0-9]*\\r?\\n'	1274
'amp .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'	1295
u'\\s*includeconf\\s*=\\s*(?P<url>.*)'	737
'(\\w+(?:\\+\\d)?)(?:\\s*\\((.*)\\))?'	1580
'\\((.*?)\\)\\s{1,}"(.*?)"\\s"(.*?)"$'	1629
'(\\s*"float_value": -?\\d+)\\.[^\\d]'	775
u'(?<!\\\\)(["\\\'])(.*?)(?<!\\\\)\\1'	304
'\\#[\\s]*include[\\s]*[<"](\\S+)[">]'	635
'(?P<text>(\\w|[-])*[*?](\\w|[-*?])*)'	951
"(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"	1247
'a:(link|visited|active|hover|focus)*'	498
'^[a-z]*.[0-9a-f]{32}\\.cache\\.html$'	101
'([0-9]+) INFO TEST-UNEXPECTED-FAIL.*'	1007
'(^build|[^/]+\\.egg-info|.*.py[co]$)'	884
'(#\trenamed:\\W{4})(.*?)\\W->\\W(.*)'	233
'(?P<dtype>[AIJFED])(?P<width>[0-9]*)'	332
'(?:::)?PointerHolder<\\s*(\\w+)\\s*>'	1216
"^\\s*.*?\\s*(\\S+)=\\'(.*)\\'\\s*.*$"	55
'<[^>]* title=[\'"]([^\'"]*)[\'"].*?>'	220
'<AssemblyName>([^"]*)</AssemblyName>'	504
'([A-Za-z]+(?:\\[[A-Za-z,]+\\])?)(.*)'	1248
'^[a-z0-9\\-._]*[a-z0-9]\\.[a-z]{2,}$'	18
'(\\s*templates_path\\s*=\\s*\\[)(.*)'	1496
'^\\s*INITRD_MODULES\\s*=(.*\\S)\\s*$'	560
'(?P<name>[^=]+)="(?P<value>[^"]*)" *'	1067
'X-Transmission-Session-Id:\\s*(\\w+)'	1469
'\\w+(?=: flags)|eth[0-9](?=\\s*Link)'	1501
'(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'	619
'^Type:.((Server|Storage|Unknown).*)$'	225
'^#define\\s*(FR_\\w*)\\s*(\\w*)(.*)$'	633
'<img[^>]*src="(?P<url>http://[^"]*)"'	884
'<a href="(?!http|ftp|mailto|/).*</a>'	200
'(.*[.]so[.0-9]+)(.*[.]dylib)(.*[.]a)'	1249
'(commands/[a-zA-Z0-9/]*Command.java)'	1570
'(?P<word>[^\\s]*)\\s+(?P<count>\\d*)'	1139
'(ht|f)tp(s)?://.*.(jpg|png|gif|jpeg)'	539
'used_suppression:\\s+([0-9]+)\\s(.*)'	1007
'^class ([a-zA-Z0-9_]*)\\(*(.*?)\\)*:'	960
'\\s*\\t*\\[{1}filesystem(\\d+)\\]{1}'	560
'(\\*\\*)(?=\\S)([^\\r]*?\\S[*_]*)\\1'	888
'<EmbeddedResource Include="([^"]*)">'	504
'(?<=\\n)\\[.*?\\]:\\s?(https?://.+)$'	1340
'(\\d{4}-\\d{2}-\\d{2})-(.*).markdown'	870
'^.*/steps/(?P<step_num>\\d+)/syslog$'	440
'^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'	1555
'(<h(\\d+?).*?>(.+?)</h\\d>)\\s?(.+)?'	310
'<TestThread\\(.*, stopped -?\\d+\\)>'	1580
'(?P<table>.*?)\\.(?P<field>.*?)\\..*'	732
'(?m)^.*#o3d\\s+MatrixLoadOrder\\b.*$'	685
'\\b(\\w+)=(?:\'([^\']*)\'|"([^"]*)")'	1569
'^.*libtool: file: .* has no symbols$'	534
'^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'	233
'^/(?:usr/(?:s?bin|games)|s?bin)/(.*)'	1226
'.*(-mm[0-9]+|-git[0-9]+)\\.(bz2|gz)$'	560
'Job (.*?) set to execute immediately'	671
'0x([a-zA-Z0-9]+)\\s*0x([a-zA-Z0-9]+)'	697
'<[^>]* label=[\'"]([^\'"]*)[\'"].*?>'	220
'^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'	1241
'Content-Encoding: ?([a-zA-Z0-9\\-/]*)'	1375
'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'	1295
'^(\\s*iret)\\s*=\\s*.*CPU THROTTLE.*$'	1384
"<class \\'sympy[\\w.]*?.([\\w]*)\\'>$"	787
'    <setting id="(.*?)" value="(.*?)"'	1093
'[-_0-9a-zA-Z][-\\._0-9a-zA-Z]*\\.dmp$'	534
'(?s)id="SUB_TITLE_PH".*?>(.*?)</span>'	126
'^.*postfix/local.* status=bounced .*$'	778
'^def ((?:[a-zA-Z0-9]+_)*[a-zA-Z0-9]+)'	737
'/(raw-)?attachment/([^/]+)(?:/(.*))?$'	1258
'((?:|.*/)distribution/extensions/.*)/'	1007
'Page size:\\s*([0-9]+) x ([0-9]+) pts'	107
'^\\d+\xc2\xb0F\xe2\x80\xbd .* \\- .*$'	539
'^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'	560
'\\s*crt\\s*[=]\\s*(?P<path>.*)/crt1.o'	356
'\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'	1190
'^\\d+\xc2\xb0C\xe2\x80\xbd .* \\- .*$'	539
'(\\d{1,3}(\\,\\d{3})*|\\d+)(\\.\\d+)?'	1488
'track-description-value"><p>(.*?)</p>'	1181
'Your job (\\d+) .* has been submitted'	1205
'^([0-9a-z_]{2,}\\.)*([0-9a-z_]{2,})?$'	557
'(?P<root>https?://[^/]+)(?P<path>/.*)'	560
'^{\\s*\\"([^\\"]+)\\",\\s*(\\S*)\\s*}'	1023
'^https?://[^/]*?(\\w+\\.\\w+)($|/.*$)'	305
'.*(Currently defined functions:)(.*)$'	318
'<b>Party<\\/b><br \\/>\\s*(\\w+)\\s*<'	182
'^(<=|>=|<|>|!=|==|~=)?\\s*([^\\s,]+)$'	1594
'([^\\r\\n]*)(?:\\r\\n|\\n\\r|\\n|\\r)'	813
'^(.+)\t(\\S+)\t/\\^(.*)\\$/;"\t(.*)\n'	557
'(?:::)?MySmartPointer<\\s*(\\w+)\\s*>'	1216
'(/\\*([^*]|(\\*+[^*/]))*\\*+/)|(//.*)'	1630
'^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'	1432
'(|.*/)applications/(?P<appname>[^/]+)'	1247
'GlueForeignKey: GlueSiteUniqueID=(.*)'	1205
'^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'	83
'([\\d.]*%) are below the poverty line'	55
'<.?H2>|<.?p>|<.?A.*>|<.?P.*>|<.?HR.*>'	1076
'distribute( version)? \\d+[.]\\d+\\S*'	313
'(?P<pbs>\\\\*)(?P<escChar>\\\\[iIcC])'	866
'([^: \t\n]*)\\s*:\\s*(".*"|[^ \t\n]*)'	903
'\x00([^\x00]*libreadline[^\x00]*)\x00'	1258
'(?P<caption>.+)\\,\\s(?P<the_rest>.*)'	190
'.*?/video/tv/(.+?)/season (\\d{1,2})$'	84
'[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'	1076
'(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'	1247
'^GlueForeignKey: GlueCEUniqueID=(.*):'	1205
'<div class="filmo-episodes">.*?</div>'	1469
'^(http|ftp):\\/\\/[\\w.\\-]+\\/(\\S*)'	826
'^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'	539
'^([0-9a-fA-F]+) xx([0-9a-fA-F]+)(.*)$'	1432
' +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)'	1302
'\\(?(\\w:)?(-?\\w*)-?(-?\\w*)\\)?(.*)'	1302
'^(\\d+):(\\d+):(\\d+)\\.\\d+\\s*\\,.*'	692
'(\\d+/\\d+\\/\\d+)\\s+(\\w+):\\s+(.*)'	182
'(/[\\w/]*)|([^/ ][^: ]*)(:(\\d+)){,1}'	897
'\\[\\[(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'"(.*)".*PRIMARY KEY( AUTOINCREMENT)?$'	1158
'Area Size: .*? ([\\d,]*) square miles'	55
'<b_\\w+\\s+[^>]*?type="(?P<type>\\w+)"'	1248
'<if\\s+(.+?)\\s*>(.+?)</if\\s+\\1\\s*>'	1469
'^\\s*([-_a-zA-Z0-9?.*]+)\\s*:\\s*(.*)$'	27
'.*videoplay\\?docid=([A-Za-z0-9-_]+).*'	200
'^DJ .* is currently playing: .* by .*$'	539
'\\(pymacs-(defun|python) \\. [0-9]*\\)'	297
'([a-z]*) ([\\d-]+)[\\s\t]+([0-9:, -]+)'	317
'\\[caption (.*?)\\](.*?)\\[/caption\\]'	1142
'<p>Raw output: <a href="(.*)">(.*)</a>'	747
"File '([^\n]*)'.*?:creating '([^\n]*)'"	889
'\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'	1248
';?\\s*end(?:\\s*$|\\s+(?:while|until))'	407
'^System.Board.Spare.Part.Number:.(.*)$'	225
'<html>.*?<body.*?>.*?</body>.*?</html>'	1076
'^#define\\s*(bitno\\w*)\\s*(\\w*)(.*)$'	633
'(?:Default-Start|chkconfig):\\s*[2345]'	944
'http://www.slideshare.net/[^\\/]+/\\S*'	1247
'\\s*(\\d+)\\s+([A-Y])\\s+([-.0-9]+)\\s'	726
' *([0-9]+)x(?: \\(leaked .*\\))?: (.*)'	1007
'(.*?)(<\\%(?!\\%).*?(?<!\\%)\\%>)(?sm)'	992
'^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'	480
'(?<=\\()(?:[^()]+|\\([^)]+\\))*(?=\\))'	539
'MARIONETTE_TIMEOUT(\\s*)=(\\s*)(\\d+);'	1007
'^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'	31
"[- \n\t\ra-zA-Z0-9'()+,./:=?;!*#@$_%]*"	1076
'About\\((.*)\\).should_be_in\\((.*)\\)'	46
'.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'	1326
'.*Backups|.*Backup.*|.*devfs.*|.*map.*'	1178
'^std::__debug::unordered_multimap<.*>$'	1403
'<em [^<>]*id="speed\\d+">([^<>]*)</em>'	1569
'^.*(\\d+){(\\+|-)(\\d+),(\\d+),(.)}.*$'	1644
'.*/videos/view/[A-Za-z-9-]+/([0-9]+).*'	200
'lib/(python[^/]*)/(dist|site)-packages'	944
'id="__EVENTVALIDATION" value="([^"]*)"'	126
'^(.*[^a-z0-9\\n])?cp +.+ system/app/.*'	1465
'.* (FATAL|ERROR|WARN|INFO|DEBUG|TRACE)'	1570
'^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'	560
'(<[^>]*?href=["\']|http://[^"\' \\t]+)'	245
'^([a-z]+)(\\*?)(\\d)([a-z]*)([>\\.]?)$'	1248
"^(\\S+) == (u?'[^']*'|\\([0-9, ]+\\))$"	220
'^\\s*(def|class) [A-Za-z0-9_]+\\s*\\(?'	1426
'<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'	356
'AJSDeferred =(.|\n)*\n};//End deferred'	56
'((^|\\n)[^%]*?)\\\\begin\\{document\\}'	31
'<a.*?\\s*href=\\"(.*?)\\".*?>(.*?)</a>'	1332
'^std::__debug::unordered_multiset<.*>$'	1403
'Catchable\\\\? fatal\\\\? error\\\\?:.*'	218
'^(INCHWORM_CONFIGURE_FLAGS\\s*=\\s*).*$'	1384
'QEMU PC emulator version ([0-9\\.]+),.*'	826
'^std::__norm::_List_const_iterator<.*>$'	1403
u'%J\\s*([0-9\\.]+)\\s*([\\+\\-\\.0-9]+)'	689
'\\s*static ExternalReference ([^(]+)\\('	534
'(<script.*?/script>)|(<style.*?/style>)'	183
'^([a-zA-Z_]\\w*)(\\.|:)([a-zA-Z_]\\w*)$'	975
'\\${[-a-zA-Z0-9 ._]*:[-a-zA-Z0-9 ._]+}$'	313
'<span class="c_addtime">([^<>]*)</span>'	1569
'^(\\([0-9a-fA-F]+,[0-9a-fA-F]+\\))(.*)$'	1432
'(?i)filename="*(?P<filename>[^\\s"]*)"*'	329
'\\s*?([a-z]+(?:-[a-z]+)*):[ \\t]*(.*?);'	782
'<em class="loadnum"[^<>]*>([^<>]*)</em>'	1569
'^([\\w\\d]+[\\w\\d\\-]*[\\w\\d]+\\.?)+$'	187
'^module is a function\\s*\nmodule\\s*()'	1384
'(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'	356
'\\"hostname\\": \\"[a-zA-Z0-9-_\\.]*\\"'	772
'^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'	225
'File (.*) is new; current revision (.*)'	413
'\\s*<entry><type>([^<]+)</type></entry>'	1087
'.*perl.*/(\\.packlist|perllocal\\.pod)$'	1226
'<title>.*Bug ([0-9]+) Submitted</title>'	178
'^(([^\\s\\.#]+\\.)|\\.)*([^\\s\\.#]+)?$'	557
'.*Duration: (.{2}):(.{2}):(.{2})\\.(.),'	53
'--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'	1007
'\\<script [^>]*\\${portal_url}/([^"]*)"'	1377
'^GlueChunkKey: GlueClusterUniqueID=(.*)'	1205
'^(\\(*time|(.*\\s+time))\\s+<\\s+(\\d+)'	317
'\\[\\[file:([^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]]+)\\s*'	1248
'<FRAME\\s+SRC="(.*?)"\\s+NAME="CONTENT"'	32
'[\\n]*[\\-]{5}BEGIN CERTIFICATE[\\-]{5}'	1315
'^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'	190
'^(\\(*time|(.*\\s+time))\\s+>\\s+(\\d+)'	317
'<movieinfo id="(.+?)">(.*?)</movieinfo>'	1093
'S(?P<season>[0-9]*)E(?P<episode>[0-9]*)'	506
'^(.*[^a-z0-9\\n])?mount +.* *remount+.*'	1465
'^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\) (.*)$'	1432
"\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"	284
'<title>(.*)</title>|<TITLE>(.*)</TITLE>'	1076
'<Hostip>\\s*<gml:name>(\\w+)</gml:name>'	506
'Error \\d+ in (.*.tex) line (\\d+):(.*)'	31
'\\s*<?([^@\\s]+\\@[a-zA-Z0-9-.]+)>?\\s*'	329
'%module(\\s*\\(.*\\))?\\s+("?)(\\S+)\\2'	743
'\\s*Add\\(ExternalReference::([^(]+)\\('	534
'E(\\d{2})(\\d{2})(\\d{2})(\\w{3})(.*)\\Z'	80
'^([A-Z])/([^\\(]+)\\(([^\\)]+)\\): (.*)$'	1505
'^\\s+\\[([\\s*[0-9]*)\\] ([a-zA-Z0-9_]*)'	356
'[a-z|A-Z]+[0-9]+\\:*[a-z|A-Z]+[0-9]+\\:*'	152
'^\\s*\\*(?P<fromStar>\\s*@[a-z]+\\s+)\\S'	1322
'--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'	1180
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+)\\]\\]'	1247
'\\[\\[(ftp://[^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'(.*)(pop=&|&pop=|pop=|pop&|&pop|pop)(.*)'	884
'.*imdb.com/title/tt(?P<imdb_id>\\d+)/?.*'	506
'.*Video: (.+), (\\d+)x(\\d+), (.+) fps.*'	53
'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'	413
'\\*\\*(?P<t>[^\\s*]+( +[^\\s*]+)*)\\*\\*'	1247
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'	1248
'About\\((.*)\\).should_include\\((.*)\\)'	46
'(<li>.*? \\.\\.\\.\\. )(.*?)(</li>|<br>)'	1469
'Intel(\\(R\\))? (.*) processor [\\d]+MHz'	244
'^(\\{(\\w+)\\}->\\[(\\w+)\\])(\\s+(.*))?'	358
'^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$'	1432
'\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'	1365
'(?sm)^\\s*//SNIP-START.*?^\\s*//SNIP-END'	796
'^\\s*([A-Z1-9.-]+)\\s*([A-Za-z -]+)\\s*$'	1432
'(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'	623
'(?P<rule>(\\\\.|[^#])*)(?P<comment>#.*)?'	1248
'^\\s(?P<key>.*?)::\\s(?P<val>.*?)(\\s*)$'	190
'HTTP/(\\d\\.\\d)\\s+(\\d+)(?:\\s+(.*))?$'	1025
'^\\s*(?P<key>\\w+)\\s*=\\s*(?P<value>.*)'	1088
'^\\s*(.*)\\s+(include|script)\\s+(\\S+)$'	1007
'<pre\\s*[^>]*id="paste-debug-prints".*?>'	1050
'^(\\(*time|(.*\\s+time))\\s+<=\\s+(\\d+)'	317
'\\s*(?P<name>.+);(?P<code>[A-Z]{2})\\s*$'	514
'query ([\\w ]*\\w+)[ \r\n]+- ([\\w /,]+)'	506
'GlueForeignKey: GlueClusterUniqueID=(.*)'	1205
"parent\\.edit_bt_list\\((\\{.*\\}),''\\)"	1569
'^std::__norm::_Deque_const_iterator<.*>$'	1403
'distribute-\\d+[.]\\d+\\S*-py\\d.\\d.egg'	313
'^(\\{(\\w+)\\}->\\((\\w+)\\))(\\s+(.*))?'	358
'([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'	557
'\\s*<p>\\s*.+?\\s*(<p>\\s*.+?\\s*?)*\\s*'	1488
'^(\\(*time|(.*\\s+time))\\s+>=\\s+(\\d+)'	317
'^\\s*(?P<word>\\S+)\\_(?P<tag>\\S+)\\s*$'	1488
'@(\\w+)\\s([^#\n]*)(\\s+#\\s*([^\n]*)|$)'	1315
'[ ]*\\*color([0-9]*):[ ]*(#[A-Za-z0-9]*)'	1365
'([0-9a-fA-F]{8}|[0-9a-fA-F]{16}) <(.*)>:'	534
'> ([0-9]*):([0-9]*)-([0-9]*) ([+-]) (.*)'	767
'^([\\.\\/\\w\x7f-\xff]+\\.tex):(\\d+):.*'	31
'About\\((.*)\\).should_be_same\\((.*)\\)'	46
'^(\\s)*from ((\\w)+(\\.)*(\\w)*)+ import'	842
'^\\s+def ([a-zA-Z0-9_]*)\\(self,*(.*)\\)'	960
'(\\S+)\\s*[.]\\s*is_f_array\\s*[(]\\s*[)]'	356
'(remote: )?([\\w\\s]+):\\s+()(\\d+)()(.*)'	599
'^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'	1094
'\\[color\\s*([a-z]+)\\](.*)\\[\\/color\\]'	1547
'^(.*[^a-z0-9\\n])?am +start[^a-z0-9\\n].*'	1465
'date: ([^; ]*) ([^;]*);  author: ([^;]*);'	413
u'\\.\\.\\s+doctest-requires\\s*::\\s+(.*)'	689
'exp=(\\d+\\.\\d+)&data=(.+)&digest=(\\S*)'	1225
'(?P<directory>.*)/(?P<filename>.*?)\\.js$'	1478
'^(?! {4}|\\t).*\\w+(?<!_)_\\w+_\\w[\\w_]*'	485
'DOMAIN NUMBER: *(\\d+) \\(coloured (\\w+)'	726
'\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'	498
'https?://github.com/([^/]+/[^/]+)($|/.*$)'	1025
'^.*postfix/smtpd.*connect from unknown.*$'	778
'^Primary Slave:\\s*(?P<primary>eth[0-9]+)'	826
'(.*)(NONRPM_DB_PREFIX="\\$HOME/)intel(.*)'	1384
'nofollow" class="[^"]+" href="(http.*?)">'	539
'\\(([0-9\\.]*),([0-9\\.]*),([0-9\\.]*)\\)'	1503
'https?://[-\\.\\w:]*/console/rest/v1/dev/'	822
'^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,3})(.*)'	873
'^Slave Interface:\\s*(?P<slave>eth[0-9]+)'	826
'Warning \\d+ in (.*.tex) line (\\d+):(.*)'	31
'^(.*)/__pycache__/(.*)\\.(.*)(\\.py[oc])$'	1226
'^RPM\\s+version\\s+(?P<version>[0-9.]+).*'	1384
'(?sm).*}\\s*else\\s+if\\s*\\(true\\)\\s*{'	796
'%\\((\\w+)\\)(?:s|[\\d]*d|\\d*.?\\d*[fg])'	1258
'(?P<nick>.*?)!(?P<ident>.*?)@(?P<host>.*)'	1224
u'\\\\version\\s*"(\\d+\\.\\d+(\\.\\d+)*)"'	782
'-?[0-9]+,-?[0-9]+([ ]+-?[0-9]+,-?[0-9]+)*'	729
'^#\\s*cython\\s*:\\s*((\\w|[.])+\\s*=.*)$'	1621
'([\\d\\D_\\.\\-]*:?[\\d\\D_\\.\\-]+)=(.*)'	1076
'^<div(?:\\s+class="([^"]+)")?>(.*)</div>$'	1258
'(\\S+)\\s*[.]\\s*is_c_array\\s*[(]\\s*[)]'	356
'Median Household Income: .*?\\$([0-9,.]*)'	55
'^def\\s+(?!(_|test))[^(]*\\(\\s*\\)\\s*:$'	787
'LaTeX Warning:.*?input line (\\d+)(\\.|$)'	31
'^(?:(\\.+|\\++|\\-+)(\\.)?\\s+)?(-{3}-*)$'	1247
'^\\s*#\\s*tcollector.(\\w+)\\s*=\\s*(.+)$'	803
'(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'	283
'(^|\\s+|[^\\\\])@([a-zA-Z_][a-zA-Z0-9_]*)'	44
'PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*'	1007
'\\((e\\.c\\.)*\\d+\\.\\d+\\.\\d+\\.\\d+\\)'	1302
'([^\\:])\\:([a-zA-Z_0-9]*)(\\s*)=\\>(\\s*)'	1025
'http(s)?\\://([\\w\\.]*)(\\:(\\d+))?(/.*)?'	594
'^(?!join|order|complement)([^\\:]+?):(.*)$'	1302
'About\\((.*)\\).should_not_be_in\\((.*)\\)'	46
'\\^smsConfirmation\\^=\\^(?P<answer>.*)\\^'	746
'(\\d+)(\\s*-\\s*(\\d+))?(\\s*([a-zA-Z]+))?'	571
'In \\[\\{\\\\color\\{incolor\\}(.*)\\}\\]:'	1580
'(\\s*\\t*max_filesize)\\=(\\d+[kKMmGgTt]?)'	560
'^(?P<y>[0-9]*)-(?P<m>[0-9]*)-(?P<d>[0-9]*)'	1599
'^\\s*(?P<hmarker>=+)\\s(.*)\\s(?P=hmarker)'	190
"invalid literal for int().*: s?'?0xOoops'?"	1580
'^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'	1432
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^/:#?]*)'	200
'([a-zA-Z_][a-zA-Z0-9_.]*\\.[a-zA-Z0-9_.]+)'	1054
'^(?P<h>[0-9]*):(?P<m>[0-9]*):(?P<s>[0-9]*)'	1599
'reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	440
'(?:[^,\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	1025
'(?ims)</p>\\n</div>.*?<!-- end content -->'	539
'^\\s*DATS_FREE_PARTITIONS\\s*=(.*\\S)\\s*$'	560
' a/(.*?) b/(.*?)( (copy|rename) from .*)?$'	1426
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]]*)\\s*\\['	1248
'<[^>]*?id\\s*=\\s*("|\')(.*?)("|\')[^>]*?>'	719
'<meta name="description" content="([^"]*)"'	1181
'<!-- REPORTBUG id="report-(.*)\\.html" -->'	1244
'^\\s*\\d+\\s+/\\* frame size = (\\d+) \\*/'	1534
'#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'	173
'content-location:\\shttp.?://.*?(?=\r\n|$)'	436
'^([-a-zA-Z0-9._]*):([0-9]+)(\\.([0-9]+))?$'	27
'[ \\t]*([^<>\\s]+?)[ \\t]*<p="([^"]*"?)"/>'	1248
'((\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])(.*)'	200
'([0-9]{0,4})(?:_sp\\d*)?\\.([0-9][0-9.]*)$'	743
"name='csrfmiddlewaretoken' value='([^']*)'"	665
u'^textedit://(.*?):(\\d+):(\\d+)(?::\\d+)$'	782
'^http://((?:www\\.)?\\w+\\.\\w{2,3})(/.*)?'	1479
'^\\s*package\\s+([a-zA-Z_][\\w:]*)\\s*;.*$'	602
'^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'	1432
'(\\A|^)module\\s+(?P<name>\\w+)\\s*(!.*|)$'	356
'(?P<pid>\\d+)(?P<body>.*)<unfinished ...>$'	1170
'^(\\s*\\$\\(COMPRESSION_LIBS\\))(\\s*;.*)$'	1384
'input: \\((\\w+)\\) \\((\\w+)\\) \\((.*)\\)'	982
'(<a href="/character/ch[0-9]{7}")>(.*?)</a>'	1469
'<meta property="og:video" content="([^"]*)"'	1181
'^Function.*takes unsafe address of unrooted'	1007
'\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'	727
'[\\w\\W\\|\\-\\s]*apt-get[\\w\\W\\|\\-\\s]*'	772
'^\\(([0-9a-fA-F]+)xx,([0-9a-fA-F]+)\\)(.*)$'	1432
'^(([0-9a-z_]{2,}\\.)|\\.)*([0-9a-z_]{2,})?$'	557
'^\\s*};\\s*//\\s+wxGlade:\\s+end class\\s*$'	602
'(Invalid alias name \\[)(?P<index>.*?)(\\])'	391
'(?=.*?\\b/\\b)(?=.*?\\bdisk0)((?!Volume).)*'	1178
".*window\\.location\\.href='(?P<href>.*)'.*"	1338
'.+ \\(in paml version (\\d+\\.\\d+[a-z]*).*'	1302
'http://\\S*.youtu(\\.be|be\\.com)/watch\\S*'	1247
'\\[\\[include page="([^"]*?)"[^\\]]*?\\]\\]'	138
'(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'	1025
'.*class +(\\w+)(?: +extends +(\\w+))? *\\{$'	407
'@\\{(?P<a>[\\w\\-\\.]+?)(\\:(?P<b>.*?))?\\}'	1247
'^/lib/modules/(2\\.[23456]\\.[0-9]+[^/]*?)/'	1226
'^(.*[^a-z0-9\\n])?pm +install[^a-z0-9\\n].*'	1465
'^==== ([^#]+)#(\\d+) ==([AMD])== (.*) ====$'	1426
'(?P<nick>[^!].*)!(?P<ident>.*)@(?P<host>.*)'	1544
'You have received (a|\\d+) .*new response.*'	819
'Tcp port:\\s*(\\d+)\\s+Unix socket:\\s+(.*)'	873
'(?P<nonterminal>(\\.|[^:])*)(:(?P<rule>.*))'	1248
'Out\\[\\{\\\\color\\{outcolor\\}(.*)\\}\\]:'	1580
'\\s+((\\w*?):.*?{(.|\n)*?\n\\s*})(,|\n+})\n'	56
'\\s*([^\\\'"\\s{},=][^{},=]*?)\\s*([},=]|$)'	727
'<meta property="og:image" content="([^"]*)"'	1181
'Mozilla (Firefox|Iceweasel) ((\\d+)\\.\\S*)'	247
'http(s)?://(.*).(jpg|jpeg|png|gif|tiff|bmp)'	539
'([A-Za-z]|-?[0-9]+\\.?[0-9]*(?:e-?[0-9]*)?)'	1054
'\\[\\[(https?://[^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'^\\s*([0-9a-f]+\\.\\.[0-9a-f]+)\\s+([\\S]+)'	1107
'^http://www.justin.tv/([a-zA-Z0-9_]+)[^/]*$'	200
'^(variable\\w*|parameter|options|notebook)$'	633
'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'	1247
'\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'	1351
'^/usr/share/doc/perl-.*/MANIFEST(\\.SKIP)?$'	1226
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'	974
'\\,(\\s)*?(?P<size>[0-9]+)(\\s)*?(\\,){0,1}'	190
'(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'	356
'^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	542
'\\*\\*(?P<t>[^\\s\\*]+( +[^\\s\\*]+)*)\\*\\*'	1247
'\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'	153
'lantern-net-installer_([a-z]+)_(.*)\\.[a-z]+'	1197
'http://(?P<ip>[0-9\\.]+):(?P<port>[0-9]+)/.*'	506
'name="base\\.version" value="([0-9.]+)[^"]*"'	1057
'About\\((.*)\\).should_not_include\\((.*)\\)'	46
'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'	1023
'^\\s*\\d+\\s*(?P<reponame>[^\\s]+)\\s*.*:.*$'	1426
'(\\S+)\\s*[.]\\s*isbyteswapped\\s*[(]\\s*[)]'	356
'output: \\((\\w+)\\) \\((\\w+)\\) \\((.*)\\)'	982
'\\A(?:\\[([^\\]]+)\\])?([^=]+)?(?:=(.*))?\\Z'	1571
'^(.*\\n)*def\\s+step_init\\s*\\(\\s*\\)\\s*:'	560
'^(?P<master>.*?)!(?P<slave>.*?)=(?P<dir>.*)$'	542
'goog\\.provideAll\\s*\\(\\s*([^\\)]+)\\s*\\)'	1336
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+\\s*)()'	1248
'[ \\t\\r\\n]*(?:(?:#[^\\n]*)?\\r?(?:$|\\n))?'	55
'^\\s*(?P<hmarker>=+)\\s*(.*)\\s*(?P=hmarker)'	190
'(\\W)all\\( *(\\S+) *(\\S+) *(.*?) *\\)(\\W)'	1571
'(\n\\[\\[[a-z][a-z][\\w-]*:[^:\\]]+\\]\\])+$'	1454
'(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '	251
'(.*)(?P<rating>(explicit|questionable|safe))'	539
'^\\s*-\\s*[Ee]xit.[Cc]ode\\s*=\\s*(.*?)\\s*$'	1205
'(\\W)any\\( *(\\S+) *(\\S+) *(.*?) *\\)(\\W)'	1571
'//\\s*\\|(.*?)\\|\\s*(.*?)\\s*(--\\s*(.*))?$'	1007
'((\\[\\w*|[0-9]+\\.)(\\:|)).*(\\]|\\.[0-9]+)'	705
'cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'^== Troubleshooting information ==\n(.*?)^=='	682
'http://.*\\.qjwm\\.com/down(load)?_\\d+.html'	1569
"(\\'\\'\\'\\'\\'(?P<txt>.*?)\\'\\'\\'\\'\\')"	190
'goog\\.requireAll\\s*\\(\\s*([^\\)]+)\\s*\\)'	1336
'[0-9]*-[0-9]*\\.[0-9]*[\\.0-9]*\\:[\\.0-9]*$'	1599
'(?ims)<p[^>]*>.*?</p>|<li(?!n)[^>]*>.*?</li>'	539
'.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'	84
'File (.*) changed from revision (.*) to (.*)'	413
'^[A-Z][a-z0-9]*(([0-9]+)|([A-Z][a-z0-9]*))*$'	1426
'About\\((.*)\\).should_not_be_same\\((.*)\\)'	46
'(?P<pid>\\d+)\\s+chdir\\("(?P<cwd>[^"]*)"\\)'	1170
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+)?(\\[)'	1248
'(\\S+)\\s*[.]\\s*new\\s*[(]\\s*(\\S+)\\s*[)]'	356
'(<a name="history">)\\s*(<table .*?</table>)'	1469
'^([a-zA-Z0-9-]-)*force-([a-zA-Z0-9])+[.]cmd$'	119
'\\s*?([a-z]+(?:-[a-z]+)*)(?::[ \\t]*(.*?))?;'	782
'(\\d*.?\\d+).(sec|hour|day|week|month|year)+'	1469
'([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'	1076
'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*\\);'	413
'.*\\s+internal::(Bindable)?Matcher<([^>]+)>$'	1244
'^(\\w+\\:)\\s*\\((.*?)\\)\\s*(\\w+)\\s*(.*)$'	641
'^(.+?)/|/?(.+?)/main/?.*?/([0-9]+|CHECKEDOUT)'	1426
'[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'	380
'^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'	506
'^AUTOTEST_FETCH_PACKAGE:([^:]*):([^:]*):(.*)$'	560
'charset\\s*=\\s*(?P<charset>[a-zA-Z0-9_\\-]+)'	1076
'api_version:\\s*(?P<api_version>[\\w.]{1,32})'	1074
'nodif_brain_mask\\s+does\\s+not\\s+exist\\s*$'	975
'http://.*imdb\\.com/title/tt([0-9]{7})/quotes'	1075
'#define\\s+(\\w+?)\\s+([a-fA-F0-9\\-]+?)\\s*$'	493
'^(?P<train>\\d+)\\s*(\\,\\s*(?P<test>\\d+))?$'	1488
'Representative ([\\w\\s\\.\\,\\"\\-]+)\\s*<br'	182
'\n(?P<level>=+) *(?P<title>[^\n]*)\\1 *(?=\n)'	1454
"^\\s*wal_level\\s*=\\s*'?([a-z_]+)'?\\s*#?.*$"	1520
'(?P<pid>\\d+)\\s+stat\\("(?P<name>[^"]*)", .*'	1170
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>\\D+)?'	962
'^\\s*#\\s*include\\s+<([\\./\\\\a-zA-Z0-9]+)>'	108
'^[A-Za-z0-9_-]+[\\s\\?\\#\\@]*[A-Za-z0-9_-]+$'	993
'^[-+]\\s+\\([^\\)]+\\)\\s+[A-Za-z0-9_]+[^;]*$'	1426
'^(?P<hostname>.*):(?P<port>\\d+)?(?P<path>.*)'	1426
'^\\s*#\\s*include\\s+"([\\./\\\\a-zA-Z0-9]+)"'	108
'(<tr><td bgcolor="#BBBBBB".*)(More Songs &gt)'	110
'<name>mapred.job.tracker</name>\\s*.*</value>'	664
u'<a href="(.*?)" class="deletelink">Delete</a>'	1158
'(.*?)(?:\\.(\\d+))?(([-+]\\d{1,2}):(\\d{2}))?$'	425
'<\\?xml version="[^"]*" encoding="([^"]*)"\\?>'	1093
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^#]*[^#/])/?'	200
'(\\S+)\\s*[.]\\s*togglebyteorder\\s*[(]\\s*[)]'	356
'^(\\s*-L\\.\\s*-l\\$\\(LIBTARGET\\))(\\s*;.*)$'	1384
'^([0-9a-zA-Z_]+)\\s+([0-9][0-9a-zA-Z\\.-]*)\\s'	944
'(?si)<\\s*?(script|style|noscript)\\b.*?</\\1>'	37
'^http://[\\S]*\\.craigslist.org/[\\S]*\\.html$'	175
'(<(?:style|script)[^>]*>.+</(?:style|script)>)'	634
'^Latexmk: All targets \\(.*?\\) are up-to-date'	31
'^(.*:.*/(jobmanager|nordugrid|cream)-.*?)-(.*)'	1205
'\\s*Option\\s+"XkbLayout"\\s+"(?P<kt>[a-z-]+)"'	562
'  <node .*? pos="(\\w+)".*? word="([^"]+)".*/>'	1248
"([a-z_]+) '(.*)'\\t(.*)\\tLoc=<(.*):(.*):(.*)>"	1244
'(?P<pid>\\d+)\\s+\\<\\.\\.\\..*\\>(?P<body>.*)'	1170
'[a-zA-Z]+ error: .* in (.+) on line ([0-9]+).*'	498
'(.*)_(\\d\\d\\d\\d-\\d\\d-\\d\\d(?:\\.\\d+)?)$'	351
'(-)?(?:"([^"]*)"|\\\'([^\\\']*)\\\'|([^\\s]+))'	1258
'^(http://www.youtube.com/v/([_a-zA-Z0-9-]+)).*'	200
'^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.)\\d{1,3}.*'	884
'\\s*The (?P<p>[\\w\\d]+) processor operates at'	356
'([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_]+)(.*)'	407
'.*Video: .+PAR ([0-9]+):([0-9]+) DAR [0-9:]+.*'	53
'^(BUGFIX|NEW|FEATURE|CHANGE|DEPRECATED): *(.*)'	1528
'^1.2.840.10008.[0-9.]+ (.*) PS ?[0-9].1?[0-9]$'	1432
'^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\('	557
'(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'	317
'.*DCHECK\\(.*args\\.length\\(\\) == (\\d+)\\);'	534
'^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'	557
'([^=]+)=(\\w+(?:[.]\\w+)*):(\\w+(?:[.]\\w+)*)$'	313
'(([a-zA-Z_]+[0-9_]*)|([\\)\\]])+)((\\.)|(->))$'	626
'^\\-{4,}\n(?P<t>.*?)\n\\-{4,}(:(?P<c>\\w+))?\n'	1247
'(\\{[_a-zA-Z][^{}]*(?:\\{[^{}]*\\}[^{}]*)*\\})'	1268
'\\[\\[Category:(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'(?P<pid>\\d+)\\s+mkdir\\("(?P<name>[^"]*)", .*'	1170
'const char \\* const IMP_VERSION_TEST = "(.*)";'	1540
'(?P<pid>\\d+)\\s+execve\\("(?P<name>[^"]*)", .*'	1170
'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'	739
u'[ \\t]*--[ \\t]*|__[ \\t]*|_[ \\t]+(_[ \\t]+)*'	782
'^FUNC ([a-f0-9]+) ([a-f0-9]+) ([a-f0-9]+) (.*)$'	534
'BASEML \\(in paml version (\\d+\\.\\d+[a-z]*).*'	1302
'([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'	317
'^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'	190
'^Item ([^ ]+) depends on missing item ([^ ]+).*'	534
'(?P<pid>\\d+)\\s+stat64\\("(?P<name>[^"]*)", .*'	1170
'^\\s*([tlrbhwxy])\\s*([!\\?\\*])\\s*(\\d*)\\s*$'	498
'^GlueCEInfoContactString: (.*:.*/jobmanager-.*)'	1205
'^(\\^C)?(-+\\n)|^(  File)(.*)(, line )(\\d+\\n)'	1580
'([!=]=\\s*(True|False))|((True|False)\\s*[!=]=)'	1054
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,16})\\](.*)$'	1007
'^\\x1b\\[0m(.*?)\\x1b\\[0?m[:-](\\d+)([:-])(.*)'	407
'^.*?/hadoop-hadoop-(jobtracker|namenode).*.out$'	542
'^[ \\t]*LOG[ \\t]*=[ \\t]*(?:(?:Y(?:ES)?)|TRUE)'	534
'Release:</th><td class="field-body">(.*)</td>\n'	975
'<!-- START_DECL_MATCHERS.*END_DECL_MATCHERS -->'	1244
'(\\S+)\\s*[.]\\s*repeat\\s*[(]\\s*(\\S+)\\s*[)]'	356
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]*)\\s*(\\[|/)'	1248
'Description:\\s*(.*?)\\s*Expect:\\s*(.*)\\s*-->'	220
'"uid":"([\\w\\d]+?)".*?stream_token=([\\w\\d]+)'	1181
'^@@ -\\d+(?:,\\d+)? \\+(\\d+)(?:,(\\d+))? @@.*$'	1025
'(?<!\\\\):([a-zA-Z_][a-zA-Z_0-9]*)?(?:#(.*?)#)?'	317
'^\\s*CONVERT_SMI_ARG_CHECKED\\((\\w+), (\\d+)\\)'	534
'^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9] [A-Z, ]$'	1432
'\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'	747
'(\\S+)\\s*[.]\\s*setimag\\s*[(]\\s*(\\S+)\\s*[)]'	356
'\\s*([+-]?)([^\\s\\(\\)<>"\\\'\\-=\\[\\],]+)\\s*'	1248
'.*?/video/tv/(.+?)/season (\\d{1,2}) \\[720p\\]$'	84
'#\\s*if(n?def\\s+(?P<ifdef>\\w+)|\\s+(?P<if>.+))'	533
u'<a href="(.*?)" class="historylink">History</a>'	1158
'(.*)-(debug(info)?|devel|headers|source|static)$'	1226
'(\\S+)\\s*[.]\\s*setreal\\s*[(]\\s*(\\S+)\\s*[)]'	356
'(\\s*[\\w\\W]*?(?:\\.(\\s|$)|[\\n][\\t ]*[\\n]))'	1087
'^(\\s*(\\[\\[flickr((\\(.*\\))|())\\]\\])\\s*)+$'	190
'https?:\\/\\/www.filepicker.io\\/api\\/file\\/.*'	1617
'<th[^>]*>Tests failed</th>\n\\s*<td[^>]*>([^<]*)'	705
'^=item\\sB<(\\w+)>\\(([^)]+)\\)\n\n(?=(.*?)\n\n)'	387
'.*(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)'	290
'\\s+src set ".*" \\(\\d+ docs, ([0-9.]+) segs\\)'	764
'^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'	1491
'macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*\\n'	534
'\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'	764
'<h2><a\\shref="(.*?#([0-9]+))".*?>(.*?)</a></h2>'	1431
'<script\\s*src=[\'"](.*)\\.js[\'"]>\\s*</script>'	1007
'type\\s*[(]([^)]*)[)]\\s+(?:is|==)\\s+(.*?float)'	356
'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'	564
'<th[^>]*>Tests passed</th>\n\\s*<td[^>]*>([^<]*)'	705
'Population in (\\d{4})( \\(est\\))?.*?([\\d,.]+)'	55
'\\s+cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'[ ]*(/\\*\\*\\s|\\*/|\\B\\*\\s|//!)(?P<line>.*?)'	706
'^R(?P<reps>\\d+)?/(?P<intv>P.+)/(?P<end>[^P].*)$'	1571
'^.*named.*client (?P<client_ip>[0-9\\.]+).*query'	778
'^!!NSFW!! -> http://rule34\\.xxx/.* <- !!NSFW!!$'	539
'play ([\\w -:]*\\w+)[ \r\n]+- ([\\w /:,\\(\\)]+)'	506
'getsatisfaction\\.com/(\\w*)(?:/products/(\\w*))?'	872
'^\\s{5}(?P<feat>[a-z_A-Z]+)\\s*(?P<rest>\\S*)\\s*'	1331
'^(\\s*(\\[\\[include((\\(.*\\))|())\\]\\])\\s*)+$'	190
'^\\s*DECLARE_EVENT_TABLE\\s*\\(\\s*\\)\\s*;?\\s*$'	602
'(?P<pid>\\d+)\\s+exit_group\\((?P<status>.*)\\).*'	1170
'^.*/(?P<step_num>\\d+)/(?P<stream>syslog|stderr)$'	542
'^\\s*(else|elif\\s.*|except(\\s.*)?|finally)\\s*:'	407
'/\\*\\s*\\|(.*?)\\|\\s*(.*?)\\s*(--\\s*(.*))?\\*/'	1007
'^[0-9a-fA-F]+ [0-9a-fA-F]+ [A-Z][A-Z] [0-9n-] .*$'	1432
'([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'	1076
'^(.*) ?\\[([^ ]*) \\+(0x[0-9a-fA-F]{1,8})\\](.*)$'	1007
'^(BACKEND_PORT\\..*|INSTANCE_ID|SERVER_SOFTWARE)$'	1495
'const\\s+([a-zA-Z0-9_]+)\\s*=\\s*([^;\\n]+)[;\\n]'	534
'.* \\(based on bleeding_edge revision r(\\d+)\\)$'	534
'{(0x..),\\s*"([^"]*)"\\s*,\\s*"([^"]*)"[^}]*}\\s*'	107
'SupportedFeatures:\\s*(?P<features_string>.*)\\s*'	1199
'gi\\|.+\\|.+\\|([A-Z]+[0-9]+)\\.[0-9]+\\|\\s*(.+)'	721
'\n@@ -([0-9]+),?([0-9]*) \\+([0-9]+),?([0-9]*) @@'	460
'.*[sS][0-9]{2}[eE][0-9]{2}.*\\.(mkv|avi|mpg|mp4)$'	1489
'MARIONETTE_INACTIVITY_TIMEOUT(\\s*)=(\\s*)(\\d+);'	1007
'(\\s)*def |(\\s)*class |(\\s)*#begin-fold:|(.)*{$'	842
'([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'	1288
'(\\S+)\\s*[.]\\s*setshape\\s*[(]\\s*(\\S+)\\s*[)]'	356
'^Currently Active Slave:\\s*(?P<active>eth[0-9]+)'	826
'maps.google.com/\\?q=loc%3A(.*)">google map<\\/a>'	175
'.*\\brequire\\s*\\(?([\\\'\\"])([\\w._-]+)\\1\\)?'	727
'^.* \\(.*\\): .* http://imdb.com/title/[a-z\\d]+$'	539
'^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'	1465
'Mozilla (Firefox|Iceweasel|Fennec) ((\\d+)\\.\\S*)'	919
'(?im)(x-eyeconnect-token *: *([0-9a-fA-F]{32,32}))'	859
'\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*'	47
'^.*?([0-9/]{8}\\s+[0-9:]{8}):\\s+?(.+)\\sjoined.*$'	1027
'<\\s*span id\\="VERSION"[^>]*>(.*?)<\\s*/span\\s*>'	498
'^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'	3
'Senator ([\\w\\s\\.\\,\\"\\-]+)\\s*\\-\\s*District'	182
'<textarea name="text"[\\W]*rows="25"[\\W]id="text"'	987
'^(-?(0|[1-9][0-9]*)(\\.[0-9]*)?([eE][+-]?[0-9]+)?)'	1181
'^#define ([^ ]+)\\(([^)]*)\\) *([^\\\\]*)\\\\?\\n$'	534
'(\\s*(>>>|\\.\\.\\.)?\\s*)from werkzeug import\\s+'	992
'(?im)<title>Dailymotion\\s*[\\-:]\\s*(.+?)</title>'	386
"<[fF][oO][nN][tT][ ]*[sS][iI][zZ][eE][ ]*='2'[ ]*>"	110
'([a-z]*) ([\\d-]+) - ([\\d-]+)[\\s\t]*([0-9:, -]+)'	317
'^.*?([0-9/]{8}\\s+[0-9:]{8}):\\s+?([^:]+):\\s(.*)$'	1027
'^\\s*<\\?xml\\s+.*(encoding\\s*=\\s*"(.*?)").*\\?>'	602
'\\((?P<flags>.*)\\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"'	1353
'\\#\\d+ *0x.* in spam\\(\\) at .*codefile\\.pyx:22'	1621
'^(\\s*)(\\d+\\.\\s+|\\-\\s+|\\+\\s+|\\*\\s+)?(.*)$'	362
'(.*)(DEFAULT_DB_PREFIX="\\$\\(echo ~\\)/)intel(.*)'	1384
';\\s*Description:\\s*(.*?)\\s*;\\s*Expect:\\s*(.*)'	220
'^[a-z][a-z0-9]*(_+(([0-9]+)|([a-z][a-z0-9]*)))*_*$'	1426
'^(?P<reponame>.*)@(?P<hostname>.*):(?P<port>\\d+)$'	1426
'<li class="next"><a href="([^"]+)">[^<>]*</a></li>'	1569
'[\\n]*[\\-]{5}BEGIN( RSA| DSA)? PRIVATE KEY[\\-]{5}'	1315
'<lrc id="(.*?)" artist="(.*?)" title="(.*?)"></lrc>'	1431
'^\\s*CONVERT_DOUBLE_ARG_CHECKED\\((\\w+), (\\d+)\\)'	534
'https?://?([-\\w.]*\\.)?digg\\.com/\\w+\\.\\w+(/|$)'	200
'^(?P<comp>\\D*)(?P<start>\\d+)(\\.)*(?P<end>\\d*).*'	1331
'[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'	1076
'^(?:.:)?[^:]+:(\\d+): \\[([EWRCI]+)[^\\]]*\\] (.*)$'	640
'^p cnf\\s+(?P<vars>\\d+)\\s+(?P<clauses>\\d+)\\s*\n'	554
'.*takes .* ([0-9]*) arguments? \\(([0-9]*) given\\)'	875
'(/.*?)(\\(([0-9]+)\\)|):.*(Error|Warning):\\s*(.*)$'	31
"<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"	55
'^([^:]+):(\\d+): (\\w+): (.*) is not documented\\.$'	1023
'membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)'	1068
'(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'	695
'(zc.buildout|setuptools)( version)? \\d+[.]\\d+\\S*'	313
'#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'	533
'(?s)(?<=\\n)([|][|].*?[|][|])(?=\\n[^|]|\\n[|][^|])'	138
'(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'	866
'^\\s*//\\s*begin\\s+wxGlade:\\s*(\\w*)::(\\w+)\\s*$'	602
'@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@(.*)'	1258
'^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'	1571
'[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*$'	1621
'^(\\s*set\\s*WRF_DIR_PRE\\s*=\\s*)\\${DEV_TOP}(.*)$'	1384
'^#[ \\t\\*]*END[ \\t]+LICENSE[ \\t]+BLOCK[ \\t\\*]*'	119
'@\\(#\\) Patch NRX2_ROM_VERSION_(?P<release>\\w+).*'	1626
'("\\w+ .*?HTTP/[\\d\\.]+"\\s)(\\d+)(\\s\\d+\\s".*?")'	455
'\\.in ([0-9]+(?:\\.[0-9]+)?)\\s?((?:)\\b)?:?\\s?(.*)'	539
'^\\s*CONVERT_BOOLEAN_ARG_CHECKED\\((\\w+), (\\d+)\\)'	534
'<input type="hidden" name="crumb" value="([^"]*)" />'	541
'(?x)(.+?)\\s+(\\S*:\\S*)\\s+(\\S+)\\s+(\\S+)\\s+(.*)'	1087
'^.*(HEAD|GET|POST|PATCH|PUT|DELETE)\\s+(/[^ \n]*).*$'	1311
'\\,( )*?(?P<alignment>(right)|(left))( )*?(\\,){0,1}'	190
'TEST-(PASS|FAIL|RESULT.*?):\\s+(.*?)\\s+(.*?)\\r*\\n'	1243
"^[A-Za-z '\\(\\)]+ +\\([0-9A-F]+,[0-9A-F]+\\) +(.*)$"	1432
'^\\s*CONVERT_ARG_CHECKED\\((\\w+), (\\w+), (\\d+)\\)'	534
'<div class="cover-art">\\s*<img src="(?P<url>[^"]+)"'	327
'<div id="result"><div style="padding:0.6em;">([^<]*)'	1248
'^(svn\\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$'	1218
u'^[ ]{0,3}(?P<key>[A-Za-z0-9._-]+):\\s*(?P<value>.*)'	1340
'\n            <.*>_CODE\n            |\\s.*_ID\n    '	1248
'<(ENAMEX|NUMEX|TIMEX)\\s+[^>]*?TYPE="(?P<type>\\w+)"'	1488
'C(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])(.*)\\Z'	80
'^\\(([0-9a-fx]+),([0-9a-fx]+)\\) (.*) (RET|Retired)$'	1432
'^GlueHostApplicationSoftwareRunTimeEnvironment: (.*)'	1205
'[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b]*'	1248
'(?i)fec\\s*-\\s*(\\d+)(\\.?$|\\s+|\\*BD[0-9a-f]{4}$)'	55
"^\\s*archive_mode\\s*=\\s*'?([a-zA-Z01]+)'?\\s*#?.*$"	1520
'[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-]*)?'	1076
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*\\\'[^\\\']*\\\''	974
'^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$'	978
'(\\/app\\/views|controllers|helpers|test|spec)\\/(.*)'	1025
'([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'	498
'(\\S+)\\s*[.]\\s*setimaginary\\s*[(]\\s*(\\S+)\\s*[)]'	356
'<![ \r\n\t]*(--([^\\-]|[\r\n]|-[^\\-])*--[ \r\n\t]*)>'	347
'MARIONETTE_HEAD_JS(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'	1007
'^\\s*((?P<title>[^\\s]*?)\\s+)?(?P<tags>:[\\w_:@]+:)$'	624
'^\\s*\\%\\s*include\\s+([\\"\\<])(.+?)([\\"\\>])(.*)$'	1580
'^\\S+:(?P<level>\\w+):(?P<code>\\d+):\\s+(?P<msg>.*)$'	1384
'.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'	102
'\\s*([bB]asic|[dD]igest)\\s+(?:[\\w]+="[^"]+",?\\s*)?'	1076
'MARIONETTE_CONTEXT(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'	1007
'^calls=\\s*(\\d+)\\s+((\\d+|\\+\\d+|-\\d+|\\*)\\s+)+$'	1576
'(\\w+)(?:\\:(\\w+))?@([\\w-]+(?:%)?(?:\\.[\\w-]+)*|%)'	873
'^(\\(*\\d+\\s*[<>=!]+\\s*\\d+\\)*\\s*(and|or)?\\s*)+$'	605
'[r][g][b][(]\\d{1,3}[,][ ]*\\d{1,3}[,][ ]*\\d{1,3}[)]'	1025
'^\\s*(?P<prefix>sub\\s+)(?P<main>.*)(?P<suffix>\\s*$)'	31
'^(\\w+).(?P<name>[a-zA-Z_\\-0-9]+).(?P<run>[0-9]+).*$'	270
'^[\\w]+\\.define_table\\(\\s*[\'"](?P<name>\\w+)[\'"]'	1247
'^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'	1571
'^\\s*\\#\\s*include\\s+([\\"\\<])(.+?)([\\"\\>])(.*)$'	1580
'(\\d\\d?):(\\d\\d)(:(\\d\\d))? *([aApP]\\.?[mM]\\.?)?$'	497
'(zc.buildout|setuptools)-\\d+[.]\\d+\\S*-py\\d.\\d.egg'	313
'^\\# Regexp Chunk Parsing Grammar[\\s\\S]*F-score:.*\n'	1248
'(?:aka|birth name) (<em>")(.*?)"(<br>|<\\/em>|<\\/td>)'	1469
'(?P<proc_pname>\\w+)=(?P<proc_pval>".*?"|\'.*?\'|\\w+)'	1258
'(\\d+)\\s+\\w+\\s+(\\w+)\\s+(\\w+)\\s+\\w+\\s+(\\w+).*'	1205
'^R(?P<reps>\\d+)/(?P<start>[^P][^/]*)/(?P<end>[^P].*)$'	1571
'(?:int|char)(?:\\s+\\*?\\s*|\\s*\\*?\\s+)([a-zA-Z_].*)'	1495
'.*Received new cluster view.*\\|([0-9]+). \\[(.*)\\].*'	1570
"^([A-Za-z '\\(\\)]+) (\\([0-9A-F]+,[0-9A-F]+\\)) (.*)$"	1432
'(<font face=arial size=2>)(.*)(<\\/font><br></td><td*)'	110
'(<[\\s]*script[^>]*>[\\s\\S]*?<\\/[\\s]*script[\\s]*>)'	168
'<a href="http://ad.doubleclick.net.*?;id=(co[0-9]{7});'	1469
'\\A\\s*(?:\\.\\..*\n)*\\s*----+[ ]*\n(.*)\n----+[ ]*\n'	1470
'\n        \\(CODE .*\\)\n        |\\(ID .*\\d\\)\n    '	1248
'^\\s*(.*)\\([0-9A-Fx]+,[0-9A-F]+\\)\\s+([1-3C]+).*\\s*$'	1432
'\\A[\t ]*([\\w\\.\\/]+)\\:(([0-9]+))?(\\:([0-9]+))?\\:?'	649
'WARN: [\\w.]+/\\w+/[0-9.]+[ab][0-9]+/.*release.* exists'	566
'(?P<pre>.*)/ephox/(?P<package>.+)/(?P<module>.+?)\\.js$'	1478
'(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'	1170
'^\\s*(else.*|end\\s*|elsif.*|rescue.*|when.*|ensure.*)$'	407
'([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$'	548
'(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'^([a-zA-Z0-9 :]*)!(.*)!(.*)!([<>].*)!([0-9]+)!([0-9]+)$'	12
'[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'	758
'(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'	539
'\\s*.*#\\s*.*define\\s.*SQLITE_VERSION\\W*"([\\d\\.]*)"'	1580
'(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'	310
'^(?P<train>[\\w\\.]+)\\s*(\\,\\s*(?P<test>[\\w\\.]+))?$'	1488
'#\\s*wxGlade:\\s*([\\w:]+)::(\\w+) <event_handler>\\s*$'	602
'.*frame rate differs from container frame rate: 29.97.*'	53
'\\<\\<\\s*(?P<var_name>.*?):(?P<var_type>.*?)\\s*\\>\\>'	423
'<meta property="og:title" content="(?P<title>[^"]*)" />'	1181
'^(\\s+arrayObject\\w*\\s*=\\s*[(])[(]PyObject\\s*[*][)]'	356
'^\\s*(var\\s+)?[A-Za-z0-9_]+\\s*[=:]\\s*function\\s*\\('	1426
'(?P<repeat> *[(]?[ ,0-9]*[)]? *)(?P<dtype>[A-Za-z0-9.]*)'	356
'^\\s*_*version\\s*_*\\s*=\\s*["\\\']([^"\\\']+)["\\\'].*'	1621
'^\\s*Private Creator Identification\\s*([A-Z0-9_]+)\\s*$'	1432
'^\\s*CONVERT_STRICT_MODE_ARG_CHECKED\\((\\w+), (\\d+)\\)'	534
'(?i)addVariable\\(\\"video\\"\\s*,\\s*\\"([^\\"]*)\\"\\)'	386
'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'	1300
'(?:ResultBody"><br /><br />(.*?)&nbsp;)|(?:<b>(.*?)</b>)'	539
"[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))"	1247
'(?m)(?s).*<terms.*<locale[^>]*xml:lang="([^"]+)"[^>]*>.*'	796
'0x([a-zA-Z0-9]+)\\s*0x([a-zA-Z0-9]+)\\s*0x([a-zA-Z0-9]+)'	697
'^Unit +([01])- \\[ *(-?\\d+)- *(-?\\d+)\\] \\[(\\w+)\\]$'	1302
'\\s*(\\d+)\\s+job\\(s\\) submitted to cluster\\s+(\\d+)*'	1205
'^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\) (.*) [A-Z][A-Z] [0-9]$'	1432
'ed2k://\\|file\\|([^|]*)\\|(\\d+)\\|([a-fA-F0-9]{32})\\|'	1569
'(?P<repeat>^[0-9]*)(?P<dtype>[A-Za-z])(?P<option>[!-~]*)'	332
'^{(?P<w>[^()[\\]][^()[\\]]*?)\\((?P<n>[^()\\[\\]]+)\\)}$'	1247
'(--(?P<key>\\S*)[=](?P<value>\\S*))|(--(?P<option>\\S*))'	1459
'(this|last)\\s*(second|minute|hour|day|week|month|year)$'	1258
'(\\d+\\s)?(\\w+?\\.?\\s\\d+:\\d+)(.\\d+)?(\\d+(.\\d+)?)*'	1535
"version\\s*=\\s*'(\\d+)\\.(\\d+)\\.(\\d+)([a-zA-Z0-9]*)'"	531
".*thumbnail:\\s*'(http://[^/]+/ThumbnailServer2[^']+)'.*"	200
u'(([a-zA-Z_][a-zA-Z0-9_]*)?:)?([a-zA-Z_][a-zA-Z0-9_-]*)?'	55
'\\[I\\] (.*) \\((.*)@([0-9]+)/([0-9]+)/([0-9]+)\\): (.*)'	225
'(?P<base>.*?)(?P<keyword>_append|_prepend)(_(?P<add>.*))?'	1143
'^GlueCESEBindGroupCEUniqueID: (.*:.*/jobmanager-.*?)-(.*)'	1205
'<a(.*?)href="(.*?)"(.*?)\xd7\x94\xd7\x91\xd7\x90(.*?)</a>'	126
'(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'	1192
u'((; *if .*)? \\{__pyx_filename = .*goto __pyx_L\\w+;\\})'	1621
'^([A-Z]+)\\s+http://([a-zA-Z0-9\\-\\.]+):?(\\d*)(.*) HTTP'	1548
'^\\s*Attribute [Nn]ame\\s+Tag\\s+Type\\s+Description\\s*$'	1432
'([a-zA-Z_][a-zA-Z0-9_]*)((?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)$'	550
'### f90: Note: LD_RUN_PATH\\s*= (?P<lib_paths>[^\\s.]*).*'	356
"^\\s*synchronous_standby_names\\s*=\\s*'([^']*)'\\s*#?.*$"	1520
'^\\s*CONVERT_PROPERTY_DETAILS_CHECKED\\((\\w+), (\\d+)\\)'	534
'<!-- START_TRAVERSAL_MATCHERS.*END_TRAVERSAL_MATCHERS -->'	1244
'<!-- START_NARROWING_MATCHERS.*END_NARROWING_MATCHERS -->'	1244
u'(?i)\\/*((@[^\\s:]*)|(\u56de\u590d@[^\\s:]*:))[:\\s\\/]*'	1139
'(?ims)class=.redirectText.>\\s*<a\\s*href=./wiki/([^"/]+)'	539
'/devices/.*/([0-9a-fA-F]{4}):17EF:6009\\.([0-9a-fA-F]{4})'	760
'(!?)\\[(?P<caption>.*?)\\]\\(/?files/(?P<location>.*?)\\)'	1580
'\\s+(?:public|static|private|final)[\\w\\s]*?(\\w+)\\s*\\('	407
'(?P<repeat>\\d+)?P(?P<dtype>[A-Z])(?:\\((?P<max>\\d*)\\))?'	332
'^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'	1432
'(?s)\\[\\[math( +format=".*?")?\\]\\](.*?)\\[\\[math\\]\\]'	138
'^[^\'"]*[\'"]([^\'"]*)[\'"]\\s*:\\s*[\'"]([^\'"]*)[\'"].*$'	1247
'^(?P<key>[^ =]+) *= *[\\"\']?(?P<value>[^\\"\']*)[\\"\']?$'	826
'<img src="(http://images.craigslist.org/[\\S]*\\.jpg)" alt'	175
'(remote: )?([\\w\\s]+):\\s+(\\d+)% \\((\\d+)/(\\d+)\\)(.*)'	599
'Number\\s*of\\s*fields\\s*with\\s*differences\\s*=\\s*0\\D'	1571
'^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'	506
'^\\(([0-9a-fx]+),([0-9a-fx]+)\\) (.*) ([US/]+) ([1-9n-]+)$'	1432
'.*?(?=(\\?format=.+?(?=\\?|&|$)|\\&format=.+?(?=\\?|&|$)))'	436
'property="(video:release_date|og:title)" content="([^"]*)"'	1469
'^\\s*0x([0-9a-fA-F]+)\\s+0x([0-9a-fA-F]+)\\s+([0-9]+)\\s*$'	1250
'^[A-Za-z0-9 .#(),_/-]+ +\\([0-9A-F]+, ?[0-9A-F]+\\) +(.*)$'	1432
'<\\s*a id\\="CURRENT"\\s*href="(.*?)"[^>]*>.*?<\\s*/a\\s*>'	498
'.*mozilla\\.(org|net|ru|co|it|me|de|hu|pt|at|uk|rs|la|tv)$'	1644
'^(?P<Alias>\\s\\s\\-.*?)\\s{2,}(?P<Desc>.*?)(?=^\\s\\s\\-)'	873
'\\<link [^>]*rel="stylesheet"[^>]*\\${portal_url}/([^"]*)"'	1377
'^\\s*CONVERT_NUMBER_ARG_HANDLE_CHECKED\\((\\w+), (\\d+)\\)'	534
'^ssh: connect to host .* port .*: Connection timed out\\r$'	560
'#define __NR_(\\w*)\\s*\\(__NR_Linux\\s*\\+\\s*([0-9]*)\\)'	1484
'(?s)\\[\\[code( +format=".*?")?\\]\\](.*?)\\[\\[code\\]\\]'	138
'^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'	190
'<th[^>]*>Elapsed time \\(sec\\)</th>\n\\s*<td[^>]*>([^<]*)'	705
"([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"	1247
'Mozilla (Firefox|Iceweasel|Fennec)\\b[^ ]* ((\\d+)\\.\\S*)'	1007
'^\\s+Table\\s+C.[0-9A-Za-z-]+\\s*[-]*\\s*([A-Z/\\s-]+)\\s*$'	1432
'^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'	602
'([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'	356
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+[\\?\\#\\d\\w]*)[\\\'"]?\\)'	1240
'<dt class="quote">(.*)<\\/dt><dd class="author">(.*)<\\/dd>'	175
'((?P<minutes>\\d[\\d.]*)mn)?\\s*((?P<seconds>\\d[\\d.]*)s)?'	962
'^\\(([0-9a-fA-F]+),([0-9a-fA-F]+) to ([0-9a-fA-F]+)\\)(.*)$'	1432
'http(s)?://(www.)?youtube.(com|co.uk|ca)?/watch(.*)\\?v(.*)'	539
'^\\s*inet addr:(?P<address>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s.+$'	1469
'(?P<pid>\\d+)\\s+open\\("(?P<name>[^"]*)", (?P<mode>[^,)]*)'	1170
'^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'	1432
'^\\-?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)((E|e)\\-?[0-9]+)?$'	729
'boost::statechart::state_machine<\\s*(\\w*),\\s*(\\w*)\\s*>'	592
'^\\s*CONVERT_ARG_HANDLE_CHECKED\\((\\w+), (\\w+), (\\d+)\\)'	534
'(?P<key>\\w+)=(?P<value>[^\\s]+)\\s*(?:\\((?P<data>.*)\\))*'	205
'^\\s*[+-]?((\\d+(\\.\\d*)?)|\\.\\d+)([eE][+-]?[0-9]+)?\\s*$'	1247
'([a-z]*) ([\\d-]+) - ([\\d-]+) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'(<span class="k">[^<>]+</span>\\s*)<br />(<span class="k">)'	1363
'([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'	317
'^(?:(#{1,6}|\\.+ |\\++ |\\++\\. |\\-+ |\\-+\\. )\\s*)?(.*)$'	1247
'((^|\\n)[^%]*?)(\\\\input|\\\\include)\\{([\\w /\\.\\-]+)\\}'	31
'([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_:]+)\\s*\\([^)]*\\){0,1}\\s*'	498
'(?P<aname>[^\\s=]+)\\s*(=\\s*(?P<qt>"?)(?P<aval>.+)(?P=qt))?'	1249
'https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]'	1293
'^GE Medical Systems LightSpeed QX/i CONFORMANCE STATEMENT.*$'	1432
'(?i)addVariable\\(\\"sequence\\"\\s*,\\s*\\"([^\\"]+?)\\"\\)'	1181
'<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>'	1150
'^:([0-7]+) ([0-7]+) ([0-9a-f]{40}) ([0-9a-f]{40}) R([0-9]*)$'	1278
'^\\[{2}(?P<uri>[^][]*)(\\]\\[(?P<description>[^][]*))?\\]{2}'	624
'^(?P<start>\\s*)(?P<xy>[x|y]\\s+)(?P<num>\\d+)(?P<end>\\s*)$'	600
'^\\(([0-9a-fx]+),([0-9a-fx]+)\\) (.*) ([A-Zor ]+) ([1-9n-]+)$'	1432
'Schwanksta pushed to (?P<branch>(.*)) at (?P<repository>(.*))'	170
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*[^ \\t\\n\\r\\f\\v"\\\']*'	974
'.*?(?:(private|protected) +)?function +(\\w+)(\\(.*\\)) *\\{$'	407
'self->operator(\\+|-|\\*|/|<|>=|==|\\[\\])\\s*\\(([^\\)]*)\\)'	357
'<link\\s*rel=[\'"]stylesheet[\'"]\\s*href=[\'"]([^=>]*)[\'"]>'	1007
'^\\s*([0-9a-fA-F]+):\\s*(?:[0-9a-fA-F][0-9a-fA-F] )+\\s*(.+)$'	1250
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=]?)\\s*(?P<value>.*)$'	1108
'^[A-Za-z0-9 -]+ [0-9A-Z]+,[0-9A-Z]+ VR = [A-Z][A-Z], VM = .*$'	1432
'.* line (?P<line>\\d+), col (?P<near>.+?)?, (?P<error>.+?)\\.'	304
'([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'	407
'closes:\\s*(?:bug)?\\#?\\s?\\d+(?:,\\s*(?:bug)?\\#?\\s?\\d+)*'	290
'^([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)\\((.*)\\)'	1054
'<input value=\\\\042(.*?) \\(.*?@(-?\\d+\\.\\d+,-?\\d+\\.\\d+)'	456
'^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'	693
'^\\s*Private Creator Identification\\s*\\("?(.*)"?\\)\\)?\\s*$'	1432
':(\\d+) (\\d+) (\\w+) (\\w+) ([A-Z])(\\d+)?\t(.*?)((\t(.*))|$)'	1278
'\\[((\\d+(\\.\\d*)?)([wdhms]?)/)?(\\d+(\\.\\d*)?)([wdhms])\\]$'	173
'.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'	1489
'==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'	1007
'(?P<protocol>^gedit:\\/\\/)(?P<file>.*?)\\?line=(?P<line>.*?)$'	407
'(?:http://)?(?:www\\.)?metacafe\\.com/watch/([^/]+)/([^/]+)/.*'	386
'(warning:)?(?:.*:)?\\s*([-0-9]+)\\s*:\\s*([-0-9]+)\\s*:\\s*(.*)'	1621
'^[ \\t\\*]*END[ \\t]+LICENSE[ \\t]+BLOCK[ \\t]*\\*+[ \\t]+\\*+/'	119
'^(\\((\\w+)\\)(-\\[(\\w*):(\\w+)\\]->\\((\\w+)\\))?)(\\s+(.*))?'	358
'Source/WebKit2/UIProcess/API/gtk/WebKit(?!.*Private\\.h).*\\.h$'	1199
'boost::statechart::transition<\\s*([\\w:]*)\\s*,\\s*(\\w*)\\s*>'	592
'((https?):((//)|(\\\\\\\\))+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)'	472
'(takes [\\w ]+ )(\\d+)[\\w ]*( arguments? \\()(\\d+)( given\\))'	1612
'(?P<constr>CHECK \\(.*\\))(?P<any>.*)(?P<default>DEFAULT [0|1])'	619
'-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)((cm)|(mm)|(in)|(pt)|(pc)|(px))'	729
'^(?P<csid>\\d+) (?P<user>[^\\s]+) (?P<revid>\\d+) (?P<file>.*)$'	1426
'^.* - http://www\\.urbandictionary\\.com/define\\.php\\?term=.*$'	539
"^([A-Za-z '\\(\\)]+) (\\([0-9A-F]+,[0-9A-F]+\\)) ([0-9C]+) (.*)$"	1432
'\n                <.*>_CODE\n                |\\s.*_ID\n        '	1248
'^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'	506
'\\A(?:\\..*|cylc-suite\\.db.*|log(?:\\..*)*|state|share|work)\\Z'	1571
'http://85\\.214\\.105\\.230/get_nzb\\.php\\?id=[0-9]*&section=hd'	1469
'"(?P<value>[^@&]*)"(?:@(?P<lang>[^&]*))?(?:&<(?P<datatype>.*)>)?'	55
'\\s*(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'\\s?(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'^\\s*Attribute Name\\s+Tag\\s+Type\\s+Attribute Description\\s*$'	1432
'([^@#:]*)[@:]([^#:]+)?(?::(\\d+(?:-\\d+)?(?:,\\d+(?:-\\d+)?)*))?'	1258
'(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'	190
'<li><a title=\'.*\' href="(?P<n>/html/books/.*)" target="_blank">'	123
'^\\s*//\\s*wxGlade:\\s*add\\s+((?:\\w|:)+)\\s+event handlers\\s*$'	602
'^(\\s*)#\\s*begin\\s+wxGlade:\\s*([a-zA-Z_][\\w:]*?)::(\\w+)\\s*$'	602
'(ATTRS?|ENV|TEST){([a-zA-Z0-9/_.*%-]+)}\\s*(?:=|!)=\\s*"([^"]*)"$'	722
'code-creation,([^,]+),(0x[a-f0-9]+),(\\d+),\\"(.*)\\"(?:,(\\d+))?'	464
".*Access denied for user '[\\w\\*\\!\\@\\#\\^\\&]*'@'[\\w\\.]*'.*"	772
'^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'	543
'(?:codename (.*),\\s*)?released on (\\w+\\s+\\d+\\w+\\s+\\d+)(?i)'	252
'^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'	1500
'\\<coordinates\\>(?P<la>[^,]*),(?P<lo>[^,]*).*?\\</coordinates\\>'	732
'^(?P<scheme>http|https|HTTP|HTTPS)\\://(?P<host>[^/]*)(?P<uri>.*)'	1247
'<Latitude>([\\d\\-\\.]+)</Latitude>\\s*<Longitude>([\\d\\-\\.]+)<'	506
'(?P<asset>[\\w_.:/]+)(?:\\#(?P<defname>[\\w_]+))?(\\.(?P<ext>.*))'	1268
'<TD COLSPAN="2"><font face="arial,helvetica" size=2>\\s*(.*?)</TD>'	32
'^([a-zA-Z0-9_\\\\[\\]\\{\\}\\^`\\|]+)([\\+|\\-]{2}(?![\\+|\\-])).*'	340
'(?P<name>\\S*) \\((?P<relation><<|<=|=|>=|>>) (?P<version>\\S*)\\)'	14
'^(?P<keyword>.*?)\t(?P<remainder>.*\t(?P<kind>[a-zA-Z])(?:\t|$).*)'	1583
'<blockquote><H1>.*</H1>(.*)<p></blockquote>|<H1>.*</H1>(.*)</BODY>'	1076
'(?s)\\n?\\[\\[code( +format=".*?")?\\]\\](.*?)\\[\\[code\\]\\]\\n?'	138
'#ifdef __cplusplus(?P<code>.*)#endif(\\s*//\\s*!?\\s*__cplusplus)*'	706
'^.* - http://search\\.vt\\.edu/search/person\\.html\\?person=\\d+$'	539
'^\\s*BEGIN_EVENT_TABLE\\s*\\(\\s*(\\w+)\\s*,\\s*(\\w+)\\s*\\)\\s*$'	602
'^(\\s*)#\\s*begin\\s+wxGlade:\\s*([A-Za-z_]+\\w*)??[.]?(\\w+)\\s*$'	602
'<div class="published">\\D+\\s*(\\d+)\\s(\\D+)\\s(\\d{4}).*</span>'	1494
'^([\\+\\-]?)(([0-9]+|[0-9]*[\\.][0-9]+))([eE])([\\+\\-]?)([0-9]+)$'	826
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'	1247
'(?P<all>\\{\\{\\s*include\\s+[\'"](?P<name>[^\'"]*)[\'"]\\s*\\}\\})'	1247
'^\\s*[STUDYSERIES]+\\s+\\(([0-9]+),([0-9]+)\\)\\s+([A-Za-z ]+)\\s*$'	1432
'^\\w+Attempt.*?TASK_STATUS="FAILED".*?ERROR="(?P<first_line>[^"]*)$'	542
'([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'	1051
'((^|\\n)[^%]*?)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w,\\-]+)\\}'	31
'\xd7\xaa\xd7\x90\xd7\xa8\xd7\x99\xd7\x9a: </td>[^<]*<[^>]*>([^<]*)<'	126
'-[rwx-]{9} +(\\d+) (\\d{4}/\\d\\d/\\d\\d \\d\\d:\\d\\d:\\d\\d) (.*)'	560
'^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'	919
".*Host '[\\w\\.]*' is not allowed to connect to this MySQL server.*"	772
'boost::statechart::state<\\s*(\\w*),\\s*(\\w*)\\s*,?\\s*(\\w*)\\s*>'	592
'[\\s\\S]*root[\\s]*([\\d]+)[\\s]*(?:[\\w]*[\\s]*){6}/system/b2g/b2g'	1007
'timeleft: (?P<hours>[\\d]*):(?P<minutes>[\\d]*):(?P<seconds>[\\d]*)'	1205
'([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'^.*lindenlab.com slapd\\[\\d+\\]: .*(?P<query_status>ACCEPT from IP)'	778
'^=\\?(?P<charset>[\\w\\d\\-]+)\\?(?P<code>[qb])\\?(?P<value>.*)\\?=$'	1258
'http://85\\.214\\.105\\.230/get_nzb\\.php\\?id=[0-9]*&section=moovee'	1469
'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(\\d*)x(\\d*)'	415
'^.*GE Medical Systems HISPEED ADVANTAGE CT/i CONFORMANCE STATEMENT.*$'	1432
'([A-Za-z_0-9]+)\\((.*?)\\)(?:(?:\\s+->\\s+)\\((.*?)\\))?(?:\\s+(.*))?'	896
'^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'	624
'^(\\d+):(\\d+):(\\d+),(\\d+)\\s*-->\\s*(\\d+):(\\d+):(\\d+),(\\d+).*$'	692
'((?P<title>.+)(-)?)?\\s+(?P<season>\\d)(?P<episode>\\d\\d)(?!\\d)\\s*'	506
'NIST score = ([0-9.]+)\\s+BLEU score = ([0-9.]+)\\s+for system "(.*)"'	764
'^def\\s+(?P<name>(?:[a-zA-Z0-9]\\w*)|(?:_[a-zA-Z0-9]\\w*))\\(\\)\\s*:'	1247
'(?P<type>[^:]*)://((?P<user>.+)@)?(?P<location>[^;]+)(;(?P<parm>.*))?'	1143
'(\\$[\\$\\(\\)]|\\$[_a-zA-Z][\\.\\w]*|\\${[^}]*}|\\s+|[^\\s\\$]+|\\$)'	743
'([A-Za-z_0-9]+)\\((.*?)\\)(?:(?:\\s+->\\s+)\\((.*?)\\)(?:\\s+(.*))?)?'	1300
'Y(\\d+) N(\\d+)\\s*(?:\\w(\\d+))*\\s*(?:\\w(\\d+))*\\s*(?:\\w(\\d+))*'	182
'(ATTR|ENV|IMPORT|RUN){([a-zA-Z0-9/_.*%-]+)}\\s*(=|\\+=)\\s*"([^"]*)"$'	722
' ( " ( "" | [^"]+ )* " ) | ( [a-z_][a-z0-9_]* ) | [.] | (?P<err> .)  '	1520
'rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$'	1580
'^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$'	1420
'Copyright [\\d-]*200[8-9] the V8 project authors. All rights reserved.'	1300
'^[A-Za-z0-9 ._>]+ \\([0-9A-F]+,[0-9A-F]+\\) [0-9] [A-Z][A-Z] [0-9] .*$'	1432
'([\\d\\.]*)user ([\\d\\.]*)system (\\d*):([\\d\\.]*)elapsed (\\d*)%CPU'	560
'(?i)(I|Bli|Pi)nkie(Pie)?(Bot)?, is (?P<pony>.*)( the)? best pony(\\?)?'	539
'<(?P<tag>(input|meta|link|hr|br|img|param))(?P<any>[^\\>]*)\\s*(?<!/)>'	1247
'Job submitted with jobid: +(\\w+://([a-zA-Z0-9.-]+)(:\\d+)?(/.*)?/\\d+)'	1205
'#define JAXER_BUILD_ID "([0-9]+)\\.([0-9]+)\\.([0-9]+)\\.([x0-9]+)(.*)"'	119
'^\\s*CONVERT_NUMBER_CHECKED\\(\\w+, (\\w+), (\\w+), args\\[(\\d+)\\]\\)'	534
'^([A-Za-z0-9 -]+) ([0-9A-Z]+),([0-9A-Z]+) VR = ([A-Z][A-Z]), VM = (.*)$'	1432
'(?P<pid_clone>\\d+)\\s+(clone|fork|vfork)\\(.*\\)\\s*=\\s*(?P<pid>\\d*)'	1170
'(?P<pbs>\\\\*)(?P<escSeq>(?P<inv>[\\^])?\\\\(?P<pP>[pP]){(?P<id>[^}]*)})'	866
'^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)(\\.([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*))*$'	1495
'[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b\n]*|^[ \t\r\x0c\x0b]+|[ \t\r\x0c\x0b]+$'	313
'<p>(?:\\s|<br\\s*/?>)*\\x07/sf\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07/sf\\x07'	682
'^\\s*0x([0-9a-fA-F]+)\\s+0x([0-9a-fA-F]+)\\s+([a-zA-Z])\\s+([0-9]+)\\s*$'	1250
'\\w+(::\\w+)*\\s*(\\w+::)*::(?P<tag>\\w+)::\\w+\\(const (?P<event>\\w+)&'	592
'^.*?([0-9/]{8}\\s+[0-9:]{8}):\\s+?(.+)\\schanged\\sthe\\sgroup\\sicon.*$'	1027
'^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$'	190
'^\\s*([Table ]*[A-Z1-9.:-]+)\\s+([A-Za-z -]+)\\s+\\(([A-Z0-9_]+)\\)\\s*$'	1432
'(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'	31
'Scheduled ([0-9]*) items in [0-9.]* = ([0-9.]*) match \\+ ([0-9.]*) place'	506
'myth://((?P<group>.*)@)?(?P<host>[a-zA-Z0-9_\\.]*)(:[0-9]*)?/(?P<file>.*)'	506
'^(\\d+):(\\d+):(\\d+)\\.(\\d+)\\s*\\,\\s*(\\d+):(\\d+):(\\d+)\\.(\\d+).*$'	692
'.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$)|(\\.txt$)|(\\.rst$))'	1232
'<MEMBER name="\\??([^"]+)" wn="([^"]*)"[^>]+>|<VNSUBCLASS ID="([^"]+)"/?>'	1248
'^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'	165
"INFO: T.* (has been created by T.* at this point|is program's main thread)"	1007
'(www\\.(?!\\.)|[a-z][a-z0-9+.-]*://)[^\\s<>\'\\"]+[^!,\\.\\s<>\\)\'\\"\\]]'	18
'[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'	681
'^I/(stdout|stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'	1007
'^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s*$'	1432
u'(?:[-*/%^&|<>!]=?|&&|\\|\\||<<|>>>|={1,3}|!==?)\\s*(?<!\\+)(\\+)[\\w(\\[]'	304
'^>*\\s*Include [`\'"]*([A-Za-z/ -]*)[\'"]* \\(*Table [A-Z0-9a-z-.]+\\)*.*$'	1432
'\\+?"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"|\\[[^]\\\\]*(?:\\\\.[^]\\\\]*)*\\]|\\S+'	539
'@/(?P<a>\\w*)/(?P<c>\\w*)/(?P<f>\\w*(\\.\\w+)?)(/(?P<args>[\\w\\.\\-/]+))?'	1247
'\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'	407
'^\\s*([tlrbhwxy])\\s*([=%<>^_])\\s*([tlrbhwxy]?)\\s*(\\d*)\\s*#(\\d+)\\s*$'	498
'(?P<source>.+) \\((?P<version>.*)\\) (?P<dist>.+); urgency=(?P<urgency>.+)'	290
'^http://(?:www.)?(.*?)(?:\\:[0-9]+)?/.*/([0-9B][0-9A-Z]{9})(?:[^0-9A-Z]|$)'	913
'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263
'(?:http://)?(?:[a-z0-9]+\\.)?photobucket\\.com/.*[\\?\\&]current=(.*\\.flv)'	386
'<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0">(.+?)</a>'	1150
"^\\s*([A-Za-z0-9 '/-]+)\\s+\\(([0-9]+),([0-9A-Fa-fx]+)\\)\\s+([1-3])\\s+.*$"	1432
'([A-Za-z0-9_*&]+\\s+)+([&*~A-Za-z0-9_:]+)\\s*\\([^)]*\\)\\s*(const)*\\s*\\{'	498
'(?:string:\\$\\{portal_url\\}/([^."]+.js)")|(?:\\<link href="([^."]*.css)")'	1377
'vertex\\s*([\\d\\-+\\.EeDd]+)\\s*([\\d\\-+\\.EeDd]+)\\s*([\\d\\-+\\.EeDd]+)'	208
'(\\d{4})-(\\d{2})-(\\d{2}) - (\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'	317
'([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'	356
'/(.*)/hod-logs/(.*)/.*-.*-([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9]).*$'	990
'Audio codec (\\w+) channels (\\d+) samplerate (\\d+) bitspersample (\\d+).*'	1437
'^\\(([0-9a-fx]+),([0-9a-fx]+)\\) (.*) ([A-Zor ]+) ([1-9n-]+) (RET|Retired)$'	1432
'<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'	98
'<script>document\\.domain="xunlei\\.com";var btResult =(\\{.*\\});</script>'	1569
'\xd7\xa9\xd7\x9d \xd7\x94\xd7\x97\xd7\x95\xd7\xa7: </td>[^<]*<[^>]*>([^<]*)<'	126
'myth://((?P<group>.*)@)?(?P<host>[0-9\\.]*)(:(?P<port>[0-9]*))?/(?P<file>.*)'	506
'(?P<file>[-/\\.\\w<>]+):((?P<line>\\d+):)?(\\d+:)? warning: (?P<msg>[^ ].*)$'	635
'^\\s+(?P<address>[0-9a-fA-F]+)\\s+(?P<symbol>.*)\\s+\\((?P<module>[^)]*)\\)$'	1576
'/lib/modules/[^/]+/updates/DD/(?P<moduledir>.*/)?(?P<modulename>[^/.]+).ko.*'	1051
'[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'	681
'^\\s*(.) (\\[?[\\w\\s\\.]+\\]?)\\s+(.+) -> ([/\\w_\\+\\.-]+)(\t \\(.*\\)?$)?'	599
"^area_at\\(([0-9]+),([0-9]+),([0-9]+),([0-9]+)\\).should_contain_text '(.*)'"	107
'^.*?([0-9/]{8}\\s+[0-9:]{8}):\\s+?(.+)\\schanged\\sthe\\ssubject\\sto\\s(.*)$'	1027
'(?:[=!]=|is(?:\\s+not)?)\\s*type(?:s.\\w+Type|\\s*\\(\\s*([^)]*[^ )])\\s*\\))'	1025
'\\s*<tr>\\n(\\s*<td></td>\\n){2}\\s*(<td></td>){2}<td>&emsp;</td>\\n\\s*</tr>'	324
"'?([^']*)'?!((\\$([A-Za-z]+))?\\$([0-9]+)(:(\\$([A-Za-z]+))?(\\$([0-9]+)))?)$"	729
"voteSelected\\(\\'(\\d*)\\',\\'(\\d*)\\',\\'(\\d*)\\',\\'(.*)\\',\\'(\\d*)\\'"	182
'^\\s*<p.*?begin="(.*?)\\.([0-9]+)"\\s+.*?end="(.*?)\\.([0-9]+)"\\s*>(.*?)</p>'	1150
'^\\s+inet6 addr:\\s*(?P<ipv6addr>[0-9a-fA-F\\:\\/]+)\\s+Scope:(?P<scope>\\S+)'	826
'<p>(?:\\s|<br\\s*/?>)*\\x07(\\d+)\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07(\\d+)\\x07'	682
'([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'	317
u'():\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'(?P<indent>^\\s*)(?P<entity>(class|module|def)\\s+)(?P<name>.*)(?P<args>\\s*$)'	31
'^(perfdata_spool_dir|perfdata_file|perfdata_spool_filename)\\s*=\\s*(.*?)\\s*$'	317
'(((?P<name1>.+?)(\\s*,\\s*)((".*")|(left|right)|([0-9]{1,2}%)))|(?P<name2>.+))'	190
'(?P<protocol>[^\\s:/]+)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<id>\\S*)'	1184
'Release (?P<release>\\w+).*\\(HW=(?P<radio>\\d+):(?P<bb>\\d+)(?P<var>[^)]*)\\)'	1626
'<span id="clip-date" style="display:none">[^:]*: (.*?)( \\([^\\(]*\\))?</span>'	1181
'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(.*?),\\s*(\\d*)x(\\d*)'	415
'^\\s*(?P<prefix>\\\\(sub)*section{|\\\\paragraph{)(?P<main>.*)(?P<suffix>}.*$)'	31
'^\\s*((public|static|private|protected)\\s+)*(class|struct)\\s+([A-Za-z0-9_])+'	1426
'.*audio streams (\\d+) video streams (\\d+) chapters (\\d+) subtitles (\\d+).*'	1437
'^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'	1426
'\\s*\\[\\s*(\\d*)\\s*:\\s*(\\d*)\\s*\\]\\s*"([^"]+)"\\s*:\\s*"([^"]+)"\\s*;\\s*'	1631
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(twitter).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'\\s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)'	1570
'(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'	498
"^[A-Za-z0-9\xc2\xb5 /()'>-]+\\s+\\([0-9A-Fx]+,[0-9A-F]+\\)\\s+[1-3][C]*\\s+(.*)$"	1432
'([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	1087
'[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'	1247
'(-----BEGIN \\w*\\s*CERTIFICATE-----(\\w|\\W)+-----END \\w*\\s*CERTIFICATE-----)'	1242
'[\\w\\W\\|\\-\\s]*/usr/bin/nova-guest --flagfile=/etc/nova/nova.conf[\\W\\w\\s]*'	772
'^\\s*(?P<user>\\S+)\\s*(?P<name>\\S+)\\s*(?P<pid>\\d+)\\s*(?P<usage_bytes>\\d+)$'	1007
'\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'	522
'[\\w\\W\\|\\-\\s\\d,]*nova-guest --flagfile=/etc/nova/nova.conf nova[\\W\\w\\s]*'	772
'^([A-Za-z0-9 ._>]+) \\(([0-9A-F]+),([0-9A-F]+)\\) [0-9] ([A-Z][A-Z]) ([0-9]) .*$'	1432
'^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s*$'	1432
'(-----BEGIN \\w*\\s*PRIVATE KEY-----(\\w|\\W)+-----END \\w*\\s*PRIVATE KEY-----)'	1242
'SystemName="([A-Fa-f0-9]{16})",DeviceID="([A-Fa-f0-9]{40})".*InstanceID="(.{56})"'	225
'(\\d+\\.?\\d*)\\s*(second|minute|hour|day|week|month|year|[hdwmy])s?\\s*(?:ago)?$'	1258
'((?P<h>[0-9]+))([^0-9 ]+(?P<m>[0-9 ]+))?([^0-9ap ]+(?P<s>[0-9]*))?((?P<d>[ap]m))?'	1247
'.*Video codec ([\\w-]+) width (\\d+) height (\\d+) profile (\\d+) fps ([\\d.]+).*'	1437
"^Function.*has unrooted.*of type.*live across GC call ('?)(.*?)('?) at \\S+:\\d+$"	1007
'^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'	1432
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center) +(?P<w>\\d+px)\\]\\]'	1247
'[r][g][b][a][(]\\d{1,3}[,][ ]*\\d{1,3}[,][ ]*\\d{1,3}[,][ ]*(\\d+|\\d*\\.\\d+)[)]'	1025
'\\s*Project\\("{(\\S+)}"\\) = "(\\S+)", "tools\\\\\\S+.vcproj", "\\{(\\S+)\\}"\\s*'	704
'.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'	542
'^\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?(?:\\.post\\d+)?(?:\\.dev\\d+)?$'	405
'^W:\\s*[0-9,]*:[A-Za-z0-9_]*.make: Arguments number differs from overridden method'	1384
'\\s*([a-zA-Z_][-.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n<>]*))?'	413
u'("""[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*""")|("[^"\\\\]*(?:\\\\.[^"\\\\]*)*")'	55
'(?ims)(.*ENTITY.*?(?P<entity_key>\\b[a-z09].*?\\b) .*\\"(?P<entity_value>.*)\\").*'	743
'^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'	539
'myth://((?P<group>.*)@)?(?P<host>[\\[\\]a-zA-Z0-9_\\-\\.]*)(:[0-9]*)?/(?P<file>.*)'	506
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(facebook|fb).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'^([a-zA-Z0-9_\\-]+)([\\.][a-zA-Z0-9_\\-]+)+([:][0-9\\~\\(\\)_\\-]*)+([\\.][0-9]+)*$'	548
'^(?P<user>[^:]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?$'	1247
'(?P<indent>^\\s*)(?P<entity>(class|def)\\s+)(?P<name>[a-zA-Z0-9_]+)(?P<args>.*:.*$)'	31
'.*?application/vnd.openstack.reddwarf(\\+.+?)?;version=(?P<version_no>\\d+\\.?\\d*)'	993
'^class\\s*(.*_EXPORT|\\s*) (vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s*(vtk[^ \n\\{]*)'	557
'State\\s+(?:Senator|Representative)\\n(.*?)\\n([R|D]).*?[\\n]*(\\d+)(?:st|nd|rd|th)'	182
'^\\s*vtkType(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*;'	557
'(\'[^\']*\'|"[^"]*"|//?|\\(\\)|==?|[/.*\\[\\]\\(\\)@])|([^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1621
'(\\d{4})-(\\d{2})-(\\d{2}) - (\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'((?:^[\\\'].*[\\\'])|(?:^[\\"].*[\\"]))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
u'<form enctype="multipart/form-data" action="(.*?)" method="post" id="user_form".*?>'	1158
'<[\\s]*script(?P<attributes>[^>]*)>[\\s]*(?P<data>[\\s\\S]*?)<\\/[\\s]*script[\\s]*>'	168
'^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*\\.)*[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*\\.[a-zA-Z]{2,4}$'	820
'^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'	803
'^(?:https?://)?(?:\\w+\\.)?facebook.com/video/video.php\\?(?:.*?)v=(?P<ID>\\d+)(?:.*)'	386
'^gstreamer(?P<version>[0-9\\.]+)\\((?P<kind>.+?)-(?P<data>.+?)\\)(\\((?P<opt>.*)\\))?'	290
'^\n                                ((?:\\s*\\#.*))\n                                $'	1256
'\\s*[ur]{0,2}(?:"""[\\s\\S]*?"""|"[^"\n]+?"|\'\'\'[\\s\\S]*?\'\'\'|\'[^\'\n]+?\')\\s*'	1248
'^\\$?(\\d{1,3},?(\\d{3},?)*\\d{3}(\\.\\d{0,2})?|\\d{1,3}(\\.\\d{0,2})?|\\.\\d{1,2}?)$'	977
u'("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s=]+)'	1415
'\n^\ncreate \\s+ (?: or \\s+ replace \\s+ )?\nfunction ( [^(]+ )\n[(] ( [^)]* ) [)]\n'	1520
u'    geom = models.PolygonField\\(([^\\)])*\\)\\n    objects = models.GeoManager\\(\\)'	1158
'([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'(.*\\s*)(<terms>)(\\s*\n\\s*)(<locale [^>]+>)(.*)(</locale>)(\\s*\n\\s*)(</terms>)(.*)'	796
'^(([a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$'	924
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^\\s"\\\'=<>`]*))?'	1580
'^(?P<t>\\S.*?)?(?:\\s+\\[(?P<a>.+?)\\])?(?:\\s+(?P<k>\\S+))?(?:\\s+(?P<p>popup))?\\s*$'	1247
'\\([ ]*-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)([ ]+-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)){2}[ ]*\\)'	729
' border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>'	1096
'^\\s*void\\s*PrintSelf\\s*\\(\\s*ostream\\s*&\\s*os*\\s*,\\s*vtkIndent\\s*indent\\s*\\)'	557
'^W:\\s*[0-9,]*:[A-Za-z0-9_]*.configure: Arguments number differs from overridden method'	1384
'^class(\\s+[^\\s]*_EXPORT)?\\s+(vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s+(vtk[^ \n\\{]*)'	557
'(?P<prefix>^diff(\\s-[a-z]{1})?(\\s-[a-z]{1})?(\\s-[a-z]{1})?)(?P<main>.*)(?P<suffix>$)'	31
'(\\d{4}-\\d{2}-\\d{2} |)(\\d{2}:\\d{2}:\\d{2}) \\[([A-Z]+)\\] (?:\\[Minecraft\\] )?(.*)'	1463
'^\\s*(?:[87][- ]?[- \\(]?[0-9]{3}[- \\)]?[- ]?)?[0-9]{3}[- ]?[0-9]{2}[- ]?[0-9]{2}\\s*$'	44
'(?P<replace>(?P<type>>((!?@?)|\\|)?)\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	896
'^(?P<position>[cj]?(?:ob|fl|fi|fe|fn))=\\s*(?:\\((?P<id>\\d+)\\))?(?:\\s*(?P<name>.+))?'	1576
'(?P<replace>(?P<type><((!?@?)|\\|)?)\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	896
'(\\w\\w:\\w\\w.\\w) "[^"]+ \\[\\w{4}\\]" "[^"]+ \\[(\\w{4})\\]" "[^"]+ \\[(\\w{4})\\].*'	1501
'<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'	1488
'^\\s*(?P<new_window>\\+?)\\s*(?P<dots>\\.*)(?P<absolute_path>(?:\\w+)?(?:\\.\\w+)*)\\s*$'	1567
'\\s*([a-zA-Z0-9_]+)\\s+([a-zA-Z0-9_]+)=([0-9]+)\\(([ a-zA-Z0-9_]*),([ a-zA-Z0-9_]*),*\\)'	498
'QtGui\\.QApplication.translate\\(.*?, (.*?), None, QtGui\\.QApplication\\.UnicodeUTF8\\)'	913
'^.*: \\[GC (?P<start_size>[0-9]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'	440
'(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'	1184
'^(-{3}-*)(?::(?P<c>[a-zA-Z][_a-zA-Z\\-\\d]*)(?:\\[(?P<p>[a-zA-Z][_a-zA-Z\\-\\d]*)\\])?)?$'	1247
'\\A(?P<head>.*?)(?P<escape>\\\\*)(?P<symbol>\\$\\{(?P<name>[A-z_]\\w*)\\})(?P<tail>.*)\\Z'	1571
'\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'	1494
'^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'	1432
'^(([^:/?#]+):)?(//(([^:]+)(:(.+))?@)?([^/?#:]*)(:([0-9]+))?)?([^?#]*)(\\?([^#]*))?(#(.*))?'	826
'(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)'	602
'^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'	1024
'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Audio:\\s*(.*?),\\s*([0-9\\.]*) (\\w*),\\s*([a-zA-Z:]*)'	415
'^\\s*(?://\\s+-#-(?P<annotation1>.*)-#-\\s*)|(?:/\\*\\s+-#-(?P<annotation2>.*)-#-\\s*\\*/)'	1216
'Parent sees throughput for[\\s]+([\\d]+)\\s+([-\\w]+[-\\w\\s]*)\\=[\\s]+([\\d\\.]*) KB/sec'	560
'^\\s*([A-Z.a-z -]+[1-2]?)\\s+([0-9A-Z]+)\\s+([0-9A-Zx]+)\\s+([1-3])\\s+([A-Z][A-Z])\\s+.*$'	1432
'(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'(?<!\\w|\\<|/|:)/[^\\s/]([^/]*[^\\s/])?/(?!\\w|/|:)|(?<!\\w)_[^\\s_]([^_]*[^\\s_])?_(?!\\w)'	18
'^\\s+def\\s+([A-Za-z_]+\\w*)\\s*\\(.*\\):\\s*#\\s*wxGlade:\\s*(\\w+)\\.<event_handler>\\s*$'	602
'^class ([^,]*), addr (\\w\\w:\\w\\w.\\w+), pci id (\\w{4}:\\w{4}) \\(sub (\\w{4}:\\w{4})\\)'	1501
'^>.*([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'	681
'Children see throughput for[\\s]+([\\d]+)\\s+([-\\w]+[-\\w\\s]*)\\=[\\s]+([\\d\\.]*) KB/sec'	560
'^([\\s>]*)([0-9]+),([0-9A-Fx]+)\\s+([A-Z][A-Z])\\s+([A-Za-z0-9.?(,)> -]+)\\s+([0-9n-]+)\\s*$'	1432
'[ \t\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\n]*=[ \t\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n]*))?'	413
'^(\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?(-(\\d+(\\.\\d+)?))?$'	1594
'^(?P<neg>-?)(?P<h>\\d\\d):(?P<m>\\d\\d):(?P<s>\\d*(\\.\\d+)?)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'{\\s*(.+?)?\\s?(\\([0-9\\?]{4}-[0-9\\?]{1,2}-[0-9\\?]{1,2}\\))?\\s?(\\(#[0-9]+\\.[0-9]+\\))?}'	1469
'(\\s*DRI_CONF_ENUM\\s*\\([^,]+,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'^.*([^A-Za-z0-9_]()\\s*\\(|vtkGet.*Macro\\s*\\(\\s*()\\s*,|vtkSet.*Macro\\s*\\(\\s*()\\s*,).*$'	557
'^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'	557
'<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'	1409
'^Member ([a-zA-Z0-9_]+).*\\((typedef|define|function|variable|enumeration)\\) of (file|class) '	1023
'(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	1122
'^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'	1463
'(?P<line>([^"]*["][^"]*["][^"!]*|[^\\\']*\\\'[^\\\']*\\\'[^\\\'!]*|[^!\\\'"]*))!{1}(?P<rest>.*)'	356
'(\\w+)::\\1(\\s*)\\((.*)\\)(\\s*):(\\s*)Expression\\(EXPRESSION_CONSTRUCTOR_PARAMETER_VALUES\\)'	218
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+)$'	1247
'\\[\\s*[a-zA-Z_][a-zA-Z0-9_]*\\s+(?:[a-zA-Z_][a-zA-Z0-9_]*\\s*\\]|(?:[a-zA-Z_][a-zA-Z0-9_]*)?:)'	1555
'(((?P<py>python)|(?P<fr>fakeroot))\\s*)*(?P<func>[\\w\\.\\-\\+\\{\\}\\$]+)?\\s*\\(\\s*\\)\\s*{$'	1143
'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5}).*\\Z'	80
'\\s*(((if|while|else\\s*(if)?|for(each)?|switch|declare)\\s*\\(.*\\)[^{:;]*)|(do\\s*[^\\({:;]*))'	407
'class="blog">(.*)<\\/a>\\D*\\s*&rarr;\\s*\\D*\\s+<a \\D*href="(.*)"\\D* class="topic">(.*)<\\/a>'	1494
'^(\\d+).*([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'	681
'\\s*@Test.*groups\\s*=\\s*("unstable|Array\\("unstable"\\))|@Category\\(UnstableTest\\.class\\).*'	1570
'(?:<param name="movie" value="|var url = ")(http://media.mtvnservices.com/([^"]*episode.*?:.*?))"'	1181
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<path>[^\\?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'<a href="(.*?)" title="\xd7\xa7\xd7\xa8\xd7\x90 \xd7\x91\xd7\x94\xd7\xa8\xd7\x97\xd7\x91\xd7\x94"'	126
'^\\s*([A-Za-z0-9> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\\s+(.*)\\s*$'	1432
'^\\s*virtual\\s*void\\s*PrintSelf\\s*\\(\\s*ostream\\s*&\\s*os*\\s*,\\s*vtkIndent\\s*indent\\s*\\)'	557
'<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0"><img\\s* src="(.*?)" alt="(.*?)"'	1150
'OUT p\\d+ (\\d\\d):(\\d\\d):(\\d\\d) ([NS])\\s*(\\d+):(\\d+\\.\\d+) ([EW])\\s*(\\d+):(\\d+\\.\\d+)'	80
'<tr><td class="tresults"><a href="/karaoke/([0-9]+).htm">(.*?)</td><td class="tresults">(.*?)</td>'	1431
'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})\\d*\\Z'	80
'^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'	405
'Release (?P<release>\\w+).*\\(BB=(?P<bb>[a-zA-Z0-9:]+),RF=(?P<radio>[a-zA-Z0-9:]+)(?P<var>[^)]*)\\)'	1626
'\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x99\xd7\xa9\xd7\x99\xd7\x91\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<'	126
'^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$'	548
'\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x94\xd7\xa6\xd7\x91\xd7\xa2\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<'	126
'^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'	826
'((?P<title>.+?)(-)?)?(\\s*)(s|(season\\s)|\\s)(?P<season>\\d+)\\s*(e|(episode\\s)|x)(?P<episode>\\d+)'	506
'^\\s*\\d+\\.\\d+\\.\\d+\\.\\d+\\s.+\\s(?P<address>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s+(?P<metric>\\d+)\\s*$'	1469
'(ACTION|DEVPATH|KERNELS?|NAME|SYMLINK|SUBSYSTEMS?|DRIVERS?|TAG|RESULT|TEST)\\s*(?:=|!)=\\s*"([^"]*)"$'	722
"^\\s*([A-Za-z0-9'./> -]+)\\s+\\(?([0-9A-F]+),([0-9A-FxXY]+)\\)?\\s+([A-Z][A-Z])\\s+([1-3C]+)?,?.*\\s*$"	1432
'((?:(?:HTTP/1\\.[0-2] [0-9]* [a-zA-Z ]*)|(?:(?:GET|POST)[a-zA-Z0-9\\./\\\\\\-_~%# ]*)).*?\\r\\n\\r\\n)'	1375
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^\\s*void\\s*operator\\s*=\\s*\\(\\s*const\\s*\\s*&\\s*\\)\\s*;\\s*\\/\\/\\s*Not\\s*[iI]mplemented(\\.)*'	557
'^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'	548
'(?:http://)?(?:[a-z]+\\.)?video\\.yahoo\\.com/(?:watch|network)/([0-9]+)(?:/|\\?v=)([0-9]+)(?:[#\\?].*)?'	386
'^\\s*((public|static|private|protected|internal|abstract|partial)\\s+)*(class|struct)\\s+([A-Za-z0-9_])+'	1426
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'\\s*eth(\\d):(\\d+)\\s+\\d+\\s+(\\d+)\\s+\\d+\\s+\\d+\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)\\s+\\d+\\s+(\\d+)'	1205
'>rRNA_([A-Z]+[0-9]+)\\.([0-9]+)_([0-9]+)-([0-9]+)_DIR([-\\+]) /molecule=(.*)_rRNA /score=([0-9]+.?[0-9]*)'	1331
'((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'	1025
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(\\s*DRI_CONF_DESC\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'^([a-zA-Z0-9_\\-]+)([\\.][a-zA-Z0-9_\\-]+)+([:][/][a-zA-Z0-9\\~\\(\\)_\\-]*)+([\\.][a-zA-Z0-9\\(\\)_\\-]+)*'	548
'^.*ArgumentAdaptingMatcherFunc<.*>\\s*(?:LLVM_ATTRIBUTE_UNUSED\\s*)\n              ([a-zA-Z]*)\\s*=\\s*{};$'	1244
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(ALLOWED_EXTENSIONS|SKIPED_DIRS|KNOWN_MARKS|SKIPED_FILES|SHOW_EMPTY_MARKS|REQUIRE_COLON|MARK_COLORS)=+(.*?)$'	407
'(?i)\\<(?:link)\\s.*?rel\\s*\\=\\s*[\\"\\\']shorturl[\\"\\\'].*?href\\s*\\=\\s*[\\"\\\'](.*?)[\\"\\\'].*?\\>'	104
'^\\s*([0-9A-Z]+)\\s+([0-9A-Zx]+)\\s+([A-Z][A-Z])\\s+([1-9SNn-]+)\\s+([1-9])\\s+([A-Za-z0-9 ()._,/#>-]+)\\s*$'	1432
'^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'	1432
'(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	1122
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'^.*: \\[GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'((?<=[\\\'"\\s/])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?(?:\\s|/(?!>))*'	1580
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
'^\\s*([A-Za-z0-9()> -]+)\\s+\\(([0-9]+),([0-9A-Fx]+)\\)\\s+([A-Z][A-Z])\\s+([1-9n-]+)\\s+([A-Za-z_0-9. ]+)\\s*$'	1432
u'(Traceback \\(most recent call last\\):\\n(?:  File "[^"\\n]+", line \\d+, in \\w+\\n(?:    .+\\n)?)+\\S.*\\n)'	737
'(?P<prefix>^[\\s]*)(?P<main>([\\*\\s]+(html|body)\\s+)?[a-zA-Z_\\.,#]+[\\sa-zA-Z_\\.,#\\{:]*)(?P<suffix>[^;]+)$'	31
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>[GgMmKk]?(?P<multiplier_style>[Ii])?[Bb])?\\s*(?P<fraction>\\(\\d+%\\))?'	962
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(\\s*DRI_CONF_DESC_BEGIN\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'	32
'\n    ^(?P<ending>\\w+)\n    (?P<intact>[*]?)\n    (?P<num>\\d+)\n    (?P<append>\\w*)\n    (?P<cont>[.>])\n    '	1184
'\\s*(?P<name>[+\\w. -]+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1580
'^\\s*([A-Za-z0-9 #()./,_:>-]+)\\s+([0-9A-Z]+),\\s?([0-9A-ZxX]+)\\s+([1-3C]+)\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
'^.*VariadicOperatorMatcherFunc\\s*<\\s*([^,]+),\\s*([^\\s>]+)\\s*>\\s*\n              ([a-zA-Z]*)\\s*=\\s*{.*};$'	1244
'.*line="(?P<line>\\d+)" column="(?P<column>\\d+)" severity="(?P<severity>\\w+)" message="(?P<message>.*)" source'	1326
'(NAME|SYMLINK|OWNER|GROUP|MODE|TAG|PROGRAM|RUN|LABEL|GOTO|WAIT_FOR|OPTIONS|IMPORT)\\s*(?:\\+=|:=|=)\\s*"([^"]*)"$'	722
'^\\s*((public|private|protected|static)\\s+)+([a-zA-Z_][a-zA-Z0-9_\\.\\[\\]]*\\s+)+?[a-zA-Z_][a-zA-Z0-9_]*\\s*\\('	1426
'(?P<fence>^(?:~{3,}|`{3,}))[ ]*(\\{?\\.?(?P<lang>[a-zA-Z0-9_+-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?<=\\n)(?P=fence)[ ]*$'	1395
'^(\\d+) (.*)\\((\\d+)\\.(\\d+)\\),(.*)\\((\\d+)\\.(\\d+)\\) > (.*)\\((\\d+)\\.(\\d+)\\),(.*)\\((\\d+)\\.(\\d+)\\)$'	920
'__buildout_signature__ = sample-\\S+\\s+zc.recipe.egg-\\S+\\s+(setuptools|distribute)-\\S+\\s+zc.buildout-\\S+\\s*'	313
'^\\([0-9a-f]+,[0-9a-f]+\\)\\s+VERS=".*"\\s+VR="[A-Z][A-Z]"\\s+VM=".*"\\s+Owner=".*"\\s+Keyword=".*"\\s+Name=".*".*$'	1432
'((?P<url>\\w{3,6}://\\S+)|(?P<email>[-+=%/\\w\\.]+@[\\w\\.\\-]+)|(?P<item>(?P<class>[A-Za-z_]+)(\\s*)(?P<id>\\d+)))'	43
'^.*: \\[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'http://(?:img.*?\\.)xvideos.com/videos/thumbs/[a-fA-F0-9]+/[a-fA-F0-9]+/[a-fA-F0-9]+/[a-fA-F0-9]+/([a-fA-F0-9.]+jpg)'	1181
'(|__doc__\\s*=(\\s*|\\s*\\\\\\s*\\n))("""([^"]*)"""|\\\'\\\'\\\'([^\\\']*)\\\'\\\'\\\'|"([^"]*)"|\\\'([^\\\']*)\\\')'	602
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d\\.\\-]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
'^(starting\\s+from\\s+page\\s+(?P<number>\\w+))?\\s*(using\\s+(?P<key>[\\"\\\'\\w]+))?\\s*(as\\s+(?P<var_name>\\w+))?$'	250
'\\s*({|}|\\[|]|//|/|\\.|\\\\\\\\|\\\\|<==|==>|<=|=>|<--|-->|<-|->|@|or|and|not|\\(|\\)|>=|=|<>|like|_|\\*|\\+|\\?)\\s*'	1488
'[ \t\r\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\r\n]*=[ \t\r\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:+*%?!\\(\\)_#=~]*))?'	1076
'(?:http://)?video\\.google\\.(?:com(?:\\.au)?|co\\.(?:uk|jp|kr|cr)|ca|de|es|fr|it|nl|pl)/videoplay\\?docid=([^\\&]+).*'	386
'\xd7\xa2\xd7\x9e\xd7\x95\xd7\x93(.*?)\xd7\x9e\xd7\xaa\xd7\xa4\xd7\xa8\xd7\xa1\xd7\x9e\xd7\xaa \xd7\x91\xd7\x96\xd7\x94'	126
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P=artist) - (?P<album>.*) - (?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'#\\sQuery_time:\\s(\\d*\\.\\d{1,6})\\s*Lock_time:\\s(\\d*\\.\\d{1,6})\\s*Rows_sent:\\s(\\d*)\\s*Rows_examined:\\s(\\d*)'	873
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P=album)-(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?P<rtn>\\S+)\\s+(?P<fname>[^\\s\\(\\){}]+({[^{}]*})?)\\s*\\((?P<args>(({[^{}]*})+|(\\([^\\(\\)]*\\))+|[^\\(\\)]+)*)\\)'	1249
'\\s*((const|mutable)\\s+)?(char|(short(\\s+int)?)|int|long(\\s+(long|int))?)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*:\\s*\\d+\\s*;'	1199
'^<([\\w\\-]+(?:\\:[\\w\\-]+)?)((?:\\s+[\\w\\-]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	407
'addtask\\s+(?P<func>\\w+)\\s*((before\\s*(?P<before>((.*(?=after))|(.*))))|(after\\s*(?P<after>((.*(?=before))|(.*)))))*'	1143
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?(?P<urlargs>.*))?$'	1247
'(\\n|\\n__doc__\\s*=(\\s*|\\s*\\\\\\s*\\n))("""([^"]*)"""|\\\'\\\'\\\'([^\\\']*)\\\'\\\'\\\'|"([^"]*)"|\\\'([^\\\']*)\\\')'	602
'(NIST|BLEU) score using\\s+\\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \\((\\d+) segments, (\\d+) words\\)'	764
'  (NIST|BLEU) score using \\d+-grams = ([0-9.]+) for system "(.*)" on segment (\\d+) of document "(.*)" \\((\\d+) words\\)'	764
'^\\(([0-9a-f]+),([0-9a-f]+)\\)\\s+VERS=".*"\\s+VR="([A-Z][A-Z])"\\s+VM="(.*)"\\s+Owner=".*"\\s+Keyword=".*"\\s+Name="(.*)"$'	1432
'Trans Opt (\\d+) \\[(\\d+)\\.\\.(\\d+)\\]:((?: \\[\\d+\\.\\.\\d+\\]=\\S+  )+): (\\S+) ->((?:\\S+ )+):((?:\\d+-\\d+ )*): pC='	584
'^(?P<neg>-?)P((?P<Y>\\d+)Y)?((?P<M>\\d+)M)?((?P<D>\\d+)D)?(?P<T>T?)((?P<h>\\d+)H)?((?P<m>\\d+)M)?((?P<s>\\d*(\\.\\d+)?)S)?$'	1076
'(?P<protocol>PYRONAME|PYRONAMESSL)://(((?P<hostname>[^\\s:]+):(?P<port>\\d+)/)|((?P<onlyhostname>[^\\s:]+)/))?(?P<name>\\S*)'	1184
'^(?:nfs://)?(?P<host>([a-zA-Z][\\w\\.^-]*|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}))(?::(?P<port>\\d*))?(?P<dir>/[\\w/]*)?$'	1543
'\\s*\n      <table[^>]*>\\s*\n        ((?:<tr[^>]*>)?\n          (.*?)\n        (?:</tr>)?)\\s*\n      </table>\\s*$\n      '	1258
'^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'	1432
'(?:.*(/|\\\\))?(?P<albumartist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})_(?P<artist>.*)_-_(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^<(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*\\/?\\s*>'	1025
"documentSelected\\(\\'(\\w*)\\',\\'([\\w\\d-]*)\\',\\'([\\w\\.\\-]*)\\',\\'([\\w\\d/]*)\\',\\'([\\w\\d]*)\\',\\'([\\w\\s]*)\\'"	182
'^.*?/.+?_(?P<mystery_string_1>\\d+)_job_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_hadoop_streamjob(?P<mystery_string_2>\\d+).jar$'	542
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<artist>.*)-(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^\\s*(?:virtual\\s+)?void\\s+([A-Za-z_]+\\w*)\\s*\\([A-Za-z_:0-9]+\\s*&\\s*\\w*\\)\\s*;\\s*//\\s*wxGlade:\\s*<event_handler>\\s*$'	602
'^.*?/job_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_(?P<mystery_string_1>\\d+)_(?P<user>.*?)_streamjob(?P<mystery_string_2>\\d+).jar$'	542
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$'	1247
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)((?P<year>\\d{4}) - )(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'\n        ^[ ]*:\\w+:.*\\n                     # :option:\n        (.*\\S.*)*                          # non-blank lines\n        '	1248
'^GL_?API(CALL)?\\s+(?P<return>[\\w\\s*]+[\\w*])\\s+(GL)?_?APIENTRY\\s+(?P<name>\\w+)\\s*\\((?P<params>[\\w\\s(,*\\[\\])]+)\\)\\s*;'	533
'^.*?/jobs/.+?_(?P<mystery_string_1>\\d+)_job_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_hadoop_streamjob(?P<mystery_string_2>\\d+).jar$'	440
'(?x)\n            xmin\\ =\\ (.*)[\\r\\n]+\n            xmax\\ =\\ (.*)[\\r\\n]+\n            [\\s\\S]+?size\\ =\\ (.*)[\\r\\n]+ \n'	1488
'^\\s*([A-Za-z0-9&{}=+ \xab\xbb%;#()./,_:<>-]+)\\s+\\(?([0-9A-Fa-fn]+),\\s?([0-9A-Fa-fyxX]+)\\)?\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+?)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<artist>.*) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<artist>.*) - (?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'TEST-UNEXPECTED-FAIL \\| .* \\| (missing output line for total leaks!|negative leaks caught!|leaked \\d+ bytes during test execution)'	566
'\n        ^[ ]*:\\w+:.*\\n                     # :option:\n        (.*\\S.*\\n)*                          # non-blank lines\n        '	1248
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<artist>.*) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'<(\\/?)(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*(\\/?)\\s*>'	1025
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'^\\s*\\(([0-9A-Z]+),([0-9A-Zx]+)\\)\\s+([A-Za-z0-9./:_ -]+)\\s+\\|\\s+([A-Za-z0-9 ()._,/#>-]+)\\s+([A-Z][A-Z]_?O?W?)\\s+([0-9n-]+)\\s*$'	1432
'^(?P<t>\\S.*?)?(?:\\s+\\[(?P<a>.+?)\\])?(?:\\s+(?P<k>\\S+))?\\s+(?P<p>img|IMG|left|right|center|video|audio)(?:\\s+(?P<w>\\d+px))?\\s*$'	1247
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)-(?P<D>\\d\\d)T(?P<h>\\d\\d):(?P<m>\\d\\d):(?P<s>\\d*(\\.\\d+)?)(?P<tz>(Z|([-+]\\d\\d:\\d\\d))?)$'	1076
'<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'	32
'^.*/attempt_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_(?P<node_type>m|r)_(?P<node_num>\\d+)_(?P<attempt_num>\\d+)/(?P<stream>stderr|syslog)$'	542
'(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\\d]+) (?P<parentrevspec>rev:revid:[-\\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$'	1218
'//\\s?[\\-]*\\s(?P<desc>.*?)\\*/\\W*?struct\\s(?:ASSIMP_API\\s)?(?P<name>[a-z][a-z0-9_]\\w+\\b)[^{]*?\\{(?P<code>.*?)\\}\\s*(PACK_STRUCT)?;'	706
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P=album)-(?P<tracknum>\\d{2})-(?P<artist>.*)-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'<tr>\\s*<td><a href="lookup2\\.php\\?strID=(C\\d+)">[^<]+</a>\\s*</td><td>\\s*<a href="/politicians/summary\\.php\\?cid=(N\\d+)&cycle=2008">'	55
'^\\s*([A-Za-z0-9&{}=+ ;%#\\[\\]()./,_:<>-]+)\\s+\\(?([0-9A-Fa-f]+),\\s?([0-9A-Fa-fyxX]+)\\)?\\s+([1-3C]+)\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
"([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"	1247
'http://rapidshare.com/files/\\d+/.*\\.(?:rar|zip|avi|wmv|part\\d+\\.rar|\\d+)|http://megaupload.com/?d=........|http://megaporn.com/?d=........'	1173
'<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'	32
'.*AST_TYPE_MATCHER\\(\n                       \\s*([^\\s,]+\\s*),\n                       \\s*([^\\s,]+\\s*)\n                     \\)\\s*;\\s*$'	1244
'(?xms)\n(?:\\${(\\d+):(.*?)})|   # A simple tabstop with default value\n(?:\\$(\\d+))           # A mirror or a tabstop without default value.\n'	597
'(?P<head>.*?abstract repository common_branches\\s*{\\s*branches\\s*{\\s*\\n)(?P<branches>.*?)^\\s*}\\s*tags\\s*{\\s*(?P<tags>.*?)(?P<tail>^\\s*}.*)'	1631
'(?x)\n        \\[\\s*\\]\n    |   \\(\\s*\\)\n    |   \\+\\+ | --\n    |   ->\\*? | \\,\n    |   (<<|>>)=? | && | \\|\\|\n    |   [!<>=/*%+|&^~-]=?\n'	1087
'\n    Processes:\n    \\s*\n    (?P<total>\\d+)\\s*total,\n    \\s*\n    (?P<running>\\d+)\\s*running,\n    \\s*\n    (?P<sleeping>\\d+)\n    .*\n    '	1638
'(((http|https)://)|(www\\.))+(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(/[a-zA-Z0-9\\&amp;%_\\./-~-]*)?'	548
'^.*/task-attempts/attempt_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_(?P<node_type>m|r)_(?P<node_num>\\d+)_(?P<attempt_num>\\d+)/(?P<stream>stderr|syslog)$'	440
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	1055
'(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'	1488
'Assistant\\((?P<deviceType>.*)/(?P<deviceVersion>.+); (?P<clientOSType>.*)/(?P<clientOSVersion>.*)/(?P<clientOSbuildNumber>.*)\\) Ace/(?P<protocolVersion>.*)'	746
'(?x)\n        \\[\\s*\\]\n    |   \\(\\s*\\)\n    |   [!<>=/*%+|&^-]=?\n    |   \\+\\+ | --\n    |   (<<|>>)=? | ~ | && | \\| | \\|\\|\n    |   ->\\*? | \\,\n'	251
'^(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)(\\.(?P<patch>[0-9]+))?(\\-(?P<prerelease>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?(\\+(?P<build>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?$'	1025
'(?P<comment>/\\*\\*[^{}]*?\\*/)?\\s*message\\s*{\\s*(?P<type>\\w*)\\s*,\\s*(?P<subtype>\\w*)\\s*,\\s*(?P<subtypecode>\\w*)\\s*,\\s*(?P<datatype>\\w*)\\s*}\\s*;\\s*'	1522
'(?:http://)?(?:\\w+\\.)?youtube.com/(?:(?:view_play_list|my_playlists|artist)\\?.*?(p|a)=|user/.*?/user/|p/|user/.*?#[pg]/c/)([0-9A-Za-z]+)(?:/.*?/([0-9A-Za-z_-]+))?.*'	386
'^Line (?P<line>\\d+) of "(?P<filename>[\\w\\\\/\\.\\-+:]*)" starts at address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+> and ends at 0x[0-9a-f]+ <(?P<symend>[^+]+)(\\+\\d+)?>.'	108
'TEST-UNEXPECTED-FAIL \\| .* \\| (Browser crashed \\(minidump found\\)|missing output line for total leaks!|negative leaks caught!|leaked \\d+ bytes during test execution)'	566
'\n    (?:\'[^\'\\n\\r]*\')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+(?:\\.\\w+)*|\n    (?:"[^"\\s]+")+|\n    \\(|\\)|\n    \\S+\n    '	1495
'.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'	1244
'(?P<indent>^\\s*)(?P<visibility>(final|abstract)?\\s?(public|private|protected)?\\s?(static)?\\s*)(?P<entity>(function|class|interface)\\s+)(?P<name>[^$]+[&a-zA-Z0-9_]+)(?P<args>.*$)'	31
'\n       (^\\.\\.[ ]*pylisting::.*\\n         # directive\n            (?:[ ]*\\n|                   # blank line or\n               [ ]+.*\\n)*)               #   indented line\n        '	1248
'\n       (^\\.\\.[ ]*pylisting::[ ]?\\S*\\n    # directive\n            (?:[ ]*\\n|                   # blank line or\n               [ ]+.*\\n)*)               #   indented line\n        '	1248
'^((?P<day>\\w{3}),\\s*)*(?P<dm>\\d{2})\\s+(?P<month>\\w{3})\\s+(?P<year>\\d{4})\\s+(?P<hour>\\d{2}):(?P<min>[0-5][0-9])(:(?P<sec>[0-5][0-9]))*\\s((?P<tz>\\w{2,3})|(?P<offset>[+\\-]\\d{4}))$'	1258
'\n        (?P<decl>typedef\\s+struct\\s*\\w*\\s*)  # Declaration\n        {(?P<body>.*?)}(?P<footer>\\s*        # Body\n        (?P<name>playerc_\\w+?)(_t)?          # Name\n        \\s*;)\n    '	1522
'(?x)\n        \\\\.           |  # Backslashed character\n        \\(\\?P<[^>]*>  |  # Named group\n        \\(\\?          |  # Extension group\n        \\(               # Grouping parenthesis'	1248
'\n        (?:^[^ ].*\\n                       # non-blank line\n            (?:[ ]*\\n |                    # blank line or\n               [ ]+.*\\n)*)                 #   indented line\n        '	1248
'(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\\d+|[xX*])\n         (?:\\.(?P<minor>\\d+|[xX*])\n          (?:\\.(?P<patch>\\d+|[xX*]))?\n         )?\n        )\n        (?P<other>.*)$'	1025
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	557
'(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\\d+)\n         (?:\\.(?P<minor>\\d+)\n          (?:\\.(?P<patch>\\d+)\n           (?P<other>[-+][a-zA-Z0-9-+.]*)?\n          )?\n         )?\n        )?$'	1025
'\n        \\s*\n        (?P<rows>\\d+)\n        [ ]\n        (?P<cols>\\d+)\n        (?P<grid>.*?)\n        (?P<wrap>WRAP|NO_WRAP)\n        \\s+\n        (?P<num_words>\\d+)\n        \\s\n        (?P<words>.*)\n    '	1222
'((?:(?:(?:(?!-)(?:[\\w\\d-])*[A-Za-z](?:[\\w\\d-])*(?:(?<!-))){1,63})(?:(?:\\.)?(?:(?!-)[\\w\\d-]{1,63}(?<!-)))*|(?:[\\d]{1,3}(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3}))))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
"^([\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$"	1247
'\\[(?P<escapeopen>\\[?)(?P<name>[\\w\\d\\_-]+)\\b(?P<arguments>[^\\]\\/]*(?:\\/(?!\\])[^\\]\\/]*)*?)(?:(?P<selfclosing>\\/)\\]|\\](?:(?P<content>[^\\[]*(?:\\[(?!\\/(?P=name)\\])[^\\[]*)*)\\[\\/(?P=name)\\])?)(?P<escapeclose>\\]?)'	934
'(?x)\n        (?P<major>[0-9]+)\n        \\.(?P<minor>[0-9]+)\n        \\.(?P<patch>[0-9]+)\n        (?:\\-(?P<prerelease>(?:[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?))?\n        (?:\\+(?P<build>(?:[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?))?'	1025
'^<((?:[a-z0-9.]*))>\\s*\n                                     ((?:[a-z0-9_.]*))\\s*\n                                     \\({0,1}\n                                     ((?:[a-z0-9,= ]*))\n                                     \\){0,1}$'	1256
'(?P<exp>export\\s*)?(?P<var>[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P<flag>[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P<colon>:=)|(?P<ques>\\?=)|(?P<append>\\+=)|(?P<prepend>=\\+)|(?P<predot>=\\.)|(?P<postdot>\\.=)|=)\\s*(?P<apo>[\'\\"]?)(?P<value>.*)(?P=apo)$'	1143
'.*AST_TYPE(LOC)?_TRAVERSE_MATCHER\\(\n                       \\s*([^\\s,]+\\s*),\n                       \\s*(?:[^\\s,]+\\s*),\n                       \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                     \\)\\s*;\\s*$'	1244
'(?P<exp>export\\s*)?(?P<var>[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P<flag>[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P<colon>:=)|(?P<lazyques>\\?\\?=)|(?P<ques>\\?=)|(?P<append>\\+=)|(?P<prepend>=\\+)|(?P<predot>=\\.)|(?P<postdot>\\.=)|=)\\s*(?P<apo>[\'\\"]?)(?P<value>.*)(?P=apo)$'	1143
'<VideoID>(.*)</VideoID>\\s*.*\\s*.*\\s*.*\\s*.*<ProgrammeName>(.*)</ProgrammeName>\\s*.*\\s*.*\\s*<EpisodeTitle>(.*)</EpisodeTitle>\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*.*\\s*<ItemMediaUrl>(.*)</ItemMediaUrl>'	1150
'<movieinfo id="(.*?)"><title>(.*?)</title><quality>(.*?)</quality><runtime>(.*?)</runtime><releasedate>(.*?)</releasedate><mpaa>(.*?)</mpaa><genre>(.*?)</genre><studio>(.*?)</studio><director>(.*?)</director><cast>(.*?)</cast><plot>(.*?)</plot><thumb>(.*?)</thumb>'	1093
'\n    PhysMem:\n    \\s*\n    (?P<wired>[\\d\\.MGK]+)\\s*wired,\n    \\s*\n    (?P<active>[\\d\\.MGK]+)\\s*active,\n    \\s*\n    (?P<inactive>[\\d\\.MGK]+)\\s*inactive,\n    \\s*\n    (?P<used>[\\d\\.MGK]+)\\s*used,\n    \\s*\n    (?P<free>[\\d\\.MGK]+)\\s*free\n    .*\n    '	1638
'^ ([\\w.]+\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	898
'^ ([\\w.]*\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	1551
'((?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::) :)|(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?: \\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
"\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*>[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"	55
"\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"	200
'\n                                (?P<pre_sep>[ _.-]*)\n                                ((?:s(?:eason|eries)?\\s*)?%0?S(?![._]?N))\n                                (.*?)\n                                (%0?E(?![._]?N))\n                                (?P<post_sep>[ _.-]*)\n                              '	1269
'\n        [^<]*\n        (\n          ((<!--.*?-->)                         |  # comment\n           (<![CDATA[.*?]])                     |  # raw character data\n           (<!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>) |  # doctype decl\n           (<[^>]*>))                              # tag or PI\n          [^<]*)*\n        \\Z'	1248
'[^#]*\\s+\\bdo\\b(\\s*|(\\s+\\|.+\\|\\s*))|\\s*(\\bif\\b\\s+.*|\\belsif\\b.*|\\belse\\b.*|\\bdo\\b(\\s*|\\s+.*)|\\bcase\\b\\s+.*|\\bwhen\\b\\s+.*|\\bwhile\\b\\s+.*|\\bfor\\b\\s+.*|\\buntil\\b\\s+.*|\\bloop\\b\\s+.*|\\bdef\\b\\s+.*|\\bclass\\b\\s+.*|\\bmodule\\b\\s+.*|\\bbegin\\b.*|\\bunless\\b\\s+.*|\\brescue\\b.*|\\bensure\\b.*)+'	407
'^\n                                    \\s*\n                                    ((?:\\[+\\s*))\n                                    ((?:[a-z0-9:_\\.\\s,]*))\n                                    \\s*\n                                    ((?:\\]+))\\s*\n                                    (\\#.*)?\n                                    $'	1256
'\n\t\t\t       (?xi)( # allow comments, case insensitive\n\t\t\t        if\\s* # begins with an if statement\n\t\t     (.*(and|or)\\s*)* # predicates are possible\n\t\t       keycode\\s*=\\s* # keycode assignment\n\t        (?P<keycode>\\w{5})\\s* # \n\t  (?P<assign_name>\\w+)\\s*=\\s* #\n(?P<assign_value>[0-9](.[0-9]+)?)\\s*) #\n\t\t\t\t      '	962
'\n    ep                  # Character Literals\n    (?:isode)?          # Junk group for optional character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    [\\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    [\\W_]               # non alphanum char\n    (?P<S>\\d)           # NG(S) grab 1 digit for season number\n    (?P<E>\\d{2})        # NG(E) grab 2 digits for episode number\n    [\\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'\n    Load\\s*Avg:\n     \\s*\n    (?P<loadavg_one>[\\d\\.]+),\n    \\s*\n    (?P<loadavg_five>[\\d\\.]+),\n    \\s*\n    (?P<loadavg_ten>[\\d\\.]+)\n    \\s*\n    CPU\\s*usage:\n    \\s*\n    (?P<usercpu_percent>[\\d\\.]+)%\n    \\s*\n    user,\n    \\s*\n    (?P<syscpu_percent>[\\d\\.]+)%\n    \\s*\n    sys,\n    \\s*\n    (?P<idlecpu_percent>[\\d\\.]+)%\n    .*\n    '	1638
'^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'	926
'\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '	220
'^\\s*AST_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\n                                    \\s*\n                                    ((?:[a-z][a-z0-9_]*))\n                                    \\s*\n                                    =\n                                    \\s*\n                                    ((?:[a-z0-9_\\\\/:]*))\n                                    \\s*\n                                    (\\#.*)?\n                                    $'	1256
'^\\s*AST_MATCHER_FUNCTION(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'\\s*<DOC>\\s*\n     (\\s*(<DOCID>\\s*(?P<docid>.+?)\\s*</DOCID>|\n           <STORYID\\s+[^>]*?>\\s*.+?\\s*</STORYID>|      \n           <SLUG\\s+[^>]*?>\\s*.+?\\s*</SLUG>|          \n           <DATE>\\s*(?P<date>.+?)\\s*</DATE>|         \n           <NWORDS>\\s*.+?\\s*</NWORDS>|                    \n           <PREAMBLE>\\s*.+?\\s*</PREAMBLE>)\\s*)*\n     <TEXT>\\s*(?P<text>.+?)\\s*</TEXT>\\s*(<TRAILER>\\s*(?P<trailer>.+?)\\s*</TRAILER>\\s*)?</DOC>\\s*'	1488
'^(?P<exception>sqlite)://:memory:$|\n                     ^(?P<driver>\\w+?)://  # driver\n                     (?:(?:(?P<user>\\w+?)(?::(?P<password>\\w+?))?@)?  # user and password pattern\n                     (?:(?P<host>[\\w\\.]+?)(?::(?P<port>\\d+))?/|(?P<unix_socket>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*):)  # host patterns\n                     (?P<dbname>\\w+)|(?P<path>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*))$ # database patterns'	648
'\\s*<DOC>\\s*\n     (\\s*(<DOCNO>\\s*(?P<docno>.+?)\\s*</DOCNO>|\n          <CODER>\\s*.+?\\s*</CODER>|\n          <DD>\\s*.+?\\s*</DD>|\n          <AN>\\s*.+?\\s*</AN>|\n          <HL>\\s*(?P<headline>.+?)\\s*</HL>|\n          <SO>\\s*.+?\\s*</SO>|\n          <CO>\\s*.+?\\s*</CO>|\n          <IN>\\s*.+?\\s*</IN>|\n          <GV>\\s*.+?\\s*</GV>|\n          <DATELINE>\\s*(?P<dateline>.+?)\\s*</DATELINE>)\\s*)*\n     <TXT>\\s*(?P<text>(<p>\\s*(<s>\\s*.+?\\s*</s>)+\\s*</p>)+)\\s*</TXT>\\s*</DOC>\\s*'	1488
'<!-- \\*\\*\\* Reference number \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(<[BI]>)?(.*?)</FONT>.*?<!-- \\*\\*\\* Motion title \\*\\*\\* -->.*?<A HREF="(.*?)" TARGET="_parent">\\s*<font face="arial,helvetica" size=2>(?:<[BI]>)?([^<]*?)</font></A>\\s*</TD>\\s*<!-- \\*\\*\\* Signatures -->.*?(?:<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d+) &nbsp;&nbsp;</font>\\s*)?</TD>\\s*<!-- \\*\\*\\* Motion date \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d\\d)\\.(\\d\\d)\\.(\\d\\d)</FONT>(?s)'	32
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .+$\\n?       # But any other line\n                  )*)\n        '	1580
'\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    season              # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<S>\\d{1,2})      # NG(S) capturing 1/2 digits for season no\n    [\\W_]?              # Optional non alphanum char\n    episode             # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
"((?<=\\()[A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|([A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)|\\bmailto:\\S*[^\\s\\W]|\\b\\S+@\\S+\\.\\S*[^\\s\\W]|((?<=\\()(www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|((www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)"	18
'  \n    (?P<SN>.*?)         # Named Group (SN) non greedily capturing show name\n    s                   # Letter S representing season\n    (?P<S>\\d{1,2})      # Named Group (S) capturing 1/2 digits for season no\n    [\\W_]?              # Single Optional Non Alpha-Num char\n    e                   # Letter E representing Episode\n    (?P<E>\\d{1,2})      # Named Group (E) Capturing 1/2 digits for episode no\n    [\\W_]*?             # Non greedy optional Non Alpha-Num char\n    (?P<EN>.*)          # Named Group (EN) greedily trying to grab episode name'	817
'\n        # Include these so we can skip them:\n        (?P<COMMENT>        <!--.*?-->                          )|\n        (?P<CDATA>          <![CDATA[.*?]]>                     )|\n        (?P<PI>             <\\?.*?\\?>                           )|\n        (?P<DOCTYPE>        <!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>  )|\n        # These are the ones we actually care about:\n        (?P<EMPTY_ELT_TAG>  <\\s*[^>/\\?!\\s][^>]*/\\s*>            )|\n        (?P<START_TAG>      <\\s*[^>/\\?!\\s][^>]*>                )|\n        (?P<END_TAG>        <\\s*/[^>/\\?!\\s][^>]*>               )'	1248
'\n        \\s*    \n        ((?P<retval>                  # Capture the return type:\n            \\w+\\s*?(                  # Type name, is a \n            \\** |                     # pointer OR\n            &?  |                     # reference OR\n            (\\[\\s*[0-9]*\\s*\\])        # array.\n            )\n        )\\s*)?                        # Only one (potential) return value.\n        (?P<name>                     # Capture function name\n            playerc_\\w+               # Class name and member function name\n        )\\s*\n        (?P<params>\\(.*?\\))           # Parameters\n        \\s*;\n    '	1522
'     # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?           # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)           # ...a number (with at least one digit)\n        (?P<int>\\d*)          # consisting of a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?           # ...an infinity, or...\n    |\n        (?P<signal>s)?        # ...an (optionally signaling)\n        NaN                   # NaN\n        (?P<diag>\\d*)         # with (possibly empty) diagnostic information.\n    )\n#    \\s*\n    $\n'	12
'\n                (?xm)  # verbose identify URLs in text (and multiline)\n             (?=^.{11} # Mail header matcher\n     (?<!Message-ID:|  # rule out Message-ID\'s as best possible\n        In-Reply-To))  # ...and also In-Reply-To\n               (.*?)(  # must grab to email to allow prior lookbehind\n   ([A-Za-z0-9-]+\\.)?  # maybe an initial part: DAVID.mertz@gnosis.cx\n        [A-Za-z0-9-]+  # definitely some local user: MERTZ@gnosis.cx\n                    @  # ...needs an at sign in the middle\n         (\\w+\\.?){2,}  # at least two domain groups, e.g. (gnosis.)(cx)\n    (?=[\\s\\.,>)\'"\\]])  # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'<!-- Ref -->\\s*<TD WIDTH=14>[^C]*?(Closed)?[^C]*?</TD>\\s*<TD ALIGN="CENTER" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">\\s*<B>(.*?)</B>\\s*</FONT>\\s*</TD>\\s*<!-- Motion Title -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT COLOR="#0000DD">\\s*<A HREF="(/weblink/html/motion.html/ref=.*?)" TARGET="_top">\\s*(.*?)</A>\\s*</FONT>\\s*</TD>\\s*<!-- Sponsor -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<A HREF="/weblink/html/member.html/mem=.*?" TARGET="_top" >\\s*<font face="arial,helvetica" size=2>.*?/.*?</A>\\s*</TD>\\s*<!-- Count of signatures -->\\s*<TD ALIGN="RIGHT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">(\\d+)</FONT>&nbsp;&nbsp;&nbsp;\\s*</TD>'	32
"\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "	1247
'^(cache type:) (.*)(<b>)(?P<shared_mem>[0-9]+)(</b> bytes, current sessions: <b>)(?P<current_sessions>[0-9]+)(</b><br>subcaches: <b>)(?P<num_subcaches>[0-9]+)(</b>, indexes per subcache: <b>)(?P<indexes_per_subcache>[0-9]+)(</b><br>)(.*)(<br>index usage: <b>)(?P<index_usage>[0-9]+)(%</b>, cache usage: <b>)(?P<cache_usage>[0-9]+)(%</b><br>total sessions stored since starting: <b>)(?P<sessions_stored>[0-9]+)(</b><br>total sessions expired since starting: <b>)(?P<sessions_expired>[0-9]+)(</b><br>total \\(pre-expiry\\) sessions scrolled out of the cache: <b>)(?P<sessions_scrolled_outof_cache>[0-9]+)(</b><br>total retrieves since starting: <b>)(?P<retrieves_hit>[0-9]+)(</b> hit, <b>)(?P<retrieves_miss>[0-9]+)(</b> miss<br>total removes since starting: <b>)(?P<removes_hit>[0-9]+)(</b> hit, <b>)(?P<removes_miss>[0-9]+)'	583
'FooDeathTest\\.\n  Test1\nFoo\\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nAbc\\.\n  Xyz\n  Def\nFooBar\\.\n  Baz\nFooTest\\.\n  Test1\n  DISABLED_Test2\n  Test3\nTypedTest/0\\.  # TypeParam = (VeryLo{245}|class VeryLo{239})\\.\\.\\.\n  TestA\n  TestB\nTypedTest/1\\.  # TypeParam = int\\s*\\*\n  TestA\n  TestB\nTypedTest/2\\.  # TypeParam = .*MyArray<bool,\\s*42>\n  TestA\n  TestB\nMy/TypeParamTest/0\\.  # TypeParam = (VeryLo{245}|class VeryLo{239})\\.\\.\\.\n  TestA\n  TestB\nMy/TypeParamTest/1\\.  # TypeParam = int\\s*\\*\n  TestA\n  TestB\nMy/TypeParamTest/2\\.  # TypeParam = .*MyArray<bool,\\s*42>\n  TestA\n  TestB\nMyInstantiation/ValueParamTest\\.\n  TestA/0  # GetParam\\(\\) = one line\n  TestA/1  # GetParam\\(\\) = two\\\\nlines\n  TestA/2  # GetParam\\(\\) = a very\\\\nlo{241}\\.\\.\\.\n  TestB/0  # GetParam\\(\\) = one line\n  TestB/1  # GetParam\\(\\) = two\\\\nlines\n  TestB/2  # GetParam\\(\\) = a very\\\\nlo{241}\\.\\.\\.\n'	994
"\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "	1523
'\n    ^\n    \\s*                         # Leading whitespace\n    (?!.*::.*::)                # Only a single wildcard allowed\n    (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n    (?:                         # Repeat 6 times:\n        [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n    ){6}                        #\n    (?:                         # Either\n        [0-9a-f]{0,4}           #   Another group\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        [0-9a-f]{0,4}           #   Last group\n        (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n         |  (?<!:)              #\n         |  (?<=:) (?<!::) :    #\n         )                      # OR\n     |                          #   A v4 address with NO leading zeros \n        (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n        (?: \\.\n            (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n        ){3}\n    )\n    \\s*                         # Trailing whitespace\n    $\n'	1500
'\n        ^\n        \\s*                         # Leading whitespace\n        (?!.*::.*::)                # Only a single whildcard allowed\n        (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n        (?:                         # Repeat 6 times:\n            [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        ){6}                        #\n        (?:                         # Either\n            [0-9a-f]{0,4}           #   Another group\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n            [0-9a-f]{0,4}           #   Last group\n            (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n             |  (?<!:)              #\n             |  (?<=:) (?<!::) :    #\n             )                      # OR\n         |                          #   A v4 address with NO leading zeros \n            (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n            (?: \\.\n                (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n            ){3}\n        )\n        \\s*                         # Trailing whitespace\n        $\n    '	1523
