'(-?(?:0|[1-9]\\d*))(\\.\\d+)?([eE][-+]?\\d+)?'	55,113,233,287,288,302,323,340,355,383,422,436,507,510,580,594,602,622,627,729,752,759,780,849,852,866,878,927,935,961,989,1003,1004,1007,1012,1015,1025,1032,1033,1054,1078,1086,1087,1122,1158,1184,1194,1199,1221,1247,1269,1328,1469,1495,1498,1501,1509,1511,1517,1580,1634
'^[ ]*(#.*)?$'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        '	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1054,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?'	147,181,220,225,278,287,296,323,355,432,436,510,559,602,774,814,819,925,927,936,995,1003,1068,1104,1150,1211,1247,1263,1269,1301,1328,1366,1439,1469,1495,1498,1509,1536,1555,1580
'\r?\n'	12,113,190,287,412,433,537,602,700,759,852,927,961,1003,1054,1087,1120,1159,1202,1221,1240,1258,1269,1274,1415,1426,1469,1498,1509,1511,1544,1580
'(?:\\r\\n)?[ \\t]+'	220,323,355,436,510,559,728,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1416,1439,1469,1495,1498,1536,1555
'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'	31,287,302,323,355,381,422,476,602,732,849,866,878,1004,1012,1054,1086,1087,1158,1184,1495,1509,1517,1580,1634
'^(?:\\s*(?:,\\s*)?([^ \\t\\r\\n=]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\\\\\"]|\\\\.)*?(?=\\")|(?<!\\")[^ \\t\\r\\n,]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'^(?:\\s*(?:,\\s*)?([^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\0-\\x08\\x0A-\\x1f\\x7f-\\xff\\\\\\"]|\\\\[\\0-\\x7f])*?(?=\\")|(?<!\\")[^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'&#?\\w+;'	169,179,220,296,325,454,456,506,591,622,651,666,707,819,927,950,970,1003,1055,1076,1247,1469
'^\\s*(?:var)?char\\s*\\(\\s*(\\d+)\\s*\\)\\s*$'	82,89,302,323,355,422,849,866,878,923,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'^(-?\\d+)(\\d{3})'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'(\\d{4})-(\\d\\d?)-(\\d\\d?)$'	302,323,355,422,430,672,849,866,878,1004,1012,1086,1158,1184,1481,1495,1517,1538,1580,1634
'<(/?)\\s*b\\s*>'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1184,1495,1517,1580,1634
'<(/?)\\s*i\\s*>'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1184,1495,1517,1580,1634
'^(?:1-?)?(\\d{3})[-\\.]?(\\d{3})[-\\.]?(\\d{4})$'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1634
'^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1495,1517,1580,1634
'\\s*(#.*)?$'	287,487,498,602,662,1007,1033,1087,1172,1257,1263,1415,1469,1509,1536,1580,1594,1634
'^(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"^(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"^'''(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^"""(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'\\s*#?\\s*$'	12,147,162,181,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^([\\w., ]+=)?\\s*[\\w\\.]+\\(.*\\)$'	283,332,356,436,518,538,550,670,689,747,787,832,975,1000,1247,1288,1495
'^-r\\s*([^ ])?'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'\\?|[-+]?[.\\w]+$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'\\s*\\\\\\s*(#.*)?$'	287,487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'(?:W/)?"((?:\\\\.|[^"])*)"'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'.*; charset=([\\w\\d-]+);?'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'https?://[^/]*(/.*reset/\\S*)'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
"Decimal\\('(\\d+(\\.\\d*)?)'\\)"	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'	12,287,412,413,510,602,759,774,852,961,1054,1076,1087,1221,1509,1511
'.+SPHEROID\\[\\"(?P<name>.+)\\",(?P<major>\\d+(\\.\\d+)?),(?P<flattening>\\d{3}\\.\\d+),'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'.+UNIT ?\\["(?P<unit_name>[\\w \\\'\\(\\)]+)", ?(?P<unit>[\\d\\.]+)(,AUTHORITY\\["(?P<unit_auth_name>[\\w \\\'\\(\\)]+)","(?P<unit_auth_val>\\d+)"\\])?\\]([\\w ]+)?(,AUTHORITY\\["(?P<auth_name>[\\w \\\'\\(\\)]+)","(?P<auth_val>\\d+)"\\])?\\]$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'(?:(\\w+)=)?(.+)'	302,323,355,422,849,866,878,1004,1012,1086,1158,1481,1495,1517,1538
'^-?\\d+(\\.\\d+)?$'	96,251,252,487,639,1087,1104,1257,1386,1415,1469,1495,1536,1555,1580
'<(/)?([^ ]+?)(?: (/)| .*?)?>'	82,89,302,323,355,422,866,1004,1021,1074,1075,1184,1468,1495,1517
'^([-+])?(\\d\\d?):?(\\d\\d)?$'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'\\s*(<=?|>=?|==|!=)\\s*((\\w|[-.])+)'	287,487,498,602,662,1033,1087,1257,1415,1469,1509,1536,1580,1594,1634
'^(?P<birth>\\d{6})/?(?P<id>\\d{3,4})$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^(\\d{2})[-\\.]?(\\d{4})[-\\.]?(\\d{4})$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^0\\d(\\s|\\.)?(\\d{2}(\\s|\\.)?){3}\\d{2}$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^(\\d{4})[ -]?(\\d{4})[ -]?(\\d{2})[ -]?(\\d{10})$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^(\\s+)?\\{[\\s\\w,\\[\\]\\{\\}\\-\\."\\\':]+\\}(\\s+)?$'	302,323,355,422,849,866,878,1004,1012,1086,1184,1495,1517,1580,1634
'^(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<subminor>\\d+))?'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1580,1634
'^(?P<area>\\d{3})[-\\ ]?(?P<group>\\d{2})[-\\ ]?(?P<serial>\\d{4})$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^{"type":"Point","coordinates":\\[-95.363151,29.763374,18(\\.0+)?\\]}$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1580,1634
'(?P<name>[^-]+)( -(?P<ver>[^-]+) (-py(?P<pyver>[^-]+) (-(?P<plat>.+))? )? )?'	487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^[1-9]\\d{2} ?\\d{2}$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1634
'(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'	1040,1103,1105,1106,1131,1237,1306,1356,1400,1556,1610,1622,1624,1627
'%(?:\\((?P<key>.*?)\\))?(?P<modifiers>[-#0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]'	12,251,287,381,422,602,662,800,1033,1054,1087,1509,1517,1580
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'^(?P<century>\\d{2})?(?P<year>\\d{2})(?P<month>\\d{2})(?P<day>\\d{2})(?P<sign>[\\-+])?(?P<serial>\\d{3})(?P<checksum>\\d)$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1634
'\\+( (?P<data>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^#!.*python[0-9.]*([ \t].*)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'(\\d+)x(\\d+)\\+(-?\\d+)\\+(-?\\d+)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'	302,323,355,422,849,866,878,1012,1086,1158,1495,1517,1634
'^([-+]?)0*(\\d*)((?:\\.\\d*)?)(([eE][-+]?\\d+)?)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<delim>[^\\w\n"\'])(?P<space> ?)(?P<quote>["\']).*?(?P=quote)(?P=delim)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?(\\w+))'	12,287,412,531,602,759,852,961,1054,1087,1221,1509,1511
'^(\\+90|0)? ?(([1-9]\\d{2})|\\([1-9]\\d{2}\\)) ?([2-9]\\d{2} ?\\d{2} ?\\d{2})$'	302,323,355,422,849,866,878,1012,1086,1158,1495,1517,1634
'\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?((?:\\w|\\.)+))\\b'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@]*))?'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<year>\\d\\d\\d\\d)(?:-(?P<month>\\d\\d)(?:-(?P<day>\\d\\d)(?:T(?P<hour>\\d\\d)(?::(?P<minute>\\d\\d)(?::(?P<second>\\d\\d))?)?)?)?)?Z'	12,31,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^\\s*(#.*)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^([0-9]+) ?(.*)\n?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^(.*\\s+)?(.*?)(\\(.*)?'	283,332,339,356,518,538,670,689,787,832,1000,1288
'&(#(\\d+|x[\\da-fA-F]+)|[\\w.:-]+);?'	345,383,662,1033,1087,1257,1415,1536,1557,1580,1594,1634
'\\* (?P<type>[A-Z-]+)( (?P<data>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^(?P<name>\\w+)\\*((?P<num>[0-9]+)\\*?)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<feature>[A-Za-z0-9][A-Za-z0-9\\-]*) ?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\[(?P<type>[A-Z-]+)( (?P<data>[^\\]]*))?\\]'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^content-type:.*multipart/.*boundary="?([^;"\n]*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\* (?P<data>\\d+) (?P<type>[A-Z-]+)( (?P<data2>.*))?'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
"l_ngettext, u?'\\%\\(num\\)s apple', u?'\\%\\(num\\)s apples', 3"	251,252,1087,1104,1257,1386,1415,1469,1495,1536,1555,1580
'(__libc_init)|(GLIBC_([0-9.]+))|(libc(_\\w+)?\\.so(?:\\.(\\d[0-9.]*))?)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(::|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	12,147,245,287,305,602,1248,1317,1501,1505,1509,1638
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<atom>.*?)         # non-greedy up to the next ?= is the atom\n  \\?=                   # literal ?=\n  '	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\]\\]\\n?'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\[\\[\\n?'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\n\\r?\\n$'	147,173,181,201,295,369,959,1025,1177,1276,1496
'\\d+ tests?\\.'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^\\r?\\n\\r?\\n'	147,173,181,201,295,369,959,1025,1177,1276,1496
'^\\d+(\\.\\d+)?$'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'(\\w+(?:\\.c)?|\\W+)'	12,412,549,759,852,961,1054,1087,1221,1511,1580
'\\d+ tests?, listed below'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^([^\\[\\]]+)(\\[.*\\])?$'	0,75,119,768,785,825,1007,1015,1032,1054,1301
'\\d+ tests? from ([a-zA-Z_])'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\d+ tests? from \\d+ test cases?'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^\\[\\s*RUN\\s*\\].*\\.(\\w+(/\\w+)?)'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$'	147,173,181,201,295,369,959,1025,1177,1276,1496
'^\\[\\-+\\] \\d+ tests? from (\\w+(/\\w+)?)'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'	12,412,549,759,852,961,1054,1087,1221,1511,1580
'^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'	100,190,200,619,658,950,1247,1399,1403,1485,1570
'^\\$Version="?1"?;'	12,412,759,774,852,961,1087,1221,1511,1580
'0x([0-9a-fA-F]+)L?'	12,412,759,852,961,1054,1087,1221,1511,1580
'-py([123]\\.?[0-9]?)$'	1104,1257,1263,1290,1386,1415,1536,1580,1594,1634
'/\\*([^*]+|\\*+[^/])*(\\*+/)?'	12,412,759,852,961,1054,1087,1221,1511,1580
'Shipping="?FedEx"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'Customer="?WILE_E_COYOTE"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'Part_Number="?Rocket_Launcher_0001"?;\\s*\\$Path="\\/acme"'	12,412,759,774,852,961,1087,1221,1511,1580
'^\\$Version="?1"?; Customer="?WILE_E_COYOTE"?; \\$Path="/acme"$'	12,412,759,774,852,961,1087,1221,1511,1580
'^-?\\d+$'	43,82,89,90,901,1004,1074,1075,1495
'^(@[a-z]+)?{'	12,412,759,852,961,1054,1087,1221,1511
'\\$<\\d+>[/*]?'	76,737,757,1087,1205,1243,1244,1246,1540
'(\\w+(?::\\w+)?)'	12,412,759,852,961,1087,1221,1511,1580
'Out\\[(\\d+)\\]:\\s?(.*)\\s*'	538,642,747,776,971,1000,1203,1288,1580
'In \\[(\\d+)\\]:\\s?(.*)\\s*'	538,642,747,776,971,1000,1203,1288,1580
'\\\\end{(?:long)?table([iv]+)}'	12,412,759,852,961,1054,1087,1221,1511
'\\\\begin{(?:long)?table([iv]+)}'	12,412,759,852,961,1054,1087,1221,1511
'<title>([^- ]+ - )?Revision \\d+:'	662,1033,1087,1257,1415,1536,1580,1594,1634
'^([A-Z]+)([1-9][0-9]*)(?::([A-Z]+)([1-9][0-9]*))?$'	12,412,759,852,961,1087,1221,1511,1580
'^\\s*(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#?\\s*end\\s+(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'((?:0x[0-9a-fA-F]+\\+?)+)\\s+((?:(?:0x[0-9a-fA-Z]+|<[A-Za-z]+>)\\+?)*)\\s*(#.+)?'	12,412,759,852,961,1087,1221,1511,1580
'^(?P<w>\\d\\d?\\d?)\\.(?P<x>\\d\\d?\\d?)\\.(?P<y>\\d\\d?\\d?)\\.(?P<z>\\d\\d?\\d?)$'	302,323,355,422,866,1004,1184,1495,1517
'^\\s*@?#'	113,147,181,251,498,1087,1267,1555
'u?r?["\\\']'	304,640,662,842,945,1025,1322,1505
'^(0x)?[0-9]+$'	119,768,825,1007,1015,1032,1054,1301
'((a)|(b))(c)?'	12,412,759,852,961,1087,1221,1511
'^(?:(a)|c)(\\1)?$'	12,412,759,852,961,1087,1221,1511
'\x1b\\[(0;3\\d)?m'	416,852,994,1007,1301,1511,1560,1598
'</?xsl:([^>]*)/?>?'	113,147,181,251,498,1087,1267,1555
'^(\\|)?([^()]+)\\1$'	12,412,759,852,961,1087,1221,1511
'^(.*)=([-+]?[0-9]+)'	12,412,759,852,961,1087,1221,1511
'^(0|-?[1-9][0-9]*)$'	306,322,467,505,534,896,1007,1466
'^(\\|)?([^()]+)\\1?$'	12,412,759,852,961,1087,1221,1511
'^(?:SI)?([1-9]\\d{7})$'	302,849,878,1012,1086,1158,1495,1634
'^\\$\\((.*?)\\)(/(.*))?$'	306,322,467,505,534,896,1007,1466
'\\[\\d+ refs\\]\\r?\\n?$'	12,412,759,852,961,1087,1221,1511
'(^|\\n)[ ]{0,3}>[ ]?(.*)'	236,247,552,606,919,1007,1223,1420
'^\\d{15}(\\d{2}[0-9xX])?$'	302,849,878,1012,1086,1158,1495,1634
'^([a-zA-F0-9_-]*)[\\.]?.*$'	306,322,464,467,505,534,1300,1466
'^(Keyed)?(Call|Load|Store)IC_'	306,322,464,467,505,534,1300,1466
'&#(x?[0-9A-Fa-f]+)[^0-9A-Fa-f]'	147,181,190,325,582,622,915,1597
'(?:(?P<a1>a)|(?P<b2>b))(?P<c3>c)?'	12,412,759,852,961,1087,1221,1511
'([Ww]/)?(?:"(.*?)"|(.*?))(?:\\s*,\\s*|$)'	992,1104,1257,1386,1415,1469,1536,1580
'&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#([0-9]+))(;?)'	12,287,510,602,774,1054,1087,1509
'([^\\s;,]+)(?:[^,]*?;\\s*q=(\\d*(?:\\.\\d+)?))?'	992,1104,1257,1386,1415,1469,1536,1580
'^(?:[78]-?)?(\\d{3})[-\\.]?(\\d{3})[-\\.]?(\\d{4})$'	302,849,878,1012,1086,1158,1495,1634
'\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?'	302,849,878,1004,1012,1086,1158,1495
'^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'	306,322,464,467,505,534,1404,1466
'^(#[0-9a-f]+|rgb\\(\\d+%?,\\d*%?,?\\d*%?\\)?|\\d{0,2}\\.?\\d{0,2}(cm|em|ex|in|mm|pc|pt|px|%|,|\\))?)$'	220,927,1122,1263,1290,1469,1580,1594
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:;+*%?!&$\\(\\)_#=~]*))?'	43,330,412,759,852,961,1221,1511
'(?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?'	849,878,1012,1086,1158,1495,1580,1634
'(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'	992,1104,1257,1386,1415,1469,1536,1580
'(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))'	147,181,190,325,582,622,915,1597
'(\\\\*)(?:(?::([a-zA-Z_][a-zA-Z_0-9]*)?()(?:#(.*?)#)?)|(?:<([a-zA-Z_][a-zA-Z_0-9]*)?(?::([a-zA-Z_]*)(?::((?:\\\\.|[^\\\\>]+)+)?)?)?>))'	559,921,1047,1095,1234,1277,1580,1592
'^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'	302,323,355,422,866,1004,1495,1517
'(?smx)\n    (<\\?.*?\\?>)?\\s*\n    <!DOCTYPE\\s+(\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     "[^"]*")\n     [^>]*>\n'	113,147,181,251,498,1087,1267,1555
'^(?:\\.\\s*(include|undef|error|warning|if|else|elif|endif|for|endfor)|\\s*(ifeq|ifneq|ifdef|ifndef|else|endif|-?include|define|endef|:))(?=\\s)'	113,147,181,251,498,1087,1267,1555
'\n    ((?P<name>\\w+)\\s*=\\s*)?\n    (?P<value>\n        True|False|\n        \\d+.\\d+|\n        \\d+.|\n        \\d+|\n        \\w+|\n        [urUR]?(?P<stringval>"[^"]*?"|\'[^\']*\')\n    )\\s*,\n'	992,1104,1257,1386,1415,1469,1536,1580
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  '	43,412,759,852,961,1221,1511,1580
'(a)?a'	12,412,759,852,1087,1221,1511
',?\\s+'	147,162,181,251,619,1087,1267
'(a)(b)?b'	12,412,759,852,1087,1221,1511
'</?(\\w+)'	220,454,666,707,927,1003,1247
'&(#?)(\\w+?);'	173,552,606,800,1223,1420,1469
'%+ ?(.*)\n[ \t]*'	12,412,759,852,961,1221,1511
'^\\d+_\\d+_?\\d*$'	322,467,505,534,712,1216,1466
'&#?[A-Za-z0-9]+?;'	55,225,287,510,602,774,1509
'(?P<a>a)(?P<b>b)?b'	12,412,759,852,1087,1221,1511
'^(?P<type>[A-Z]+) ?\\('	302,849,878,1012,1086,1158,1184
'^([^@]*@)?([^:]*)(:.*)?'	147,181,278,296,432,819,1366
'^([A-Za-z]:)?[/\\\\\\\\]*'	322,467,505,534,712,1216,1466
'\\bNOLINT\\b(\\([^)]*\\))?'	322,416,467,505,534,1404,1466
'\\s*[-\\w]+\\s*:\\s*[^:;]*;?'	220,454,666,707,927,1003,1247
'([\\d.]+)[^(]*(?:\\((.+)\\))?'	12,412,759,852,961,1221,1511
'&#(x?[0-9a-fA-F]+)[^0-9a-fA-F]'	55,225,287,510,602,774,1509
'&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)'	55,200,552,606,1223,1247,1420
'^//(\\s*)TODO(\\(.+?\\))?:?(\\s|$)?'	322,416,467,505,534,1404,1466
'[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'	12,412,759,852,961,1221,1511
'(\\ ?\\ ?\\ ?)\\[\\^([^\\]]*)\\]:\\s*(.*)'	147,181,236,247,919,1007,1395
'&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#(x?[0-9a-fA-F]+))(;?)'	55,225,287,510,602,774,1509
'(?P<replace>(?P<type>>(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	306,322,467,505,534,1007,1466
'(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	306,322,467,505,534,1007,1466
'(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))(\\?subject=\\S+)?'	220,454,666,707,927,1003,1247
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+?)\n    (?:\\.(?P<version>[^._]+))?\n    (?:_(?P<suffix>[^._]+))?\n    \\.dylib$\n)\n'	12,287,602,1054,1087,1509,1580
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'	12,287,602,1054,1087,1509,1580
'\\.?[^.]*'	225,287,510,602,774,1509
'^..?\\...?'	322,467,505,534,1216,1466
'^[\\t ]*\\n?$'	305,1025,1082,1322,1326,1505
'^https?://\\S+$'	82,89,1004,1074,1075,1495
'^v..?.?\\...?.?'	322,467,505,534,1216,1466
'^...?.?\\....?.?'	322,467,505,534,1216,1466
'\x01?\x1b\\[(.*?)m\x02?'	18,602,654,747,1216,1365
'[-+]?(\\d+|\\d*\\.\\d+)$'	82,89,1004,1074,1075,1495
'^<\\/?\\w[\\w\\:\\-]*.*?>'	305,407,1025,1322,1326,1505
'^(https?)://([^/]+)(/.*)$'	82,89,1004,1074,1075,1495
'(\\d+(?:\\.\\d+)*)(/\\d+)?'	287,602,1054,1087,1495,1509
'%module(?:\\s*\\(.*\\))?\\s+(.+)'	322,467,505,534,743,1466
'(.*?[\\]\\}\\)],?)(\\s*)([\\]\\}\\)])'	306,322,534,896,1007,1466
'GET http://([a-zA-Z0-9-_.]+)(:([0-9]+))?'	412,759,852,961,1221,1511
'(.*?[^\\s\\]\\}\\)]+.*?)([\\]\\}\\)],?)\\s*$'	306,322,534,896,1007,1466
',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'	82,89,1004,1074,1075,1495
'^([\\w\\-]+)(?::([\\w\\-]+))?(?::(\\d+),(\\d+))?$'	306,322,467,505,534,1466
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'([a-zA-Z][a-zA-Z_-]*)\\s*(?:=(?:"([^"]*)"|([^ \\t",;]*)))?'	82,89,1004,1074,1075,1495
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+\\s+const(\\s?&|&\\s?)[\\w]+'	322,416,467,505,534,1466
'([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(?:\\s*\\(\\s*([^)\\s]+)\\s*\\))?$'	12,287,602,1054,1087,1509
'(?<!\\\\)<%(?:(#)|(py(?:thon)?\\b)|(?:\\s*(\\w+))\\s*)(.*?)\\s*%>\\n?(?s)'	992,1104,1257,1386,1469,1536
'([A-Z]{3}_ERROR_[A-Z_0-9]+)\\s+=?\\s*\\(?([A-Z_0-9-][A-Z_0-9-+ ]+[A-Z_0-9])'	412,759,852,961,1221,1511
'([\\w.+]+)\\s*\\(#(\\d+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	412,759,852,961,1221,1511
'^([A-Z][A-Z][A-Z])([-+]?[0-9]+)([A-Z][A-Z][A-Z]);([0-9]+)/([0-9]+),([0-9]+)/([0-9]+)$'	412,759,852,961,1221,1511
'(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'	546,830,1028,1039,1223,1420
'\\([^()]*\\bconst\\s+(?:typename\\s+)?(?:struct\\s+)?(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*\\s*(\\/?)>$'	305,407,1025,1322,1326,1505
'<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,407,1025,1322,1326,1505
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '	12,287,602,1054,1087,1509
'(;?)$'	305,1025,1322,1326,1505
'\\.?0+$'	305,1025,1322,1326,1505
'(}?\\s*)$'	322,467,505,534,1466
'^https?://'	192,225,305,1025,1326
'\\*(\\d+)?$'	305,1025,1322,1326,1505
'^\\s*\\*?\\s*$'	322,467,505,534,1466
'[.~]?([abc])\\.?'	1263,1290,1469,1580,1594
'^(\\d:)?(\\S+)-(\\S+)$'	54,111,132,1030,1089
'\\.?(r|-|-r)\\.?(\\d+)$'	1263,1290,1469,1580,1594
'Out\\[\\d+\\]: \\s*?\\n?'	422,602,747,1517,1580
'(\\d*\\.?\\d*)\\s*(\\S*)'	162,251,619,1087,1267
'\\.?(pre|preview|-c)(\\d+)$'	1263,1290,1469,1580,1594
'(pinfo )?(\\?*)(.*?)(\\??$)'	422,602,747,1517,1580
'\\.?(dev|git|bzr)\\.?(\\d+)$'	1263,1290,1469,1580,1594
'\\.?(dev-r|dev\\.r)\\.?(\\d+)$'	1263,1290,1469,1580,1594
'[\\-\\.](dev)[\\-\\.]?r?(\\d+)$'	1263,1290,1469,1580,1594
'^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'	849,878,1012,1086,1158
'(.+) release ([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'	236,247,919,1007,1395
'class (\\w[^\\s:]*)(: public (\\w[^\\s{]*))?\\s*{'	467,505,534,1404,1466
'([^0-9]+)(?: release )?([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'^\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	356,436,538,1247,1288
'(?P<tzd>[-+](?P<tzdhours>\\d\\d)(?::?(?P<tzdminutes>\\d\\d))|Z)'	211,220,1003,1076,1247
'IronPython\\s*([\\d\\.]+)(?: \\(([\\d\\.]+)\\))? on (.NET [\\d\\.]+)'	287,602,1054,1087,1509
u'^\\s*blocktrans(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\\s+|$)'	1012,1086,1158,1495,1580
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	12,287,602,1054,1509
'^<(\\w+\\:?[\\w\\-]*)((?:\\s+[\\w\\:\\-]+\\s*=\\s*([\\\'"]).*?\\3)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'\\s*((?<=[\\\'"\\s])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?'	873,927,1469,1580,1592
u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'	1012,1086,1158,1495,1580
'^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\'[^\']*\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'	849,878,1086,1495,1634
'\n          <\n           (?:mailto:)?\n          (\n              [-.\\w]+\n              \\@\n              [-\\w]+(\\.[-\\w]+)*\\.[a-z]+\n          )\n          >\n        '	552,606,1223,1247,1420
'\n          # Match tail of: [text][id]\n          [ ]?          # one optional space\n          (?:\\n[ ]*)?   # one optional newline followed by spaces\n          \\[\n            (?P<id>.*?)\n          \\]\n        '	552,606,1223,1247,1420
'\\s*#define[ \t]+[^_]*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+[^_]*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]'	441,628,1054,1204,1580
'\n          # Match tail of: [text](/url/) or [text](/url/ "title")\n          \\(            # literal paren\n            [ \\t]*\n            (?P<url>            # \\1\n                <.*?>\n                |\n                .*?\n            )\n            [ \\t]*\n            (                   # \\2\n              ([\'"])            # quote char = \\3\n              (?P<title>.*?)\n              \\3                # matching quote\n            )?                  # title is optional\n          \\)\n        '	552,606,1223,1247,1420
'\r?\n\\d'	614,947,996,1491
'\\s*https?:'	420,1223,1420,1499
'_(unit)?test$'	592,896,1301,1403
'^\\w(\\-?\\w)*$'	422,747,1517,1580
'[a-z]+(_[A-Z]+)?$'	552,606,800,1469
':[ \\t]*(?:#.*)?$'	433,927,1003,1202
'^r(ev)?\\s*(\\d+)'	1263,1290,1580,1594
'_(unit)?test\\.py$'	592,896,1301,1403
'[uU][rR]?[\\\'\\"]'	602,1054,1087,1580
'^v(ersion)?\\s*(\\d+)'	1263,1290,1580,1594
'\\-\\-?\\w+[\\-\\w]*$'	422,747,1517,1580
'\\[(\\d?\\d?\\d?)%\\]'	909,1127,1380,1526
'(?:(?:\n\r?)|^)( *)\\S'	642,776,971,1203
'\\s*https?:.*#egg=(.*)$'	420,1223,1420,1499
'^https?://bitbucket.org'	305,1322,1326,1505
'^https?://bitbucket.org/'	305,1322,1326,1505
'^([a-zA-Z0-9]+)([-](.*))?$'	287,580,602,1509
'(\x01?\x1b\\[[0-9;]*m\x02?)'	287,602,1509,1580
'(\x01?\x1b\\[[0-9;]+m\x02?)'	287,602,1509,1580
'(exit|quit)(\\s*\\(.*\\))?$'	422,747,1517,1580
'\x01?\x1b\\[([0-9;]*)m\x02?'	287,602,1509,1580
'\x01?\x1b\\[([0-9;]+)m\x02?'	287,602,1509,1580
'^https?://github.com/[^/]+/?$'	1025,1322,1326,1505
'^\\S+?:/+(?:[^\\s/]*@)?(\\S+)$'	119,1007,1015,1032
'text/html|application/x(ht)?ml'	1263,1290,1580,1594
"^(\\w[\\s\\w'.-]*)(\\((.*)\\))?"	1263,1290,1580,1594
'^\\s*(?P<self>\\s+\\[self\\])?$'	851,1269,1561,1576
'^#!.*pythonw?[0-9.]*([ \t].*)?$'	1263,1290,1580,1594
'(\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?'	113,1415,1469,1580
'^https?://github.com/[^/]+/[^/]+/?$'	1025,1322,1326,1505
'#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
'^(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'	619,658,1247,1399
'(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'	1004,1074,1075,1495
'#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'	251,498,1087,1555
'<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'	1263,1290,1580,1594
'#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
'\\s*SET\\s+(?:(?:GLOBAL|SESSION)\\s+)?\\w'	113,1415,1469,1580
'((?:\\((?P<id>[0-9]+|RX|CR)\\))*)(?P<str>.+)?'	927,986,1003,1431
'^https?://github.com/[^/]+/[^/]+/tree/[^/]+/?$'	1025,1322,1326,1505
'<meta.*?content=["\\\']*;?charset=(.+?)["\\\'>]'	1263,1535,1580,1594
'^([\\s*,;/])([\\?\\w\\.\\-\\+]+\\w*\\s*)(\\(?.*$)'	422,602,747,1517
'@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?'	287,602,1054,1509
'.*[\\\\/]([^\\\\/]+)[\\\\/][^\\\\/]+[\\\\/]scons[\\\\/]?$'	592,896,1301,1403
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?$\n'	1263,1290,1580,1594
'^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)( *(?P<argument> .+))?'	700,1120,1269,1498
'^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'	119,1007,1015,1032
'^([\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?\\.)*[\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?$'	422,747,1517,1580
'\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'	251,498,1087,1555
'^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'	614,947,996,1491
'(\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\x1b\\][0-9];.*?\x07|[\x01-\x0f]|\x1b\\([AB0])'	385,640,1149,1583
'(?i)([ -](regular|plain|italic|oblique|(semi)?bold|(ultra)?light|extra|condensed))+$'	642,776,971,1203
'(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'	236,247,919,1007
'^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'	1007,1015,1032,1300
'^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.\\d{3,6}Z?)?$'	142,193,631,895
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+)\n\\.whl$\n'	1263,1290,1580,1594
'(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{1,2}:\\d{1,2})?$'	849,878,1495,1634
'\n(rel\\s*=\\s*(?:"(?P<rel1>[^"]*)"|\'(?P<rel2>[^\']*)\'|(?P<rel3>[^>\\s\n]*))\\s+)?\nhref\\s*=\\s*(?:"(?P<url1>[^"]*)"|\'(?P<url2>[^\']*)\'|(?P<url3>[^>\\s\n]*))\n(\\s+rel\\s*=\\s*(?:"(?P<rel4>[^"]*)"|\'(?P<rel5>[^\']*)\'|(?P<rel6>[^>\\s\n]*)))?\n'	1263,1290,1580,1594
'\n                            ^\\s*\n                            (?: (?P<week>   \\d+ (?:\\.\\d*)? ) \\s* [wW]  )? \\s*\n                            (?: (?P<day>    \\d+ (?:\\.\\d*)? ) \\s* [dD]? )? \\s*\n                            (?: (?P<hour>   \\d+ (?:\\.\\d*)? ) \\s* [hH]  )? \\s*\n                            (?: (?P<minute> \\d+ (?:\\.\\d*)? ) \\s* [mM]  )? \\s*\n                            (?: (?P<second> \\d+ (?:\\.\\d*)? ) \\s* [sS]  )? \\s*\n                            $\n                            '	614,947,996,1491
'\n    \\A\\s*                      # optional whitespace at the start, then\n    (?P<sign>[-+]?)            # an optional sign, then\n    (?=\\d|\\.\\d)                # lookahead for digit or .digit\n    (?P<num>\\d*)               # numerator (possibly empty)\n    (?:                        # followed by\n       (?:/(?P<denom>\\d+))?    # an optional denominator\n    |                          # or\n       (?:\\.(?P<decimal>\\d*))? # an optional fractional part\n       (?:E(?P<exp>[-+]?\\d+))? # and optional exponent\n    )\n    \\s*\\Z                      # and optional whitespace to finish\n'	689,1054,1087,1580
'^-?\\d'	171,712,1381
'(#.*)?$'	1007,1015,1032
'%(..?)%'	251,619,1087
'\\.jar?$'	1007,1015,1032
'\\\\?[()]'	252,1087,1495
'(\\.cpp)?$'	1007,1015,1032
'\\s*=?\\s*'	1248,1263,1488
'"([^"]*)",?'	1630,1632,1639
'\r?\n(?=\\S)'	947,996,1491
'\\s*(\\#.*)?$'	1007,1015,1032
'\\s+(\\r?\\n)$'	1054,1087,1580
'(\\.c|\\.cpp)?$'	1007,1015,1032
'(.*)-(?:>?)(.*)'	1007,1015,1032
'[+-]?(\\d*)(.*)'	247,919,1007
'[\\+-]?[0-9\\.]*'	813,927,1003
'unit(?:2|test2?/)'	1415,1469,1580
'\\s*(-?\\d+)\\s*$'	12,1087,1580
'^([^<]*)(/(<.*))?$'	241,874,1249
'(\\w+)(\\(.*?\\))?'	113,1415,1469
'\\\\?(gettext|_)\\('	252,1087,1495
'[\\/][^\\/]+[\\/]?$'	532,577,1314
'pip(\\d(\\.\\d)?)?$'	1263,1580,1594
'([^\\(]*)(\\(.*\\))?'	241,874,1249
'\\*([^,]+)(?:,(.*))?'	262,267,268
'.*brick_.*?(n?)_wg.*'	262,267,268
'^[^ ]*/([^ ]+)( .*)?'	1007,1015,1032
'(?:[^:]*\\.)?([^:]*:)'	1054,1087,1580
'^([^<]+)[<]?(.*)[>]?$'	241,874,1249
'^.*-copy(?:-(\\d)*)?$'	1121,1320,1355
'.*(\\.ipy|\\.py[w]?)$'	422,747,1517
'\\s*,?\\s*new Array\\('	147,181,456
'\\w+\\s+\\[?(\\w+)\\]?'	560,1317,1501
'.*(\\.so|\\.py[cod]?)$'	422,747,1517
'(\\w+)(?:\\[(\\w+)\\])?'	147,181,1087
'^\\d+\\.\\d+(\\.\\d+)?$'	190,710,1288
'(([^-/]+)-?([^/]+)?)/?.*'	241,874,1249
'([0-9]+)([DdHhMm]|[sS]?)'	1004,1075,1495
'^\\s*finally:\\s*(#.*)?$'	1269,1335,1498
'\\*(?:/(?P<step>\\d+))?$'	927,1003,1469
'\\:(\\w+)\\:`~?\\.?(.+?)`'	1415,1469,1580
'.*_runfac(\\d*\\.?\\d*).*'	262,267,268
'easy_install(-\\d\\.\\d)?$'	1263,1580,1594
'(.*):\t?........ (.) (.*)$'	12,1054,1087
'\\\\([0-9a-fA-F]{1,6})\\s?'	113,147,181
'^RADIO/radio[.](.+[.])?img$'	968,1016,1116
'([^\\(]*)(\\((.*)%(.*)\\))?'	241,874,1249
'^(\\s*)(def|class)(\\s.*)?$'	498,633,1235
'(\\d+(\\.\\d+)?) (K|M|G|T)b?$'	12,101,827
'^([^.]+)[.]([^.]+)[.]?([^.]*)'	241,874,1249
'(\\d+)\\.(\\d+)(?:\\.(\\d+))?'	1415,1469,1580
'\\s?([a-zA-Z_\\d]+tset)\\s+fed'	1025,1215,1423
'^(.*?)\\s?((?:ssh\\-|ecds).+)$'	947,996,1491
'^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'	947,996,1491
'^https?://github.com/([^/]+)/?$'	1322,1326,1505
'(.*)_\\+?wg_.*_(h.*?)_o(\\d*).*'	262,267,268
'(?:py.*-)?([\\d\\.]+)(?:-(\\w+))?'	1415,1469,1580
'&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'	31,476,732
"invalid literal for int().*: '?'?"	12,1087,1580
'\\s*(-?\\d+)\\s*-\\s*(-?\\d+)\\s*$'	12,1087,1580
'^(.*?)\\s*<(?:URI:|URL:)?([^<>]+)>$'	757,1087,1330
'^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'	1007,1015,1032
'([^;?#]*)(;[^?#]*)?(\\?[^#]*)?(#.*)?'	107,1225,1638
'^\\s*(([A-Z][a-z]*)+),?\\s*# (\\d+)$'	462,690,1119
'([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'	947,996,1491
'\\$\\{([^\\d}][^}:]*)(?::([^}]*))?\\}'	52,188,597
'(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'	1415,1469,1580
'^/?[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?/?$'	1121,1320,1355
'\\b(E?TSM?_(ASSERT[A-Z_]*|FAIL))\\s*\\('	0,139,785
'<type>boost::(lazy_)?(enable|disable)_if'	241,874,1249
'([^<>= ]+)(?:\\s*([<>=]{1,2})\\s*(.*))?$'	242,930,1323
'^/?[a-zA-Z0-9_.-]+(/[a-zA-Z0-9_.-]+)*/?$'	1121,1320,1355
'%(@|d|f|lld|\\d+\\.?f|\\d+\\.\\d+f|\\d+d)'	194,199,289
'^#T (gmake |pymake )?([a-z-]+)(?:: (.*))?$'	1007,1015,1032
u'<img [^>]*\\bid="plugin_obj_(\\d+)"[^>]*/?>'	1121,1320,1355
'^https?://github.com/([^/]+)/([^/]+)($|/.*$)'	1322,1326,1505
'\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'	1025,1215,1423
'(?:.*\\()?(?P<name>[-\\w*\\.]+)(?:,|\\)?.*)?'	257,1319,1448
'^([,;/%?]|!!?|\\s*)\\s*([\\w\\.]+)(\\s+.*$|$)'	422,602,747
'get_ipython\\(\\)\\.magic\\(u?["\\\']%?autopx'	747,1517,1580
'(?:")?Dup(?:licate)?(?:d)?(?:")? of .*?(\\d+)'	1007,1015,1032
'^([ \t]*class +[a-zA-Z0-9_]+) *( *) *((=.*)?):'	12,1054,1087
'&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'	113,147,181
'^(?P<chunk>[^\\r\\n]+)|(?P<newline>\\n|\\r\\n?)'	381,1054,1087
'(js_Execute|CallHook) ([^ ]+) ([^ ]+ )?([^ ]+ms)'	1007,1015,1032
'^https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$'	1322,1326,1505
u'^\\s*(?:(?:else )?if|for|switch|while|with)(\\()'	304,1025,1322
'\\b(throw|try|catch|TSM?_ASSERT_THROWS[A-Z_]*)\\b'	0,139,785
'[-+]?(\\d+(\\.\\d*)?|\\d*\\.\\d+)([eE][-+]?\\d+)?'	758,1246,1540
'(.+\\.db)\\r\\n?(.+)(?=sh-3.00# cat /tmp/netshare)'	1269,1469,1498
u'^([a-z0-9.-]+|\\[[a-f0-9]*:[a-f0-9:]+\\])(:\\d+)?$'	1012,1158,1580
'(?P<name>[\\w-]+)\\s*\\(\\s*(==\\s*)?(?P<ver>[^)]+)\\)$'	1263,1580,1594
'(\\d+)-(\\d+)-(\\d+) (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?'	1415,1469,1580
'^@@ -([0-9]*)(?:,([0-9]*))? \\+([0-9]*)(?:,([0-9]*))? @@'	696,1025,1322
'(?P<first>\\d+)(?:-(?P<last>\\d+))?(?:/(?P<step>\\d+))?$'	927,1003,1469
u'\\s*function\\s*(?P<name>[a-zA-Z_$]\\w*)?\\(.*\\)\\s*\\{?'	304,1025,1322
'graph(?P<graphNumber>\\d+)_(?P<res>.*?)_?(?P<optNumber>\\d+)?$'	1099,1129,1472
'released on (\\w+\\s+\\d+\\w+\\s+\\d+)(?:, codename (.*))?(?i)'	337,992,1112
'^([^/]|/[^/])*\\bvoid\\s+([Tt]est\\w+)\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'\\bstatic\\s+\\w+\\s*\\*\\s*createSuite\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'	381,1054,1087
'(?P<error>.+?) at .+? line (?P<line>\\d+)(, near "(?P<near>.+?)")?'	304,1025,1322
'^.+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,3}|[0-9]{1,3})(\\]?)$'	840,1495,1608
'(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'	220,1003,1247
'(?:(?P<jarfile>[\\w\\d.\\-\\_\\\\/]+).jar\\:)|(?:\\s*(\\#.*)?)\\s*$'	1007,1015,1032
u'^\\s*(?:@outlet\\s+)?[a-zA-Z_$]\\w*\\s+[a-zA-Z_$]\\w*\\s+@accessors\\b'	304,1025,1322
'^([01]?[0-9])~([0-9]{2})~([0-9]{4})~([0-9]{1,2})~([0-9]{2})~([0-9]{2})$'	1269,1469,1498
'^\\s*blocktrans(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?(?:\\s+|$)'	849,878,1634
'\\bclass\\s+(\\w+)\\s*:\\s*public\\s+((::)?\\s*CxxTest\\s*::\\s*)?TestSuite\\b'	0,139,785
'^((?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	251,498,1267
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(\\{)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	304,1025,1322
'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?\\s*'	849,878,1634
'DOCTYPE\\s+(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	220,927,1469
'^\\(?(?P<re>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?)??(?P<im>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?j)?\\)?$'	518,620,787
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1054,1087,1580
'^\\s*\\d+\\s+(?P<name>\\S+)\\s+(?P<size>-?\\d+)\\s+(?P<bytesLeaked>-?\\d+)\\s+-?\\d+\\s+(?P<numLeaked>-?\\d+)'	1007,1015,1032
'[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'	1004,1495,1580
'%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'	1007,1015,1032
'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	220,927,1469
'(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	534,1007,1466
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	1004,1074,1075
'(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})(?: (?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6}))?)?'	927,1003,1469
'^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)( r\\d+)?$'	1012,1158,1580
'\n                            \\s* ([^\\s;]+) \\s*            #content-coding\n                            (;\\s* q \\s*=\\s* ([0-9\\.]+))? #q\n                            '	1054,1087,1580
'(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{2}:?\\d{2})?$'	1012,1086,1580
'(?x)\n    ^\n    (?: (\\w+):                     )?  # optional label at start of line\n        \\s* (\\.?\\w+)                   # optional spaces, (pseudo-)opcode\n    (?: \\s+ ([+-]?\\w+ | \\([^)]*\\)) )?  # optional first immediate operand\n    (?: \\s+ ([\\w,-]+  | \\([^)]*\\)) )?  # optional second immediate operand\n    (?: \\s* (?:\\#.*)               )?  # optional spaces and comment\n    $'	1007,1015,1032
'    # mere offset\n                ^\n                &?                                          # possible ampersand\n                (       0                                       # just zero\n                |       [1-9]{1,1}[0-9]*        # decimal\n                |       0[0-7]+                         # octal\n                |       0x[0-9a-f]+                     # hex\n                )\n                $\n                '	1007,1015,1032
'\n    (?:\n        ([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*list\\(\n            (\n                (?:\n                    \\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                    )\n                    \\s*,\\s*\n                )*\n                (?:\n                    (?:".*?")|              # double quotes\n                    (?:\'.*?\')|              # single quotes\n                    (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                )?                          # last one\n            )\n        \\)\n    )\n'	332,689,1007
'        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=[0-9]|\\.[0-9])        # ...a number (with at least one digit)\n        (?P<int>[0-9]*)          # having a (possibly empty) integer part\n        (\\.(?P<frac>[0-9]*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?[0-9]+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>[0-9]*)         # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'	287,602,1509
'        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'	1054,1087,1580
'    # indirect offset\n                ^\\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \\.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \\)$'	1007,1015,1032
'\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    '	332,689,1007
'^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'	332,689,1007
'/=?'	636,1125
'</?u>'	169,179
'\r\n?'	737,1438
'.py\\w?$'	757,1087
'</?a.*?>'	169,179
'https?://'	819,1340
'^(\\S+):?'	996,1491
'/\\.svn/?'	147,181
'([?*]+/?)'	636,1125
'[-+]?\\d+'	1246,1540
'[+-]?\\d+'	374,1618
'</?pre.*?>'	1050,1350
'(\\d*)(:?)'	1223,1420
'\r?\n\r?\n'	640,662
'^x?vd[a-p]$'	1223,1420
'^((x?v|s)d)'	1223,1420
'\\%(-?\\w+)'	1054,1198
u'\\s*,?\\s*'	689,737
'https?://.*'	1269,1498
'^http(s)?://'	370,819
'&#([0-9]+);?'	169,179
':\\s*(#.*)?$'	602,1054
'(\\.[\\d]+)?$'	296,819
'^https?://\\w'	1495,1634
'([^,;]+[,;]?)'	1007,1301
'^<p( [^>]+)?>'	757,1087
'^s(\\d+)(-c)?'	1004,1495
'^[-+]?[0-9]+$'	826,891
'</?(?:b|em|i)>'	169,179
';\\s*(--.*?)?$'	1087,1555
'\\d+(\\.\\d*)?'	1246,1540
u'^[FE]?[0-9]+$'	332,689
'files? changed'	1632,1639
'^(unit)?tests?$'	640,662
'<<<(-?\\d+?)>>>'	147,181
'\\n\\r?[\\t ]*$'	1469,1621
' ?(?:,| AND ) ?'	109,182
'^get_bill_text?'	109,182
'(https?://\\S+)'	686,1011
'\\A\\d+(l|L)?\\Z'	518,787
'-py(\\d\\.?\\d?)'	1263,1580
'&(#?)(x?)(\\w+);'	175,508
' -[HS]J \\d+;? ?'	109,182
'({[^}]+})?(\\w+)'	492,1364
'(const)?\\s*int$'	241,1249
'(-?\\d+)(\\d{3})'	296,819
',[ ]*([-]?\\d+|n)'	1317,1501
'(const)?\\s*long$'	241,1249
"'(.*?)(?<!\\\\)',?"	1269,1498
'(const)?\\s*float$'	241,1249
'\\\\?(loc)\\(.*?\\)'	391,872
'^(.*)\\|(-?[0-9]+)$'	1004,1495
'@\\w+( [^{}:\n]+)?:'	757,1087
'-?\\d+(?=\\s|\\]|,)'	1248,1488
'(const)?\\s*double$'	241,1249
'^[-+]?([0][0-7,]*)$'	171,1381
'projects/([^/]+)/?$'	354,379
'([$\\\\%&@]+)?(\\w+)'	305,1505
'/(developers/)?apps/'	391,872
'(</?(?:ul|li)[^>]*>)'	1228,1231
'by ([^;(\n]+;?|\\w+)'	109,182
'.*_?column_(\\d+)_.+'	1415,1580
'^[-+]?[a-zA-Z0-9_]+$'	391,872
'.*\\?.*token=(.*)(&?)'	147,181
'x86\\s+\\[?(\\w+)\\]?'	1317,1501
'[\\.\\-_ ]?[Ee](\\d+)'	1269,1498
'\\$?(\\d+):\\$?(\\d+)'	55,729
'^@(\\S+)\\s*:(.*\\n?)$'	1054,1198
'([+-]?[\\d\\.]+)(\\S+)'	63,401
'^[-+]?0x[0-9a-fA-F,]+$'	171,1381
'\\.(js|java)(?:\\.in)?$'	1015,1032
'^[-+]?(0|[1-9][0-9,]*)$'	171,1381
'^.*?(\\d+)([\\w\\s]+)?$'	1025,1326
'(.*?\\W*)(\\w+)(\\W.*?)?'	241,1249
'^(\\d+)L?:|^\\((\\d+)L?,'	1415,1580
'.*lib(n?cursesw?)\\.so.*'	1087,1580
'(https?://|git://)github'	295,1496
'(?:https?://)?([^/]*)/.*'	386,1181
'\\d+(\\.)?\\d*[eE]-?\\d+'	518,787
'(const)?\\s*char\\s*\\*?$'	241,1249
'([idel])|(\\d+):|(-?\\d+)'	962,1557
'\\[\\d+ depth=(-?\\d+)\\]'	251,1111
'^([+-])(\\d{2}):?(\\d{2})$'	103,130
'(id|.+_id)(\\d+)((?:-bb)?)'	241,1249
u'^[JB]?[0-9]+([.][0-9]*)?$'	332,689
'Input #0, ([\\w,]+)?, from'	391,872
'^var _0x[a-f0-9]+ ?\\= ?\\['	1025,1379
'image/(gif|p?jpeg|(x-)?png)'	1193,1552
'(^| )`\\w([^`]*?\\w)?`($| )'	1087,1580
'({@link(?:plain)?\\s[^}]+})'	757,1087
'<(/?)([:a-z0-9_\\-]*)(.*?)>'	425,1050
'([\\w]*)([^:=]*:?=?)([sif]?)'	602,747
'^[-+]?[0-9][0-9,]*\\.[0-9]*$'	171,1381
'(?sm)\\A.*?!( LaTeX Error:)?'	757,1087
'\x03[0-9]{1,2}(,[0-9]{1,2})?'	1269,1498
'range\\([ ]*([-]?\\d+|n).*\\)'	1317,1501
'^(\\S+ \\S+ \\S+ \\S+: )?(.*)$'	440,542
'(%?):([a-zA-Z][a-zA-Z0-9_-]*)%'	1246,1540
u'^([0-9]+x)*[0-9]*[*]?(s\\W)?$'	332,689
'(const-)?([A-Za-z0-9]+)\\*?\\s+'	1054,1198
'^__[_A-Za-z0-9]*[A-Za-z0-9]+_?$'	640,662
'^(\\d+)\\s+([+-]\\d\\d:?\\d\\d)$'	103,130
'(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'	251,1087
'^((unit)?test.*|smoketest)\\.py$'	640,662
'\\s*:?\\s*([\\w\\.]+\\s*,?\\s*)*'	757,1087
' \\(Unprocessed\\)(?:\\[\\d+\\])?'	927,1003
'\\\\usepackage(\\[.*?\\])?{(.*?)}'	757,1087
'(?:const-)?([A-Za-z0-9]+)\\*?\\s+'	1054,1198
'.*?\\n?.*?coding[:=]\\s*([-\\w.]+)'	757,1087
'^(\\S.*?)??[=\\-\\(\\$\\\'\\"][#>]'	1087,1555
'^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$'	55,908
'^(<=|>=|<|>|!=|==)?\\s*([^\\s,]+)$'	1263,1290
'(^[ ]*[+]?[\\(\\)0-9/\\/\\.\\- ]+$)'	717,1229
'^\\n?namespace\\s+\\w+\\s*{\\s*\\n?$'	241,1249
'([^\\?\\!]*\\?)?([^\\?\\!]*\\!)?(.*)'	86,88
'(\\S+)\\s*->\\s*(?:\\[([^\\]]*)\\])?$'	1248,1488
'%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'	308,1216
'(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'	386,1181
'\\smarkdown(=[\\\'"]?[^> ]*[\\\'"]?)?'	236,1395
'var (_0x[a-f\\d]+) ?\\= ?\\[(.*?)\\];'	1025,1379
'(.*),\\s+((\\w+\\.?) (\\d+), (\\d{4}))'	109,182
'"QOOXDOO_PATH"\\s*:\\s*"([^"]*)"\\s*,?'	1043,1619
'(\\s*#include\\s+<)(.*?\\.hpp)?(>\\s*)?'	241,1249
'(?P<required>.)(?P<type>.)(?P<multi>@?)'	602,747
'^(([^:/?#]+):)?(//([^/?#]*):([^/?#]*))?'	1269,1498
'(\\S+):(\\d+): \\[(\\S+)(, \\S+)?] (.*)'	1223,1420
'^[-+]?[0-9]+(\\.[0-9]*)?[eE][-+][0-9]+$'	171,1381
'^\\s+(~?[_a-zA-Z][a-zA-Z0-9_.]*)\\s*.*?'	251,1087
'#[\\s]*?(TODO|FIXME|HACK|XXX)[\\s:]?(.+)'	422,1644
'<link rel="pingback" href="([^"]+)" ?/?>'	126,1340
'^\\d*:\\s+(\\w+)(?:@)?(\\w+)?:\\s+<(.+)>'	614,947
'^([a-zA-Z_][a-zA-Z_0-9]*)(?:-([0-9]+))?$'	1004,1495
'^(<=|>=|<|>|!=|={2,3}|~=)?\\s*([^\\s,]+)$'	1263,1580
"invalid literal for long().*: '?0xOoops'?"	12,1087
'(grubby version)?(\\s)?(\\d+)\\.(\\d+)(.*)'	1317,1501
'^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'	602,1054
'([0-9]+\\.[0-9]+\\.[0-9]+)\\s*(\\(\\S*\\))?'	1317,1501
'(const)?.*::basic_string<.*>\\s*(\\*|\\&)?$'	241,1249
'\\s?["\']([a-zA-Z_"\'\\s\\d]+)["\']\\s+tset'	1025,1423
'http(s)?\\://([\\w\\.-]*)(\\:(\\d+))?(/.*)?'	147,181
'^\\d*:\\s+([\\w.]+)(?:@)?(\\w+)?:\\s+<(.+)>'	996,1491
'^..\\s+(.+?)//(.+?)(\\s*\\|\\s*(\\d+))?\\s*$'	241,1249
'^\\s*(>>> )?(\\.\\.\\. )?from .* import .*\\*'	518,787
'[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'	386,1181
'(--|-)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'	602,747
'^(\\[.*?[Pp][Aa][Tt][Cc][Hh].*?\\])?\\s*(.*)$'	103,130
'\\s*(<=?|>=?|===?|!=|~=)\\s*((\\w|[-.*_!+])+)'	1263,1580
'(\\S+)?\\s*->\\s*(\\S+)\\s*\\[(.*?):(.*?)\\]$'	1248,1488
'<img class=thumbnail-img (?:.* )?src=(http.*)>'	386,1181
'^([a-z]\\w*)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)'	1506,1510
'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'	757,1087
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'flashvars: [\\\'"](?:.*&)?file=(http[^\\\'"&]*)'	386,1181
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)$'	1506,1510
'virtual (/\\*.*?\\*/ )?(.*?) (.*?) (.*?)\\(\\w?'	602,1054
'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'	332,689
'(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'	602,747
'((msgasser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'<meta name="description" content="(.*)"(?:\\s*/)?>'	386,1181
'^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'	305,1505
'^(\\s+\\(parent\\s+)(\\w+)(\\s+\\((\\w+)\\))?(.*)$'	1054,1198
'(?P<op>([<>=!~]=)|[<>])\\s*(?P<vn>(\\w|[.-])+\\*?)'	1263,1580
'(([wum]asser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'^(.+?)[ \\._\\-]\\[?([0-9]+)((?:[x-]\\d+)+)[^\\/]*$'	1269,1498
'((?:@\\S+\\.(?:app_)?))(after_request)(\\b\\s*$)(?m)'	337,1112
'(?P<mimetype>[^;]+).*(?:charset=(?P<charset>[^ ]+))?$'	906,1404
'^(\\s+\\(of-object\\s+)(\\w+)(\\s+\\((\\w+)\\))?(.*)$'	1054,1198
'n( mod \\d+)? (is|in|within|(not in))( not)? ([^\\s]+)'	919,1007
'https://(github.com)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$'	709,1601
'(?P<names>\\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?'	602,747
'(?P<code>[ADEFIJ])(?P<width>\\d+)(?:\\.(?P<prec>\\d+))?'	332,689
'((msgasser(t|ted)NoTrace))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'	1025,1322
'^([A-Z]\\w+:[a-z0-9-]+)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'(const)\\s+((unsigned|signed)?(bool|char|short|int|long))'	241,1249
'^\\s*\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	251,1087
'<STREAM APP="(http://.*)" FULLPATH="/?(/.*\\.flv\\?[^"]*)"'	386,1181
'\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^\\)]+)\\)'	1025,1322
'^(\\s*)(, | {2})((\\s*(\\w+)(\\s+|::)\\w+\\s*.*?,?)+)\\s*$'	241,1249
'(?:&([a-zA-Z][-.a-zA-Z0-9]*)|&#(x[0-9a-zA-Z]+|[0-9]+))(;?)'	12,1087
'^([A-Z]\\w+::[a-z0-9-]+)\\s*:?(\\s*\\(.*\\)\\s*){0,2}\\s*$'	1054,1198
'^\\s*(>>> )?(\\.\\.\\. )?raise((\\s*\\(\\s*)|\\s+)\\w+\\s*,'	518,787
'^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'.*SickBeard\\-win32\\-alpha\\-build(\\d+)(?:\\.\\d+)?\\.zip'	1269,1498
'((?<!{)(?:{{)+|(?:}})+(?!})|{(?:[^{](?:[^{}]+|{[^{}]*})*)?})'	568,1144
'((msgasser(t|ted))) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'	568,1144
'(?P<key>.*)\\s*=\\s*u?\\[?[\\\'\\"](?P<value>.*)[\\\'\\"]\\]?'	295,1496
'^(.+?)[ \\._\\-][Ss]([0-9]+)((?:[\\.\\-_ ]?[Ee]\\d+)+)[^\\/]*$'	1269,1498
'/\\* \\[([^\\]]*.*?)] \\*/[ \\t](.*[* ]+)(\\w+)(\\[ *])?[\\),]'	602,1054
'use\\s+encoding(?:::source)?\\s+([\'"])(?P<encoding>[\\w-]+)\\1'	305,1505
'^(\\w+)\\s+(\\w+)\\s+(\\w+)\\s+(\\S+)\\s+(([a-fA-F0-9]{2}:?){6})'	1317,1501
'%(?:%|(\\(\\w+\\))?([#0 +-]?(?:\\d+|\\*)?(?:\\.\\d+)?[hlL]?\\w))'	1223,1420
'FOREIGN KEY \\((.*?)\\) REFERENCES (?:(.*?)\\.)?(.*?)\\((.*?)\\)'	113,1469
'[a-z,_]*_u:[a-z,_]*_r:[a-z,_]*_t(?:\\:[s,\\-,0-9,:[c,\\,,0-9]*]*)?'	1317,1501
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*("\\S[^"]+\\S")\\s*,?.*'	1459,1531
'\\<\\!\\-\\-\\#\\s?[A-z0-9_-]*\\s?\\:s?[A-z0-9\\s_-]*\\s?\\-\\-\\>'	1021,1468
'((msgasser(t|ted)NoTrace)) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'[a-z,_]*_u:[a-z,_]*_r:([a-z,_]*_t)(?:\\:[s,\\-,0-9,:[c,\\,,0-9]*]*)?'	1317,1501
'\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'	1054,1198
'https://(github.com|bitbucket.org)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$'	709,1601
'^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+Exception|\\s*(\\(\\s*)+Exception)'	518,787
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*([\\S\\s+<\\(\\)"]+) *,?.*'	1459,1531
'^\\s*([0-9]+:[0-9]+)\\s*\\|\\s*(.+?)(\\s+\\(([0-9]+:[0-9]+)\\))?\\s*$'	165,1545
'(?P<title>.+) (\\((class in )?(?P<id>[\\w\\.]+)( (?P<descr>\\w+))?\\))$'	251,1087
'^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'	518,787
'\\b((http|ftp)://[^ \\t\\n\\r\\f\\v<\'"]+|RFC[- ]?(\\d+)|PEP[- ]?(\\d+))'	305,1505
'^\\s*@param\\s+(?P<type>\\w+)\\s+\\$(?P<name>\\w+)(?:\\s+?(?P<doc>.*?))?'	305,1505
'\\d+-\\d+-\\d+([\\s|T|t]\\d+:\\d+:\\d+.\\d+(Z|(\\s?[\\-|\\+]\\d+:\\d+)))?'	171,1381
'((DB|User|Msg|MsgAssertion)Exceptio(n))\\(( *)(\\d+) *,? *(\\S+.+\\S) *,?'	1459,1531
'^\\s*@method\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\w+)(\\(\\))?(?P<doc>.*?)$'	305,1505
'\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))'	274,573
'^\\s*@var\\s+(\\$(?P<variable>\\w+)\\s+)?(?P<type>\\w+)(?:\\s+(?P<doc>.*?))?'	305,1505
'(\\d+) files? changed, (\\d+) insertions?\\(\\+\\), (\\d+) deletions?\\(\\-\\)'	1269,1498
'^[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*$'	492,1364
'^(\\d+\\.\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?$'	1263,1290
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'	1054,1087
'.*(?:PostgreSQL|EnterpriseDB) (\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:\\.\\d+)?(?:devel)?'	1415,1580
'YEAS -?\\s?(\\d+)(.*)NAYS -?\\s?(\\d+)(.*)ABSENT( OR NOT VOTING)? -?\\s?(\\d+)(.*)'	109,182
'^((http[s]?):\\/)#?\\/?([^:\\/\\s]+)((\\/[\\w\\-\\.]+)*\\/)*([\\w\\-\\.]+[^#?\\s]+)'	1028,1039
'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263,1290
'(require|define)\\s*\\(\\s*([\\\'\\"][^\\\'\\"]+[\\\'\\"]\\s*,)?\\s*\\[([^\\]]+)\\]'	247,1007
'(?:\\W+File "(?:.*)", line (?:.*)\\W+(?:.*)\\W+\\^\\W+)?Syntax(?:Error|Warning): (?:.*)'	1263,1580
'\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'	1025,1322
'<meta[^>]*content\\s*=\\s*[\'"]?text/html;\\s*charset\\s*=\\s*([^ \'">]+)\\s*[\'"]?[^>]*>'	1228,1231
'^(?P<path>.*\\.java):(?P<line>\\d+): (?P<warning>warning: )?(?:\\[\\w+\\] )?(?P<error>.*)'	1025,1322
'^Parse error:\\s*(?:\\w+ error,\\s*)?(?P<error>.+?)\\s+in\\s+.+?\\s*line\\s+(?P<line>\\d+)'	1025,1322
"\\svalues\\s*(\\(((?<!\\\\)'[^\\)]*?\\)[^\\)]*(?<!\\\\)?'|[^\\(\\)]|(?:\\([^\\)]*\\)))+\\))"	422,628
'(?P<fence>^~{3,})[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*(\\{\\.(?P<lang>[a-zA-Z0-9_-]*)\\})?[ ]*$'	236,1395
"((?P<prefix>[$@%\\\\*&]+)\\s*)?(?P<scope>(::)?\\b((?!\\d)\\w*?(::|'))*)(?P<name>(?!\\d)\\w+)$"	305,1505
'(abstract[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?function[ \t]+?\\w+\\(.*?\\)'	498,1495
'^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	1087,1555
'^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'	305,1505
'^(application/(asx|x-(mplayer2|ms-wmp))|video/x-ms-(asf(-plugin)?|wm(p|v|x)?|wvx)|audio/x-ms-w(ax|ma))$'	391,872
'\\s*(?P<name>.+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1263,1580
'(?P<symbol>[^\t]+)\t(?P<filename>[^\t]+)\t(?P<ex_command>.*?);"\t(?P<type>[^\t\r\n]+)(?:\t(?P<fields>.*))?'	1025,1505
'^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'	305,1505
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(?:[\\w_]|\\[).+(;)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	1025,1322
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\((\\s+)?.+?(\\s+)?\\)\\s*(?:(?:\\{|//.*|/\\*.*\\*/)\\s*)?$'	1025,1322
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	72,1087
'\n        (<meta\n        (?:\\s+[\\w-]+\\s*=\\s*(?:".*?"|\'.*?\'))+  # attributes\n        \\s*/?>)\n        '	305,1505
'(?x)(\n        (?:0|[1-9]\\d*)\n        (\\.\\d+)?\n        ([eE][-+]?\\d+)? |\n        (0x[a-fA-F0-9]+)\n    )'	636,1125
'^for\\s+((?:\\(?)\\s*[A-Za-z_][A-Za-z_0-9]*(?:\\s*,\\s*(?:[A-Za-z_][A-Za-z0-9_]*),??)*\\s*(?:\\)?))\\s+in\\s+(.*):'	927,1202
'((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'	498,1495
'^application/x-java-((applet|bean)(;jpi-version=1\\.5|;version=(1\\.(1(\\.[1-3])?|(2|4)(\\.[1-2])?|3(\\.1)?|5)))?|vm)$'	391,872
'(\\s+|(?<=\\s)(?::[a-z-]+:)?`\\S+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	251,1087
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)[$]?(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	666,707
'^v?(\\d+!)?(\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?(\\+([a-zA-Z\\d]+(\\.[a-zA-Z\\d]+)?))?$'	1263,1580
'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})[T ](?P<hr>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})(?P<fractional_sec>\\.\\d+)?'	159,1155
'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(?P<second_float>(\\.\\d+)?)Z'	1246,1540
'\n      <\n      (?:mailto:)?\n      (\n         [-.\\w]+\n         \\@\n         [-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+\n      )\n      >'	55,200
'^(\\s+(,|:\\s+)?|struct\\s+)(\\w+)\\s*<((\\s*(typename\\s+)?\\w+\\s*(=\\s*.*|<(\\s*\\w+\\s*,?)+>\\s*)?,?)+)\\s*>\\s+((struct|class).*?)?$'	241,1249
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	82,89
'^(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<patch>[0-9]+)(\\-(?P<prerelease>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?(\\+(?P<build>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?$'	1025,1326
'^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'	317,945
'(?P<name>\\w+)\\s+(?P<type>[A-Za-z]+|\\(.*?\\))\\s+(?P<default>#REQUIRED|#IMPLIED|\\w+|(?:#FIXED)?((?:")([^"]*?)(?:")|(?:\')([^\']*?)(?:\')))\\s*(?:--(?P<comment>.*?)--)?'	305,1505
'(?x)\n    \\%\n        (?:\\(([\\w]*)\\))?\n        (\n            [-#0\\ +]?(?:\\*|[\\d]+)?\n            (?:\\.(?:\\*|[\\d]+))?\n            [hlL]?\n        )\n        ([diouxXeEfFgGcrs%])\n'	636,1125
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>([^ ]|\\\\ )*?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	1223,1420
'<[a-zA-Z][-_.:a-zA-Z0-9]*\\s*(\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@][][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*(?=[\\s>/<])))?)*\\s*/?\\s*(?=[<>])'	1087,1580
'(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'	897,1580
'^(application/(sdp|x-(mpeg|rtsp|sdp))|audio/(3gpp(2)?|AMR|aiff|basic|mid(i)?|mp4|mpeg|vnd\\.qcelp|wav|x-(aiff|m4(a|b|p)|midi|mpeg|wav))|image/(pict|png|tiff|x-(macpaint|pict|png|quicktime|sgi|targa|tiff))|video/(3gpp(2)?|flc|mp4|mpeg|quicktime|sd-video|x-mpeg))$'	391,872
u'\n            ([a-zA-Z]+        #Tag\n            \\s?[0-9]+):       #Tag number\n            \\s+[+-]           #Temp signed\n            ([0-9]+\\.[0-9]+)  #Temp value\n            (\\xc2\\xb0         #\xb0 match\n            [CF])             #Celsius or Fahrenheit\n            '	1127,1380
'FOREIGN KEY \\((.*?)\\) REFERENCES (?:(.*?)\\.)?(.*?)\\((.*?)\\)[\\s]?(MATCH (FULL|PARTIAL|SIMPLE)+)?[\\s]?(ON UPDATE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(ON DELETE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(DEFERRABLE|NOT DEFERRABLE)?[\\s]?(INITIALLY (DEFERRED|IMMEDIATE)+)?'	1415,1580
'\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '	55,200
'    # A numeric string consists of:\n    (?P<sign>[-+])?          # an optional sign, followed by\n    (?=\\d|\\.\\d)              # a number with at least one digit\n    (?P<int>\\d*)             # having a (possibly empty) integer part\n    (?:\\.(?P<frac>\\d*))?     # followed by an optional fractional part\n    (?:E(?P<exp>[-+]?\\d+))?  # and an optional exponent\n    \\Z\n'	1087,1580
'\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '	305,1505
' (                       # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n\n                  [ ]?                  # one optional space\n                  (?:\\n[ ]*)?           # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)               # id = $3\n                  \\]\n\n                )\n    '	55,200
' (                 # wrap whole match in $1\n                  \\[\n                    (.*?)        # link text = $2 \n                    # [for bracket nesting, see below]\n                  \\]\n\n                  [ ]?           # one optional space\n                  (?:\\n[ ]*)?    # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)        # id = $3\n                  \\]\n                )\n    '	55,200
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*   # PS2 lines\n          \\n?)\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        '	757,1087
' (                   # wrap whole match in $1\n                  \\[\n                    (.*?)          # link text = $2\n                  \\]\n                  \\(               # literal paren\n                        [ \\t]*\n                        <?(.+?)>?  # href = $3\n                        [ \\t]*\n                        (          # $4\n                          ([\\\'\\"]) # quote char = $5\n                          (.*?)    # Title = $6\n                          \\5       # matching quote\n                        )?         # title is optional\n                  \\)\n                )\n    '	55,200
' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '	55,200
"\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "	1263,1580
'/?>'	1247
'-?%>'	1025
'ber?'	1248
'\\s?'	1501
'..?.?'	1569
'</?b>'	290
',\\ ?'	1054
'-?\\d+'	1248
'^\\s?#'	561
'/+\\s?'	1244
'.*\\n?'	1248
'\\\\.?'	1535
'\\n\\r?'	43
'\\s*/?>'	330
'#?\\d+$'	1569
'^/?old/'	929
' \\:\\s?'	550
'^https?:'	200
'\\\\(.)?'	990
'(/)?[*]$'	1381
'-?[0-9]+'	339
'^["\']?/'	826
':(?://)?'	1463
'^M?C?R?$'	542
' - (.*),?'	126
'https?:|/'	1258
u'#?}|>|%}'	782
'<(@|/?p)>'	1248
'^#?\\d+/$'	1569
'(\\d\\d?)'	126
u'\r\n?|\n'	1621
'^/?([^/]+)'	1226
'<[^<]*?/?>'	144
'^([@+])?.*'	340
'&(#?\\w+);'	220
'<(/?)div>?'	813
'^\\-?\\d+$'	1463
'<b>.?BLAST'	1302
'<br\\s*/?>'	813
'[,|;]?\\s?'	916
'([+-]?\\d+)'	771
'(\\.\\d*)?Z'	1088
'(<br/>\n?)+'	1454
'^((?:> ?)+)'	329
'/log(/.*)?$'	1258
'\\/wms\\/?$'	740
'^!-?[0-9]+$'	1180
'^#?\\d{2,}$'	847
'//.*\\r?\\n'	1247
'\\:([^/]+)?'	1122
'[-+]?[0-9]+'	908
'\\n\\s*\\*?'	356
'\\\\[\\\\]?'	313
'&?hash=\\w+'	836
'(%?\\d+\\$)'	289
'/newticket/?'	1258
'USE (\\w+);?'	284
'<[^/?!]?\\w+'	1638
'\\#.*\\r?\\n'	1247
'(nodev)?\\s*'	560
'\\s+---?\\s+'	1087
'/?v[0-9\\.]+'	420
'(^\\w+:)?.*/'	1248
'\\\\[natbv"]?'	602
u'(\\d?)(\\D?)'	782
' at -?0x[^>]+'	313
'^#?\\d+-\\d+$'	1569
'</?TIMEX2.*?>'	1488
'[,]?([^,=]+)='	1068
'[1-9]?\\d\\.?'	748
'<noindex\\/?>'	1122
'/.*?/\\.\\./?'	879
'^\\s*(\\s?>)+'	1517
'</?\\w+[^>]*>'	1139
u'[ _]?\\(!\\)'	733
'^https?:/[^/]'	200
'\\r(\\r?\\n)?'	1426
'https?://\\S+'	1247
'^https?://.*$'	539
'\\</?strong\\>'	55
'-debug(info)?$'	1226
'^(.*/)?\\.svn$'	1217
'^(.*/)?\\.git$'	1217
'charset=(.+);?'	1340
'\\[test.cp?p?:'	500
'^\\s*(?:#.*)?$'	1094
'\\sinet[6]?\\s'	548
'^([cku]?)x(.*)'	1278
'.?A[\\W0-9_]*$'	1190
'^<[\\?%](php)?'	826
'((_workers)?$)'	1007
'[0-9]+(%|px)?$'	1258
'^.*/?bin/.*.py'	1570
'Notice\\\\?:.*'	218
'([^!])=?\\|\\|'	1258
'^https?:\\/\\/'	928
'(.+)?\\s+(.+)$'	1007
'\\#?\\s?(\\d+)'	290
'[A-Z]?[:;.A-Z]'	1190
'(/s/https?:)/+'	200
'^"?(Sch|S)(A|B)'	55
'\\s*(\\+?=)\\s*'	153
'</?alpino_ds.*>'	1248
'^(\\w+://)?(.*)'	1088
'.*GA=(\\d+)&?.*'	182
'([^#]*)(?:#.*)?'	1248
'^-?\\d*\\.\\d+$'	901
'.*\\): \\t?(.*)'	1007
'hello_foo(_.*)?'	1216
u'^last(-\\d+)?$'	737
'(([^/]*)(/.*)?)'	1248
'Warning\\\\?:.*'	218
u'_h?480p\\.mov$'	1557
'rgba?\\((.*)\\)'	1054
'^\\<\\/?([^ ]+)'	236
'%\\((\\w+)?\\)s'	648
'@?[a-zA-Z0-9_$]+'	407
'/wiki(?:/(.+))?$'	1258
u'\\s-[wdhm]?\\d+'	833
'([IOB])-?(\\S+)?'	1488
'&#?[A-Za-z0-9]+;'	360
'(?:(\\w+):)?(.*)'	1248
'[0-9a-f]{12}\\+?'	566
'(.+)[-_]r?(\\d+)'	318
'^-?[-0-9.e\\+]+$'	584
'^PART :?(#[^ ]+)'	375
'.*\\((.+)\\)\r?$'	1278
'</?(ins|del).*?>'	360
'^_{2,}.*[^_]+_?$'	640
'^([Mm]a?c)(\\w+)'	1561
'^\\<\\/?([^ >]+)'	1395
'^https?:\\/\\/.+'	853
'\\w[^=]*\\s*=\\>?'	356
'<(?!/?TEXT)[^>]+>'	1248
'[QA]?[:;.]?\\d\\d'	1190
'//(.*?)((/.*?)?)$'	542
'/project(s)?|//.+'	436
'(?:ftp|http)s?://'	826
'/replies/(-?\\d+)'	300
'(-?\\d+):(-?\\d+)'	1248
'DataText2?(\\s|$)'	126
'/?\\w+/\\w+[.]xsd'	436
'(.*?)(\\(.*\\))?$'	1248
'^(\\s*)(-)?[\\w]*'	1025
' ?([^=]+)="(.*?)"'	1244
'(^|\\s)M\\d?(\\s)'	1244
'^(.+?)(\\.muse)?$'	165
'^\\s*<(\\w+)(/?)>'	244
'^#?(\\d+)-(\\d+)$'	1569
'[uU]?[rR]?([\'"])'	1248
'^\\s*(\\d+).?\\s+'	771
'<\\[\\/?[^>]+\\]*>'	1248
'^\\w\\w(-\\w\\w)?$'	200
'(\\dQ)|(Q[:.]?\\d)'	1190
'\\d+(.\\d*)?|.\\d+'	1076
'\\.(a|cmxa?|mli?)$'	1226
'@requires:? (.*)\n'	60
'([\r]?\n)+[ \t]{1}'	200
'^[0-9]+(.[0-9]+)?$'	1248
'( ?\\$|URL: |Rev:)'	674
'^\\!?([^,]+),(.+)$'	1463
'(E?%0?E(?![._]?N))'	1269
'/(login|logout)/?$'	1258
'(0|-?[1-9][0-9]*)e'	939
'(0|-?[1-9][0-9]*)$'	534
'__init__.py(c|o)?$'	1315
'(\\d{4}s?|\\d{2}s)'	1488
' *\\)(?P<comma>,?)'	826
'^(C|CC)(_(\\d+))?$'	787
'^(R|RR)(_(\\d+))?$'	787
'(.*\\.zip)/?(.*)$|'	1248
'([0-9]+)(.[0-9]+)?'	1495
'(\\+|-)?(\\d|\\.)+'	340
'(.*?)([^.]*?)(_?id)'	241
'(SW)?TWIW?=W?{.*?};'	1580
'^([^-]*)(?:(-.*))?$'	1094
'"file" ?: ?"(.*?)",'	1093
'^(\\./)?(linden/?)?'	1246
'^\\((\\?P<[^>]*>)?$'	1248
'[ \\t]*(#[^\\n]*)?$'	908
'^(T|t)ypo(graphy)?$'	1340
'</?\\s*[a-zA-Z0-9]+'	1247
'^(-?[0-9\\.]+)\\s*$'	1503
u'^(https?|s?ftp)://'	782
'^/([^/]+)(?:/(.*))?'	66
'hello_foo_new(_.*)?'	1216
'@requires?:? (.*)\n'	881
'(\\d\\.\\d\\.?\\d*)'	534
'_(dir|file|path)s?$'	534
'^v(\\d+)\\.?(\\d+)?'	427
'(\\\\.|[^#])*(#.*)?'	1248
'-?(\\d*)([.]?\\d*)?'	1248
u'\\d+\\.\\d+(.\\d+)?'	782
'(?<=\\()\\w*\\,?\\s*'	1580
'\\*?\\*?\\w+\\s:\\s*'	550
'http://(.+?):(\\d+)?'	990
'^-?\\d+(?:\\.\\d+)?$'	115
'\\s*(-?\\w+:\\w+)+,*'	1534
'^(https?|ftp):\\/\\/'	928
"u?'(.*)' != u?'(.*)'"	1258
'^(.+?)(?:\\=(.+?))?$'	522
'(\\w+)(?:\\:(\\w+))?'	873
'^ttp(s?)://\\S+\\s*$'	175
'\\w+\\s\\d+,?\\s\\d+'	1593
'"?([a-zA-Z0-9_-]+)"?'	891
'-?[0-9]+\\.[0-9e+-]*'	339
'title\\+?= *(.*?) *$'	153
'((\\d+)(\\.\\d+)?)C?'	120
'^(/usr)?/s?bin/\\S+/'	1226
' ?\\[([^\\[\\]]+)\\]'	1594
'/prefs(?:/([^/]+))?$'	1258
'([+-]?\\d*\\.?\\d+)$'	456
'\\.?\\.?\\.\\.\\.\\.$'	383
'/?schemas/.*/.*\\.xsd'	436
'(\\w:)?(\\w*)-?(\\w*)'	1302
'/milestone(?:/(.+))?$'	1258
'(\\d[Aa])|(A[:.]?\\d)'	1190
'^(-?[0-9\\.]+)\\s*mm$'	1503
'^(-?[0-9\\.]+)\\s*in$'	1503
'^(-?[0-9\\.]+)\\s*cm$'	1503
'\n?(\\w*)\\:\\s(.*)\n'	225
'<(\\w+)(\\s.*)?[^/]?>'	992
'<a href="?([^\\s^"]+)'	1178
'<\\s*/?\\s*([^\\s>]+)'	1248
'\\d+\\/\\d+(\\/\\d+)?'	1488
'([bB]ug#?\\D#?(\\d+))'	1644
'^(platform/.*?/)?(.*)'	1300
'&(\\w+)(?:->(\\w+))?$'	803
u'(?s)<[^>]*>|&#?\\w+;'	506
'\\[([0-9]{8})\\]\\)?$'	329
'((\\\\.|[^#])*)(#.*)?'	1248
'([\\w ]+)(\\(.*?\\))?'	1580
'(?:([0-9a-f]+):)?(.*)'	133
'^https?://github.com/'	305
'(\\w+://)?([\\w\\.]+)'	571
'([+-])?(\\d+[dwhms])+'	873
'^\\/ranking/p([0-9]?)'	469
'\\${(\\d+)(?::(.*?))?}'	597
'^(?:chromium:)?(\\d+)$'	534
'([^!]*)!?([^@]*)@?(.*)'	539
'(\\d+) leaks? excluded'	1199
'<%[\\=\\-\\#]?(?!.*%>)'	1025
'([^a-z]+)\\s*([a-z]+)?'	729
'^\\[(.*)\\](:(\\d+))?$'	187
'^(.)(.+?)\\1 ([^#]+)#?'	1055
'r?u?(\\\'\\\'\\\'|""")'	1247
'^\\d+(-\\d+)?|\\.\\w+$'	1569
'<(.*?)>; rel="(.*?)",?'	1441
'(\\.?)(\\s*)(.*)(\\s*)'	173
'^\\w{3,}\\.?\\s\\d{4}$'	1004
'(?s)<!--(.*?)-->[\\n]?'	1248
'library\\("?(.*?)"?\\)'	1555
'(\\w+)(?:=([^\\s;]+))?'	1216
'^\\w+:/*(\\w+:|www\\.)?'	220
'(\\d[.]\\d)([.].*\\d)?$'	313
'([a-z]+)(\\([0-9]+\\))?'	1495
'(\\d+\\.\\d+(\\.\\d+)?)'	560
'\\s*[^#]{3,}:\\s*(#.*)?'	407
'(.*?)\\$(\\$?[\\w\\.]+)'	747
'^(?:salt|https?|ftp)://'	1491
'(?:www\\.)?flickr\\.com'	115
'\\s*(\\w+)\\s*=?(.*)\\n'	560
'\\d+\\.\\d+(?:\\.\\d+)?'	992
'\\$[0-9]+\\,?\\.?[0-9]*'	707
'class |def |u?r?["\\\']'	1199
'\\|(\\w+)(\\.\\d+)?\\|$'	767
'https?://([^/]*?)(/.*)?'	867
'^(create: )?(mpath\\w+)'	1051
'((the|a|an)\\s+)?[0-9]+'	360
'^core = "?(\\d+\\.x)"?$'	1217
'(?i)^sub(s|(titles?))?$'	1303
'\\.egg(?:-info)?(?:/|$)'	944
'<Count>(-?\\d+)</Count>'	1302
'(\\s+(</span>)?$| +\\t)'	1426
'Fatal\\\\? error\\\\?:.*'	218
'([a-z ]+)(\\([0-9]+\\))?'	1495
'-py\\d[.]\\d(-\\S+)?.egg'	313
'^(?:\\[([^]]+)\\])?(.*)$'	819
'^([a-z]?[a-z-]*[a-z]).*$'	1025
'\\[!([bcgmryBCGMRY])?\\]'	736
'/search(?:/opensearch)?$'	1258
'\\s*(not\\s+set)?\\s*\\Z'	80
'((.+)\\@)?([^:]+):(\\d+)'	1506
'ound (\\d+) EDMs? signed'	32
'^([-+]?[0-9]+)/([0-9]+)$'	518
'^\\d+\\.\\d+([ab]\\d+)?$'	1248
'^[$]?([A-Z]+)[$]?(\\d+)$'	729
'^/usr(/lib(64)?)?/games/'	1226
'http(s)?://youtu.be/(.*)'	539
'^@@.*\\+(\\d+)(,(\\d+))?'	1244
'^fish_color_(\\S+) ?(.*)'	1618
'(.*/)?report-(.*)\\.html'	1244
'\\$?([A-I]?[A-Z]\\$?\\d+)'	55
'/about(?:_trac)?(?:/.+)?$'	1258
'\\[\\s*([^\\]]+?)?\\s*\\]'	1087
'^(unsigned)? ?(int|long)$'	1291
'^.*?(\\d+(\\.\\d+)+)\\r?$'	1426
'^(\\d+\\.x-)?(\\d+)\\..*$'	1217
'[$_]?(?:is|has)($|[A-Z_])'	1025
'Content-Length: ?([0-9]*)'	1375
'(\\d+)\\.(\\d+)(\\.\\d+)?'	313
'(.*)show/(?P<id>[0-9]*)/?'	539
'^(?:\\\\(\\S+)\\s*)?(.*)$'	1248
'(tel:(//)?)?\\+?[0-9]{4,}'	1465
'<p>\\.notes:\\s?(.*?)</p>'	310
'"volume" ?: ?([0-9]{1,3})'	1093
'[ \\t]*(#[^\\n]*)?\\r?\\n'	908
'(\\b[^ ,=]+)="?([^",]+)"?'	1301
'sta.b tcc__([rf][0-9]*h?)$'	157
'^([^-]+)-([^-/]+)(/(.*))?$'	850
u'name\\s?=\\s?([^"\\s]+)/>'	1100
'^[0-9-\\,]*(\\.[0-9Ee]*)?$'	1313
'\\[  PASSED  \\] ?(.*)\r\n'	1007
'href="?/imgres\\?(.*?)[ >]'	183
'^([-+]?[0-9]+)\\.([0-9]+)$'	826
'[A-Z]{([^}<]*)(<[^>}]*>)?}'	1248
'[$_]?(?:set|add)($|[A-Z_])'	1025
'(%(\\([^\\s\\)]*\\))?[sd])'	162
'([+-])(\\d\\d):?(\\d\\d?)?'	96
'-?[0-9]+([ ]+-?[0-9]+){3}$'	729
'^##AGENT-WARNING##\\ ?(.*)'	1007
'\\[ RUN      \\] ?(.*)\r\n'	1007
'[+-]?\\d*\\.\\d*|[+-]?\\d+'	374
'^(/usr(/X11R6)?)?/lib(64)?'	1226
'^(given|when|then|and)\\s?'	1005
'\\[       OK \\] ?(.*)\r\n'	1007
u'https?://[^/]*imdb\\.com/'	1557
'\\[  FAILED  \\] ?(.*)\r\n'	1007
'\\s*<\\s*br\\s*/?\\s*>\\s*'	1181
'^([\\w\\-]+/)?[\\w\\-\\.]+$'	1247
'^(([^}]*?[^;]?)\\s*)(?=\\})'	1025
'^(.*[^a-z0-9\\n])?insmod .*'	1465
'^Table B.1.? .* Private .*$'	1432
'^(var )?sc_project\\=\\d+;$'	761
'([a-fA-F0-9]{2}[:|\\-]?){6}'	1135
'((.+)\\@)?([^:]+)(:(\\d+))?'	1510
'rgba?\\(([\\d, \\%\\.]+)\\)'	615
'^https?://github.com/[^/]+$'	305
'(http://)?localhost([:/]|$)'	350
'-?(\\d+\\.(\\d+)?|\\.?\\d+)'	1340
'lib(64)?/lib[^/]*\\.so\\..*'	1226
'\\x1b\\[33m(.*?)\\x1b\\[0?m'	407
'\\.(js|jsm|java)(?:\\.in)?$'	1007
'(\\S+)\\s+(\\S+)(,| )( .*)?'	1247
'([\\\\/])([.,]?)([.,]?)(.*)'	1248
'((?:"[^"]+"|[^,"]+)+)\\s*,?'	1249
'\\d{4}(/\\d\\d(/\\d\\d)?)?$'	1302
u'(\\d+)\\.(\\d+)\\.?(\\d+)?'	1158
';?\\s*end(\\.|,|&|\\||\\s|$)'	407
'^(?:\\d-)?(\\d{2})\\.? (.*)$'	748
'^\\[BGN\\] Updating (file )?'	1573
'^.*(\\d+){(\\+|-?)(\\d+)}.*$'	1644
'@requires?:?\\s+(\\S*)\\s*\n'	928
'(<p>\\.fx:\\s?(.*?)</p>\\n?)'	310
'/buildbot/builder(?:/(.+))?$'	122
'[QA]?[:;.]?\\d\\d[:;.]\\d\\d'	1190
"(\\w+)\\'(m|re|d|ve|s|ll|t)?"	255
'^\\s*msgstr(\\[\\d\\])?\\s+"'	200
'<.* at remote 0x-?[0-9a-f]+>'	1580
'[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'	908
'^[a-z]+\\*?\\d[a-z]*[>\\.]?$'	1248
'[0-9]+(?:\\.[0-9]+)?|[^0-9]+'	1436
'P(\\d+)Y(\\d+)M?(\\d?\\d?)D?'	1248
'TX\\s+bytes:?\\s*(?P<c>\\d+)'	567
'RX\\s+bytes:?\\s*(?P<c>\\d+)'	567
'^(boot(\\.\\d+)?$|kernel\\.)'	560
'^(.*?)(\\.|)(\\w?[\\w\\d]*)$'	1594
'memcached://([.\\w]+:\\d+;?)'	1426
'^(.+?): .*?(\\(attached\\))?$'	1094
'\\n?\\[\\[toc(\\|flat)?\\]\\]'	138
'^-?[\\.,]?\\d[\\d,\\.-]*\\.?$'	1248
'#slipfactor\\s+(\\d+\\.?\\d*)'	173
'gvsearch(\\d+|all)?:[\\s\\S]+'	386
'[a-z][\\.\\!\\?][\\"\\\']?\\Z'	1580
'^([+\\-])?\\$([^\\$\\{\\}]+)$'	557
'^([^<,]+)\\s*(?:<([^>,]+)>)?$'	1553
'\\A(.*\\.)(\\d+)(\\.html)?\\Z'	1571
'(^.*[^a-z0-9\\n])?setprop +.*'	1465
'[\\w\\-:]+(\\.[\\w\\-]+)*\\.?'	1247
'^\\s*([^=\\s]+)=?\\s*(\\S.*)$'	496
'([1-9][0-9]*)([DdHhMm]|[sS]?)'	1074
'^(?:bt://)?([a-fA-F0-9]{40})$'	1569
'/(export|browser|file)(/.*)?$'	1258
'^\\-?[0-9]*\\.?[0-9]*\\s?\\%$'	729
'yvsearch(\\d+|all)?:[\\s\\S]+'	386
'ytsearch(\\d+|all)?:[\\s\\S]+'	386
'(.*?)(\\s*<br\\s*/?>\\s*)*\\Z'	291
'/report(?:/(?:([0-9]+)|-1))?$'	1258
'(.+)[-_](\\d+)\\.(\\d+)(\\w?)'	318
'([a-z]\\d?)=\\s+(\\d+\\.\\d+)'	1302
'^/etc/(g?shadow-?|securetty)$'	1226
'^(.*?\\.pyc?):(\\d+):\\s+(.*)$'	31
'([A-Za-z]+)(\\[[A-Za-z,]+\\])?'	1248
'https?://github.com/([^/]+)/?$'	1025
'^(\\d+(?:\\.\\d+)?)\\s?(?:mb)?'	927
'.?<\\?xml[^<>]+encoding="(.+)"'	764
'<?xml.*encoding=\\W*([\\w_-]+)'	200
'cpu MHz\\s+:\\s+(\\d+\\.?\\d*)'	1205
'/lib(64)?/(.+/)?lib[^/]+\\.so$'	1226
'/(QGIS(_\\d\\.\\d-dev)?)\\.app'	1555
'/changeset(?:/([^/]+)(/.*)?)?$'	1258
'/v(?P<version_no>\\d+\\.?\\d*)'	993
'http://([^:/]+)(:(\\d+))?(/.*)'	1205
'update_(smoke)?test_(.*)\\.py$'	1007
'\\[       OK \\] ?(.*?) .*\r\n'	1007
'\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'	407
'(\\d*):?(.*)-(.*)-(.*)\\.(.*)$'	737
'\\$?([a-z]+)_\\{*(\\d)\\}*\\$?'	92
'text/html; charset="?([^"]+)"?'	1181
'.*(\\.ipy|\\.ipynb|\\.py[w]?)$'	1580
'(([^@]+)@)?([^:]+)(:([0-9]+))?'	1510
"(?im)^what's new in (.*?)\\??$"	1580
'ALT=[\'"]?([\\w\\d\\s]*)[\'"]?'	1248
'-?\\d+(?:\\.\\d+)?(?:[eE]\\d+)?'	1555
'\\[ RUNNER_FAILED \\] ?(.*)\r\n'	1007
'http(s)?://(www.)?facebook.com/'	619
'(?P<user>[^:]+)(:?(?P<pswd>.*))'	1143
'\\[\\[(https?://[^|\\]]*)\\]\\]'	138
'(\\w+(?:\\+\\d)?)\\s*\\((.*)\\)'	1087
'^https?:\\/\\/(:?localhost|127)'	1523
'\\s*@(\\w+){((\\S+),)?(.*)}\\s*'	1179
'(\\$?)([A-I]?[A-Z])(\\$?)(\\d+)'	55
'(src|href)\\=([\\\'"]?)/?files/'	1580
'http(s)?://(www.)?linkedin.com/'	619
'<img\\s.*?src="(.+?)"\\s?.*?/?>'	310
'^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'	928
'^[a-z0-9]([a-z0-9-]*[a-z0-9])?$'	485
'^/?(?P<l>\\w.+)/preview\\.html$'	376
'st([xy]).b tcc__([rf][0-9]*h?)$'	157
'bogomips\\s+:\\s+(\\d+\\.?\\d*)'	1205
'[0-9]{4}/[10]?[0-9]/[0-3]?[0-9]'	44
'(.+_id|id)([mp]?\\d+)((?:-bb)?)'	241
'^(?P<op>=|[<>!]=?)?(?P<ver>.*)$'	1025
'^#?\\d+(/[-.\\w\\[\\],\\s*]+)?$'	1569
'BIT((?: VARYING)?)\\(([0-9]+)\\)'	677
'((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'	1249
'\\.\\.\\s*doctest-ignore::?\\s*$'	1248
'^ 0  (?:.*!)?(?:void )?([^\\[]+)'	1007
'(.+);\\s*([0-9\\-\\.]+)?\\s*(.*)'	1539
'([^= ]+)=(?:"([^"]*)"|([^,]+)),?'	557
'^%!TEX\\s+([\\w-]+)\\s?=\\s?(.*)'	31
'(<p>\\s*(?P<para>.+?)\\s*</p>?)+'	1488
'(<h5><a name="?akas"?.*</table>)'	1469
'<p>\\.qr:\\s?(\\d*?)\\|(.*?)</p>'	310
'(?:(-?)(\\d+))?,(?:(-?)(\\d+))?$'	248
'-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)%'	729
'^/usr/lib(?:64)?/python([.0-9]+)/'	1226
'action="http?\\w://[\\w.\\?=/&]*/'	1523
'https?://[^/]*(/.*reset_key/\\S*)'	181
'zc.buildout(-\\S+)?[.]egg(-link)?'	313
'(\\d*.?\\d+).(h|hr|hrs|mins|min)+'	1469
'^([^-]+)-([^-]+).*\\.egg(-info)?$'	944
'Content-Type: ?([a-zA-Z0-9\\-/]*)'	1375
'(http://)?([-_\\.A-Za-z]+):(\\d+)'	662
'(\\d{1,2}) (\\d{1,2})[ ]?(\\d{4})'	1113
'url\\(__EMBED__(.+?)(\\?\\d+)?\\)'	1240
'^https?://github.com/[^/]+/[^/]+$'	305
'^([^\\s\\.#]+\\.)*([^\\s\\.#]+)?$'	557
'<_Helper at remote 0x-?[0-9a-f]+>'	1580
'\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'	1580
'^[@]?[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'	748
'\\(([0-9\\?]{4}(/[IVXLCDM]+)?)\\)'	1469
'http(s)?://(www.)?mozillians.org/'	619
"<class '([A-Za-z0-9.]+)'>(\\..+)?"	602
'([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'	8
'st([axyz]).b tcc__([rf][0-9]*h?)$'	157
'^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'	1580
'^[a-zA-Z]{2}(-[a-zA-Z]{2})?\\.py$'	1247
'http(s)?://(www.)?bad-dragon.com/'	539
u'Name(?:\\[([^]]+)\\])?\\s*=(.*)$'	782
'<TestThread\\(.*, \\w+ -?\\d+\\)>'	1087
':ext:([^@]+@)?(?P<hostname>[^:/]+)'	1426
'/_ah/img/([-\\w]+)([=]*)([-\\w]+)?'	1004
'mail-command:(un)?subscribe-member'	329
'url\\([\'"]?(.*?)[\'"]?[\\)\\?\\#]'	1579
'<img.*?src="(?!http://)(.*?)".*/?>'	310
'http(s)?://(www\\.)?([a-z]*?)\\.no'	1408
'(-?[0-9]+\\.?[0-9]*(?:e-?[0-9]*)?)'	1054
'\\s(?=days?|months?|years?|weeks?)'	1488
'^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'	826
'(?P<name>[^:]+):(?P<value>[^,]*),?'	1067
'http://([^/:]+)(?::(\\d+))?(/.*)?$'	1569
'&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'	330
'^\\s*<(?:div|table)(?:\\s+[^>]+)?>'	1258
'(?:\\{.+\\})?(?:\\([:, \\w]+\\))?$'	1571
'.*?/video/films/Short Films(/.*?)?'	84
'(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'	619
'(?<=\\(|\\))?[a-z|A-Z|0-9]*(?=\\()'	152
'^[./]*resolve[Uu]id/([^/]*)/?(.*)$'	988
'^[@&]?[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'	1118
'^((?:\\w|-|_|\\.)+)(?:\\[(.*)\\])?$'	897
'\\(?[a-zA-Z0-9.-]+@[a-zA-Z,.-]+\\)?'	1001
"\\s*<?xml\\b.*\\bencoding='([^']+)'"	1248
'\\*END\\*?\\s*THE\\s*SMALL\\s*PRINT'	1248
'\\s*<?xml\\b.*\\bencoding="([^"]+)"'	1248
'(?P<state>\\w+)/(?:(?P<pk>\\d+)/)?$'	126
'[0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+$'	1248
'^HTTP/\\d\\.\\d\\s+(\\d+)(\\s+.*)?$'	1025
'\\[(.*?)\\][^\\:]+\\:\\s+(\\-?\\d+)'	1247
'\\$?([A-I]?[A-Z]):\\$?([A-I]?[A-Z])'	55
'^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'	1143
'/_ah/img/([-\\w:]+)([=]*)([-\\w]+)?'	1495
'^rubygems(\\d+\\.\\d+(?:\\.\\d+)?)$'	944
'^(.*[^a-z0-9\\n])?(chown|chmod) +.*'	1465
'(\\S+)\\s+(\\S+)\\s+([IOB])-?(\\S+)?'	1248
'[0-9-]* [0-9:\\.]* [+-][0-9]*\\r?\\n'	1274
'(\\w+(?:\\+\\d)?)(?:\\s*\\((.*)\\))?'	1580
'(\\s*"float_value": -?\\d+)\\.[^\\d]'	775
'GL(_ES)?_VERSION(_ES_C[ML])?_\\d_\\d'	533
'(?:::)?PointerHolder<\\s*(\\w+)\\s*>'	1216
'([A-Za-z]+(?:\\[[A-Za-z,]+\\])?)(.*)'	1248
'(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'	619
'(ht|f)tp(s)?://.*.(jpg|png|gif|jpeg)'	539
'(?P<name>[^{]+)({(?P<attrs>[^}]+)})?'	1249
'(?<=\\n)\\[.*?\\]:\\s?(https?://.+)$'	1340
'^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'	1555
'(<h(\\d+?).*?>(.+?)</h\\d>)\\s?(.+)?'	310
'<TestThread\\(.*, stopped -?\\d+\\)>'	1580
'\\<div(?P<a>( .+)?)\\>\\s+\\</div\\>'	1247
'(\\S+)\\s+(\\S+)\\s+([BIO])-?(\\S+)?'	1248
'^/(?:usr/(?:s?bin|games)|s?bin)/(.*)'	1226
' (Allocated at|Reported( again)? at)'	1007
'Content-Encoding: ?([a-zA-Z0-9\\-/]*)'	1375
'/(raw-)?attachment/([^/]+)(?:/(.*))?$'	1258
'(\\d{1,3}(\\,\\d{3})*|\\d+)(\\.\\d+)?'	1488
'^([a-fA-F0-9]){3}(([a-fA-F0-9]){3})?$'	200
'^([0-9a-z_]{2,}\\.)*([0-9a-z_]{2,})?$'	557
'(?P<root>https?://[^/]+)(?P<path>/.*)'	560
'^https?://[^/]*?(\\w+\\.\\w+)($|/.*$)'	305
'^(<=|>=|<|>|!=|==|~=)?\\s*([^\\s,]+)$'	1594
'(?:::)?MySmartPointer<\\s*(\\w+)\\s*>'	1216
'^\\s?(<h(\\d?)>(.+?)</h\\d>)\\s?(.+)?'	310
'<.?H2>|<.?p>|<.?A.*>|<.?P.*>|<.?HR.*>'	1076
'distribute( version)? \\d+[.]\\d+\\S*'	313
'\\(?(\\w:)?(-?\\w*)-?(-?\\w*)\\)?(.*)'	1302
'^\\\\[a-zA-Z]+[ ]?|^\\\\[^a-zA-Z][ ]?'	899
'\\[\\[(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'^(#?\\d+)(?:/([-.\\w\\[\\],\\s*]+))?$'	1569
'^/usr(/share|/X11R6)?/(doc|man|info)/'	1226
'"(.*)".*PRIMARY KEY( AUTOINCREMENT)?$'	1158
'(?:firebird|postgres(?:ql)?)_returning'	1469
'(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'	318
';?\\s*end(?:\\s*$|\\s+(?:while|until))'	407
' *([0-9]+)x(?: \\(leaked .*\\))?: (.*)'	1007
'\\s+\\(disc (\\d+)(?::\\s+([^)]+))?\\)'	913
'^(.*[^a-z0-9\\n])?cp +.+ system/app/.*'	1465
'([^%]|^)\\\\makeindex(\\[([\\w]+)\\])?'	31
'^([a-z]+)(\\*?)(\\d)([a-z]*)([>\\.]?)$'	1248
"^(\\S+) == (u?'[^']*'|\\([0-9, ]+\\))$"	220
'^\\s*(def|class) [A-Za-z0-9_]+\\s*\\(?'	1426
'Catchable\\\\? fatal\\\\? error\\\\?:.*'	218
u'[-+]?[0-9]+(\\.[0-9]+)?(e[-+]?[0-9]+)?'	55
'get_ipython\\(\\)\\.magic\\(u?"%?autopx'	422
'^([\\w\\d]+[\\w\\d\\-]*[\\w\\d]+\\.?)+$'	187
'^(https?://)?(?P<host>[^:]+)(:[0-9]+)?$'	420
'^(([^\\s\\.#]+\\.)|\\.)*([^\\s\\.#]+)?$'	557
'http(s)?://(www.)?fimfiction.net/story/'	539
'database version (?P<version>.+?)\\.?\n'	1247
'[QA]?[:.]?\\d?\\d[:;.]\\d\\d[:;.]\\d\\d'	1190
'https?://bitbucket.org/([^/]+/[^/]+)/?$'	1025
'(%(\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])'	200
'&(#?[xX]?(?:[0-9a-fA-F]+;|\\w{1,32};?))'	1580
'^(.*[^a-z0-9\\n])?mount +.* *remount+.*'	1465
"\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"	284
'^ruby(?:gems)?(\\d+\\.\\d+(?:\\.\\d+)?)'	944
'\\s*<?([^@\\s]+\\@[a-zA-Z0-9-.]+)>?\\s*'	329
'%module(\\s*\\(.*\\))?\\s+("?)(\\S+)\\2'	743
'--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'	1180
'^https?://bitbucket.org/([^/]+/[^/]+)/?$'	1025
'.*imdb.com/title/tt(?P<imdb_id>\\d+)/?.*'	506
'Intel(\\(R\\))? (.*) processor [\\d]+MHz'	244
'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'	206
'([d-]  )?(setuptools|distribute)-\\S+-py'	313
'^(\\{(\\w+)\\}->\\[(\\w+)\\])(\\s+(.*))?'	358
'^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$'	1432
'(?P<rule>(\\\\.|[^#])*)(?P<comment>#.*)?'	1248
'HTTP/(\\d\\.\\d)\\s+(\\d+)(?:\\s+(.*))?$'	1025
'^(\\{(\\w+)\\}->\\((\\w+)\\))(\\s+(.*))?'	358
'([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'	557
'(remote: )?([\\w\\s]+):\\s+()(\\d+)()(.*)'	599
'^(.*[^a-z0-9\\n])?am +start[^a-z0-9\\n].*'	1465
'(<|^)(sip|sips|tel):(?P<phoneno>\\+?\\d+)'	174
'https?://github.com/([^/]+/[^/]+)/tags/?$'	1025
'https?://github.com/([^/]+/[^/]+)($|/.*$)'	1025
'^(https?)://([a-z\\.0-9]+)(?:\\:(\\d+))?$'	20
'https?://[-\\.\\w:]*/console/rest/v1/dev/'	822
'%\\((\\w+)\\)(?:s|[\\d]*d|\\d*.?\\d*[fg])'	1258
'-?[0-9]+,-?[0-9]+([ ]+-?[0-9]+,-?[0-9]+)*'	729
'\\#?([0-9a-fA-F]{3}([0-9a-fA-F]{3})?){1}$'	615
'([\\d\\D_\\.\\-]*:?[\\d\\D_\\.\\-]+)=(.*)'	1076
'^<div(?:\\s+class="([^"]+)")?>(.*)</div>$'	1258
'^(?:(\\.+|\\++|\\-+)(\\.)?\\s+)?(-{3}-*)$'	1247
'(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'	283
'^(?P<localpart>[^@]+)@(?P<domainpart>.+)?$'	826
'http(s)?\\://([\\w\\.]*)(\\:(\\d+))?(/.*)?'	594
'(\\d+)(\\s*-\\s*(\\d+))?(\\s*([a-zA-Z]+))?'	571
'(\\s*\\t*max_filesize)\\=(\\d+[kKMmGgTt]?)'	560
"invalid literal for int().*: s?'?0xOoops'?"	1580
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^/:#?]*)'	200
'reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	440
' a/(.*?) b/(.*?)( (copy|rename) from .*)?$'	1426
'#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'	173
'content-location:\\shttp.?://.*?(?=\r\n|$)'	436
'^([-a-zA-Z0-9._]*):([0-9]+)(\\.([0-9]+))?$'	27
'[ \\t]*([^<>\\s]+?)[ \\t]*<p="([^"]*"?)"/>'	1248
'((\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])(.*)'	200
'([0-9]{0,4})(?:_sp\\d*)?\\.([0-9][0-9.]*)$'	743
'^http://((?:www\\.)?\\w+\\.\\w{2,3})(/.*)?'	1479
'(?<=\\n)\\.\\.\\s+[^:]+:\\s+(https?://.+)$'	1340
'(.+)[-_](\\d\\d\\d\\d)-?(\\d\\d)-?(\\d\\d)'	318
'^(([0-9a-z_]{2,}\\.)|\\.)*([0-9a-z_]{2,})?$'	557
'(https?\\:\\/\\/[(\\w|\\d|+|-|_|\\.|\\/)]+)'	1285
'[uU]?[rR]?(\\"\\"\\"|\\\'\\\'\\\'|\\"|\\\')'	1248
'.*class +(\\w+)(?: +extends +(\\w+))? *\\{$'	407
'@\\{(?P<a>[\\w\\-\\.]+?)(\\:(?P<b>.*?))?\\}'	1247
'^(.*[^a-z0-9\\n])?pm +install[^a-z0-9\\n].*'	1465
'"?Content-Type:.+? charset=([\\w_\\-:\\.]+)'	162
'^(?P<name>[^(]+)(?:\\((?P<type>[^)]+)\\))?$'	270
'/admin(?:/([^/]+)(?:/([^/]+)(?:/(.+))?)?)?$'	1258
'[\\-]{5}END( RSA| DSA)? PRIVATE KEY[\\-]{5}'	1315
'^/usr(?:/share)?/man/man[^/]+/(.+)\\.[1-9n]'	1226
'http(s)?://(.*).(jpg|jpeg|png|gif|tiff|bmp)'	539
'([A-Za-z]|-?[0-9]+\\.?[0-9]*(?:e-?[0-9]*)?)'	1054
'\\[\\[(https?://[^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'	1247
'^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'	1247
'^/usr/share/doc/perl-.*/MANIFEST(\\.SKIP)?$'	1226
'^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	542
'^(\\d|[0-1]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$'	729
'<Foo\\(an_int=42\\) at remote 0x-?[0-9a-f]+>'	1580
'\\A(?:\\[([^\\]]+)\\])?([^=]+)?(?:=(.*))?\\Z'	1571
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+\\s*)()'	1248
'[ \\t\\r\\n]*(?:(?:#[^\\n]*)?\\r?(?:$|\\n))?'	55
'(?:http://)?(?:www\\.)?imdb.com/title/tt\\d+'	1557
'(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '	251
'\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'	1495
'(?:@?[a-zA-Z0-9_$]+(?:://|::|->|:|/|@|\\.))+'	407
'//\\s*\\|(.*?)\\|\\s*(.*?)\\s*(--\\s*(.*))?$'	1007
'cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+)[\\\'"]?\\)'	1240
'http://.*\\.qjwm\\.com/down(load)?_\\d+.html'	1569
'Results (\\d+) - (\\d+) of (?:about )?(\\d+)'	1169
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+)?(\\[)'	1248
'\\s*?([a-z]+(?:-[a-z]+)*)(?::[ \\t]*(.*?))?;'	782
'(\\d*.?\\d+).(sec|hour|day|week|month|year)+'	1469
'.*\\s+internal::(Bindable)?Matcher<([^>]+)>$'	1244
'^(.+?)/|/?(.+?)/main/?.*?/([0-9]+|CHECKEDOUT)'	1426
'[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'	380
'^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'	1247
'^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'	506
'src="http://www.youtube.com/embed/(.+?)?rel=0'	1091
'^(?P<train>\\d+)\\s*(\\,\\s*(?P<test>\\d+))?$'	1488
"^\\s*wal_level\\s*=\\s*'?([a-z_]+)'?\\s*#?.*$"	1520
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>\\D+)?'	962
'https?://bitbucket.org/([^/]+/[^#/]+)/?#tags$'	1025
'^(?P<hostname>.*):(?P<port>\\d+)?(?P<path>.*)'	1426
'\\s+background(?:-image)?:\\surl\\((.+?)\\).+;'	310
'(.*?)(?:\\.(\\d+))?(([-+]\\d{1,2}):(\\d{2}))?$'	425
'http://(?:www.)?theyworkforyou.com/[^\\s[\\]]+'	32
'^plural_rules-[a-zA-Z]{2}(-[a-zA-Z]{2})?\\.py$'	1247
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^#]*[^#/])/?'	200
'^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$'	228
'[a-zA-Z_]+(@[0-9]+)?|[0-9]+(\\.[0-9]+)?|[^ \n]'	533
'(.*)_(\\d\\d\\d\\d-\\d\\d-\\d\\d(?:\\.\\d+)?)$'	351
'(-)?(?:"([^"]*)"|\\\'([^\\\']*)\\\'|([^\\s]+))'	1258
'^1.2.840.10008.[0-9.]+ (.*) PS ?[0-9].1?[0-9]$'	1432
'^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\('	557
'(\\w+(?:/\\w+)?|[-=]+>|"[^"]+"|\'[^\']+\'|\\|)'	1248
'(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \\2.exe\n'	313
'^\\-{4,}\n(?P<t>.*?)\n\\-{4,}(:(?P<c>\\w+))?\n'	1247
'\\[\\[Category:(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'	313
'^\\[\\S+\\s+(?:\\(root-commit\\)\\s+)?(\\S+)\\]'	1469
'https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$'	1025
'^([a-zA-Z]{2})(\\-[a-zA-Z]{2})?(\\-[a-zA-Z]+)?$'	1247
'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'	739
'\\b([0-9a-fA-F]{1,4}::?){3,}[0-9a-fA-F]{1,4}\\b'	727
'\\[sourcecode( language="(?P<lang>[a-z]+)")?\\]'	1267
'^(\\^C)?(-+\\n)|^(  File)(.*)(, line )(\\d+\\n)'	1580
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,16})\\](.*)$'	1007
'^\\x1b\\[0m(.*?)\\x1b\\[0?m[:-](\\d+)([:-])(.*)'	407
'^[ \\t]*LOG[ \\t]*=[ \\t]*(?:(?:Y(?:ES)?)|TRUE)'	534
'^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'	1305
'^(\\d+) \\. (\\d+) (\\. (\\d+))? ([ab](\\d+))?$'	1580
'^(Added |Removed )?(.+Sponsor) (Rep|Sen). (.+)$'	182
'^@@ -\\d+(?:,\\d+)? \\+(\\d+)(?:,(\\d+))? @@.*$'	1025
'(?<!\\\\):([a-zA-Z_][a-zA-Z_0-9]*)?(?:#(.*?)#)?'	317
'\\s*([+-]?)([^\\s\\(\\)<>"\\\'\\-=\\[\\],]+)\\s*'	1248
'#\\s*if(n?def\\s+(?P<ifdef>\\w+)|\\s+(?P<if>.+))'	533
'(.*)-(debug(info)?|devel|headers|source|static)$'	1226
'^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'	53
u'(__Pyx_X?(GOT|GIVE)REF|__Pyx_RefNanny[A-Za-z]+)'	1621
'(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'	228
'https?:\\/\\/www.filepicker.io\\/api\\/file\\/.*'	1617
'http(s)?://(www.)?((e621)|(e926)).net/post/show/'	539
'^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'	1491
'Population in (\\d{4})( \\(est\\))?.*?([\\d,.]+)'	55
'\\s+cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'^R(?P<reps>\\d+)?/(?P<intv>P.+)/(?P<end>[^P].*)$'	1571
'^(\\d{1,2}|\\*)(?:-(\\d{1,2}))?(?:/(\\d{1,2}))?$'	1463
'getsatisfaction\\.com/(\\w*)(?:/products/(\\w*))?'	872
'((?P<user>[^:]+)(:(?P<pass>.+))?@)?(?P<server>.+)'	43
'([+-])?(?:(?:(\\d?\\d):)?(\\d?\\d):)?(\\d?\\d)\\Z'	873
'^index ([0-9A-Fa-f]+)\\.\\.([0-9A-Fa-f]+) ?(.+)?$'	599
'(^| )-{1,2}(?P<opt>\\S+) ?(?P<value>(\\! )?\\S+)?'	826
'^\\s*DECLARE_EVENT_TABLE\\s*\\(\\s*\\)\\s*;?\\s*$'	602
'^\\s*(else|elif\\s.*|except(\\s.*)?|finally)\\s*:'	407
'(?P<name>%%\\(name\\)(?:\\-(?P<digits>[\\d]+))?s)'	1491
'/\\*\\s*\\|(.*?)\\|\\s*(.*?)\\s*(--\\s*(.*))?\\*/'	1007
'^(.*) ?\\[([^ ]*) \\+(0x[0-9a-fA-F]{1,8})\\](.*)$'	1007
'\n@@ -([0-9]+),?([0-9]*) \\+([0-9]+),?([0-9]*) @@'	460
'(?P<locale>.+)?/themes/update-check/(?P<id>\\d+)$'	391
'([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'	1288
'(_controller|_test|_controller_test)?\\.(rb|yml)$'	407
'.*\\brequire\\s*\\(?([\\\'\\"])([\\w._-]+)\\1\\)?'	727
'^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'	1465
'^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'	3
'^(-?(0|[1-9][0-9]*)(\\.[0-9]*)?([eE][+-]?[0-9]+)?)'	1181
'^#define ([^ ]+)\\(([^)]*)\\) *([^\\\\]*)\\\\?\\n$'	534
'(\\s*(>>>|\\.\\.\\.)?\\s*)from werkzeug import\\s+'	992
'^[$]?([A-Z]+)[$]?(\\d+)(:[$]?([A-Z]+)[$]?(\\d+))?$'	729
'^(\\s*)(\\d+\\.\\s+|\\-\\s+|\\+\\s+|\\*\\s+)?(.*)$'	362
'(http://(?:www\\.)?s[ia]mplecd\\.\\w+/)(id|entry)/'	1569
'PostgreSQL (\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:devel)?'	1469
'[\\n]*[\\-]{5}BEGIN( RSA| DSA)? PRIVATE KEY[\\-]{5}'	1315
'https?://?([-\\w.]*\\.)?digg\\.com/\\w+\\.\\w+(/|$)'	200
'[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'	1076
'^[^\\\\]+\\\\([^\\\\$]+)(\\$?\\\\)?([^\\\\$]+)\\$?$'	225
'^(?:.:)?[^:]+:(\\d+): \\[([EWRCI]+)[^\\]]*\\] (.*)$'	640
'.*takes .* ([0-9]*) arguments? \\(([0-9]*) given\\)'	875
'(.+), Version: (\\d+)\\.(\\d+)\\.(\\d+)(?:-(\\S+))?'	873
'https?://bitbucket.org/([^/]+/[^/]+)/src/([^/]+)/?$'	1025
'membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)'	1068
'(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'	695
'(zc.buildout|setuptools)( version)? \\d+[.]\\d+\\S*'	313
'(\\w+)(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
' load averages?: ([0-9.]+),? ([0-9.]+),? ([0-9.]+)$'	225
'#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'	533
'\\$?([A-I]?[A-Z]\\$?\\d+):\\$?([A-I]?[A-Z]\\$?\\d+)'	55
'@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@(.*)'	1258
'^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'	1571
'Iteration 0, pseudo-likelihood = -?(\\d)+(\\.\\d+)?'	283
'\\.in ([0-9]+(?:\\.[0-9]+)?)\\s?((?:)\\b)?:?\\s?(.*)'	539
'http(s)?://(www.)?twentypercentcooler.net/post/show/'	539
'http[s]?://[www\\.]?twitter\\.com/.+/status/([0-9]+)'	340
'^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'	1580
'(?i)fec\\s*-\\s*(\\d+)(\\.?$|\\s+|\\*BD[0-9a-f]{4}$)'	55
"^\\s*archive_mode\\s*=\\s*'?([a-zA-Z01]+)'?\\s*#?.*$"	1520
'[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-]*)?'	1076
'^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$'	978
'http(s)?://(www.)?derpiboo((.ru)|(ru.org))(/images)?/'	539
'^\\s*((?P<title>[^\\s]*?)\\s+)?(?P<tags>:[\\w_:@]+:)$'	624
'\\s*([bB]asic|[dD]igest)\\s+(?:[\\w]+="[^"]+",?\\s*)?'	1076
'(\\w+)(?:\\:(\\w+))?@([\\w-]+(?:%)?(?:\\.[\\w-]+)*|%)'	873
'^(?:Doctest: )?([\\w\\.]+) \\.\\.\\. \\[([^\\]]+)\\]$'	122
'^(\\(*\\d+\\s*[<>=!]+\\s*\\d+\\)*\\s*(and|or)?\\s*)+$'	605
'^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'	1571
'\\s?["\']([a-zA-Z_"\'\\s\\d\\-\\.#=?!]+)["\']\\s+tset'	1215
'(\\d\\d?):(\\d\\d)(:(\\d\\d))? *([aApP]\\.?[mM]\\.?)?$'	497
'\\A[\\+\\-]?\\d+(?:W\\d+)?(?:T\\d+(?:Z|[+-]\\d+)?)?\\Z'	1571
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'	873
'(?:int|char)(?:\\s+\\*?\\s*|\\s*\\*?\\s+)([a-zA-Z_].*)'	1495
'0x[0-9a-fA-F]+|[+-]?\\d+(\\.\\d+)?([eE][+-]\\d+)?|\\d+'	1247
'<Foo\\(an_attr=<\\.\\.\\.>\\) at remote 0x-?[0-9a-f]+>'	1580
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'	873
'summary\\.php\\?cid=([A-Z0-9]+)&cycle=\\d+\\" ?>([^<]+)'	55
'\\A[\t ]*([\\w\\.\\/]+)\\:(([0-9]+))?(\\:([0-9]+))?\\:?'	649
'([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$'	548
'^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])$'	1328
'[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'	758
'(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'	539
'(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'	310
'^(?P<train>[\\w\\.]+)\\s*(\\,\\s*(?P<test>[\\w\\.]+))?$'	1488
'#define\\s+UJSON_VERSION\\s+"(\\d+\\.\\d+(?:\\.\\d+)?)"'	710
'^\\s*(var\\s+)?[A-Za-z0-9_]+\\s*[=:]\\s*function\\s*\\('	1426
'\\A(?:(\\w+)-)?(\\w+)(?:/([^\\@/]+))?(?:@([^\\@/]+))?\\Z'	1571
'(?P<repeat> *[(]?[ ,0-9]*[)]? *)(?P<dtype>[A-Za-z0-9.]*)'	356
'(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'	119
'^Unit +([01])- \\[ *(-?\\d+)- *(-?\\d+)\\] \\[(\\w+)\\]$'	1302
'#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'	173
'(\\d+\\s)?(\\w+?\\.?\\s\\d+:\\d+)(.\\d+)?(\\d+(.\\d+)?)*'	1535
u'(([a-zA-Z_][a-zA-Z0-9_]*)?:)?([a-zA-Z_][a-zA-Z0-9_-]*)?'	55
'(?P<base>.*?)(?P<keyword>_append|_prepend)(_(?P<add>.*))?'	1143
'(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'	1192
u'((; *if .*)? \\{__pyx_filename = .*goto __pyx_L\\w+;\\})'	1621
'^([A-Z]+)\\s+http://([a-zA-Z0-9\\-\\.]+):?(\\d*)(.*) HTTP'	1548
"^\\s*synchronous_standby_names\\s*=\\s*'([^']*)'\\s*#?.*$"	1520
'^(?P<neg>-?)(?P<Y>\\d{4,})(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'(!?)\\[(?P<caption>.*?)\\]\\(/?files/(?P<location>.*?)\\)'	1580
'(?P<repeat>\\d+)?P(?P<dtype>[A-Z])(?:\\((?P<max>\\d*)\\))?'	332
'(?s)\\[\\[math( +format=".*?")?\\]\\](.*?)\\[\\[math\\]\\]'	138
'^(?P<key>[^ =]+) *= *[\\"\']?(?P<value>[^\\"\']*)[\\"\']?$'	826
'(remote: )?([\\w\\s]+):\\s+(\\d+)% \\((\\d+)/(\\d+)\\)(.*)'	599
'^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'	506
'^[A-Za-z0-9 .#(),_/-]+ +\\([0-9A-F]+, ?[0-9A-F]+\\) +(.*)$'	1432
'(?s)\\[\\[code( +format=".*?")?\\]\\](.*?)\\[\\[code\\]\\]'	138
"([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"	1247
'^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'	602
'([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'	356
'^(?P<neg>-?)---(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+[\\?\\#\\d\\w]*)[\\\'"]?\\)'	1240
'(?P<cf>[\\S]+)+-(?P<tmp>tmp-)?[\\S]+-(?P<suffix>[a-zA-Z.]+)'	1057
'((?P<minutes>\\d[\\d.]*)mn)?\\s*((?P<seconds>\\d[\\d.]*)s)?'	962
'(?P<signal>[+-]?)(?P<relative>[\\d]?)(?P<weekday>[\\w]{2})$'	200
'http(s)?://(www.)?youtube.(com|co.uk|ca)?/watch(.*)\\?v(.*)'	539
'^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'^\\-?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)((E|e)\\-?[0-9]+)?$'	729
'^\\s*[+-]?((\\d+(\\.\\d*)?)|\\.\\d+)([eE][+-]?[0-9]+)?\\s*$'	1247
'^(?:(#{1,6}|\\.+ |\\++ |\\++\\. |\\-+ |\\-+\\. )\\s*)?(.*)$'	1247
'[-][-]((f(90)?compiler([-]exec|)|compiler)=|help[-]compiler)'	356
'(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'	113
'(?P<aname>[^\\s=]+)\\s*(=\\s*(?P<qt>"?)(?P<aval>.+)(?P=qt))?'	1249
'ID=[^,]+,?|Number=[^,]+,?|Type=[^,]+,?|Description="[^"]+",?'	1412
'^([a-zA-Z0-9-_.]+):(-?[0-9.]+)\\|([a-z]+)(?:\\|@([0-9.]+))?$'	395
'@?[a-zA-Z0-9_$]+(?:(?:://|::|->|:|/|@|\\.)@?[a-zA-Z0-9_$]+)+'	407
'https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]'	1293
'[\\(\\[]\\s?(\\d+)\\s?,\\s?(\\d+)\\s?,\\s?(\\d+)\\s?[\\)\\]]'	727
'^\\[{2}(?P<uri>[^][]*)(\\]\\[(?P<description>[^][]*))?\\]{2}'	624
'(?P<year>\\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\\d+))?)?$'	1302
'(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'	1491
'.*?(?:(private|protected) +)?function +(\\w+)(\\(.*\\)) *\\{$'	407
'^(?P<type>[\\w\\s*]+?)(?P<name>\\w+)(\\[(?P<array>\\d+)\\])?$'	533
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=]?)\\s*(?P<value>.*)$'	1108
'(?<![0-9a-zA-Z_.])(\\d+\\.\\d+)(e[+-]?\\d+)?(?![0-9a-zA-Z_.])'	975
'.* line (?P<line>\\d+), col (?P<near>.+?)?, (?P<error>.+?)\\.'	304
'closes:\\s*(?:bug)?\\#?\\s?\\d+(?:,\\s*(?:bug)?\\#?\\s?\\d+)*'	290
'^([4-9]\\.[0-9])\\.[0-9]\\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$'	1570
'<input value=\\\\042(.*?) \\(.*?@(-?\\d+\\.\\d+,-?\\d+\\.\\d+)'	456
'^/usr/lib/perl5/(?:vendor_perl/)?([0-9]+\\.[0-9]+)\\.([0-9]+)/'	1226
'^\\s*Private Creator Identification\\s*\\("?(.*)"?\\)\\)?\\s*$'	1432
':(\\d+) (\\d+) (\\w+) (\\w+) ([A-Z])(\\d+)?\t(.*?)((\t(.*))|$)'	1278
'\\[((\\d+(\\.\\d*)?)([wdhms]?)/)?(\\d+(\\.\\d*)?)([wdhms])\\]$'	173
'.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'	1489
'\\<a(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</a\\>'	1247
'\\<i(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</i\\>'	1247
'(?:http://)?(?:www\\.)?metacafe\\.com/watch/([^/]+)/([^/]+)/.*'	386
'\\<b(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</b\\>'	1247
'(warning:)?(?:.*:)?\\s*([-0-9]+)\\s*:\\s*([-0-9]+)\\s*:\\s*(.*)'	1621
'^(\\((\\w+)\\)(-\\[(\\w*):(\\w+)\\]->\\((\\w+)\\))?)(\\s+(.*))?'	358
'((https?):((//)|(\\\\\\\\))+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)'	472
'(takes [\\w ]+ )(\\d+)[\\w ]*( arguments? \\()(\\d+)( given\\))'	1612
'^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'	1226
'-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)((cm)|(mm)|(in)|(pt)|(pc)|(px))'	729
'SMfunctions\\[\\d+\\] = Array \\("(?:public )?([^,]+)",".+"\\);'	1555
'^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'	506
'"(?P<value>[^@&]*)"(?:@(?P<lang>[^&]*))?(?:&<(?P<datatype>.*)>)?'	55
'\\s?(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'((2[0-5]|1[0-9]|[0-9])?[0-9]\\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9])'	1644
'([^@#:]*)[@:]([^#:]+)?(?::(\\d+(?:-\\d+)?(?:,\\d+(?:-\\d+)?)*))?'	1258
'^(([A-Z])[a-z]+)(([A-Z])[a-z]+)?(([A-Z])[a-z]+)?(([A-Z])[a-z]+)?'	1500
'^([0-9][0-9]?[0-9]?)\\.([0-9][0-9]?[0-9]?)\\.([0-9][0-9]?[0-9]?)$'	1644
'(ATTRS?|ENV|TEST){([a-zA-Z0-9/_.*%-]+)}\\s*(?:=|!)=\\s*"([^"]*)"$'	722
'code-creation,([^,]+),(0x[a-f0-9]+),(\\d+),\\"(.*)\\"(?:,(\\d+))?'	464
'(?P<wikilink>(^|(?<=[^A-Za-z]))[!]?[A-Z][a-z/]+(?:[A-Z][a-z/]+)+)'	1258
'(?:codename (.*),\\s*)?released on (\\w+\\s+\\d+\\w+\\s+\\d+)(?i)'	252
'(\\w+(?:/\\w+)?|\\[[01]?\\.\\d+\\]|[-=]+>|"[^"]+"|\'[^\']+\'|\\|)'	1248
'(?P<asset>[\\w_.:/]+)(?:\\#(?P<defname>[\\w_]+))?(\\.(?P<ext>.*))'	1268
'^/?(?P<l>\\w.+)/(?P<z>\\d+)/(?P<x>\\d+)/(?P<y>\\d+)\\.(?P<e>\\w+)$'	376
'(?s)\\n?\\[\\[code( +format=".*?")?\\]\\](.*?)\\[\\[code\\]\\]\\n?'	138
'#ifdef __cplusplus(?P<code>.*)#endif(\\s*//\\s*!?\\s*__cplusplus)*'	706
'EASY-INSTALL(?:-ENTRY)?-SCRIPT|This file was generated by RubyGems'	944
'((?<=\n)\n)?zip_safe flag not set; analyzing archive contents...\n'	313
'(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(.(\\d{2}))?Z'	729
'^(\\s*)#\\s*begin\\s+wxGlade:\\s*([A-Za-z_]+\\w*)??[.]?(\\w+)\\s*$'	602
'^([\\+\\-]?)(([0-9]+|[0-9]*[\\.][0-9]+))([eE])([\\+\\-]?)([0-9]+)$'	826
'^.+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,6}|[0-9]{1,3})(\\]?)$'	219
'([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'	1051
'((^|\\n)[^%]*?)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w,\\-]+)\\}'	31
'boost::statechart::state<\\s*(\\w*),\\s*(\\w*)\\s*,?\\s*(\\w*)\\s*>'	592
u'[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+)?'	1158
'^https?://twitter.com/(?:#!\\/)?[a-zA-Z0-9_]+/status(?:es)?/([0-9]+)'	175
'(d  ((ext)?demo(needed)?|other)-\\d[.]\\d-py)\\d[.]\\d(-\\S+)?[.]egg'	313
'\\<span(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</span\\>'	1247
'(?P<hostname>https?://(\\w|\\.|:)+)/projects/p/(?P<project>(\\w|-)+)/'	1186
'([A-Za-z_0-9]+)\\((.*?)\\)(?:(?:\\s+->\\s+)\\((.*?)\\))?(?:\\s+(.*))?'	896
'^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'	624
'((?P<title>.+)(-)?)?\\s+(?P<season>\\d)(?P<episode>\\d\\d)(?!\\d)\\s*'	506
'(?P<type>[^:]*)://((?P<user>.+)@)?(?P<location>[^;]+)(;(?P<parm>.*))?'	1143
'([A-Za-z_0-9]+)\\((.*?)\\)(?:(?:\\s+->\\s+)\\((.*?)\\)(?:\\s+(.*))?)?'	1300
'^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$'	1420
'^(bp-)?([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$'	1399
'^[A-Za-z0-9 .#(),_/-]+ +\\([0-9A-F]+, ?[0-9A-F]+\\) [A-Z][A-Z] [0-9]+$'	1432
'(?i)(I|Bli|Pi)nkie(Pie)?(Bot)?, is (?P<pony>.*)( the)? best pony(\\?)?'	539
'up +(?:(?P<days>\\d+) days?, +)?(?:(?P<hours>\\d+):)?(?P<minutes>\\d+)'	225
'Job submitted with jobid: +(\\w+://([a-zA-Z0-9.-]+)(:\\d+)?(/.*)?/\\d+)'	1205
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'(?P<pbs>\\\\*)(?P<escSeq>(?P<inv>[\\^])?\\\\(?P<pP>[pP]){(?P<id>[^}]*)})'	866
'<p>(?:\\s|<br\\s*/?>)*\\x07/sf\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07/sf\\x07'	682
'^(?P<neg>-?)--(?P<M>\\d\\d)-(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'{{[ ]?placeholder[ ]?\\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\\)[ ]?}}'	1187
'(?:(?:(?:http://)?(?:\\w+\\.)?youtube.com/user/)|ytuser:)([A-Za-z0-9_-]+)'	386
'myth://((?P<group>.*)@)?(?P<host>[a-zA-Z0-9_\\.]*)(:[0-9]*)?/(?P<file>.*)'	506
'<MEMBER name="\\??([^"]+)" wn="([^"]*)"[^>]+>|<VNSUBCLASS ID="([^"]+)"/?>'	1248
'^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'	165
'(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'	908
u'(?:[-*/%^&|<>!]=?|&&|\\|\\||<<|>>>|={1,3}|!==?)\\s*(?<!\\+)(\\+)[\\w(\\[]'	304
'\\+?"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"|\\[[^]\\\\]*(?:\\\\.[^]\\\\]*)*\\]|\\S+'	539
'@/(?P<a>\\w*)/(?P<c>\\w*)/(?P<f>\\w*(\\.\\w+)?)(/(?P<args>[\\w\\.\\-/]+))?'	1247
'^\\s*([tlrbhwxy])\\s*([=%<>^_])\\s*([tlrbhwxy]?)\\s*(\\d*)\\s*#(\\d+)\\s*$'	498
'^http://(?:www.)?(.*?)(?:\\:[0-9]+)?/.*/([0-9B][0-9A-Z]{9})(?:[^0-9A-Z]|$)'	913
'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263
'(?:http://)?(?:[a-z0-9]+\\.)?photobucket\\.com/.*[\\?\\&]current=(.*\\.flv)'	386
'err: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'	1322
'([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'	356
'myth://((?P<group>.*)@)?(?P<host>[0-9\\.]*)(:(?P<port>[0-9]*))?/(?P<file>.*)'	506
'(?P<tzname>(Z|(?P<tzsign>[+-])(?P<tzhour>[0-9]{2})(:(?P<tzmin>[0-9]{2}))?)?)'	1399
'(?P<file>[-/\\.\\w<>]+):((?P<line>\\d+):)?(\\d+:)? warning: (?P<msg>[^ ].*)$'	635
'(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'	386
'^kernel(22)?(-)?(smp|enterprise|bigmem|secure|BOOT|i686-up-4GB|p3-smp-64GB)?'	1226
'<strong id="sms_left" name="sms_left">\\s?(\\d+)\\s?/\\s?(\\d+)\\s?</strong>'	922
'/lib/modules/[^/]+/updates/DD/(?P<moduledir>.*/)?(?P<modulename>[^/.]+).ko.*'	1051
'^\\s*(.) (\\[?[\\w\\s\\.]+\\]?)\\s+(.+) -> ([/\\w_\\+\\.-]+)(\t \\(.*\\)?$)?'	599
'(?:[=!]=|is(?:\\s+not)?)\\s*type(?:s.\\w+Type|\\s*\\(\\s*([^)]*[^ )])\\s*\\))'	1025
"'?([^']*)'?!((\\$([A-Za-z]+))?\\$([0-9]+)(:(\\$([A-Za-z]+))?(\\$([0-9]+)))?)$"	729
'<p>(?:\\s|<br\\s*/?>)*\\x07(\\d+)\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07(\\d+)\\x07'	682
u'():\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'(?P<protocol>[^\\s:/]+)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<id>\\S*)'	1184
'<span id="clip-date" style="display:none">[^:]*: (.*?)( \\([^\\(]*\\))?</span>'	1181
'\\b(?P<name>\\S+?)/(?P<version>[^\\(\\s]+)(?P<default>\\(default\\))?(?:\\s|$)'	1384
'^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'	1426
'<built-in method readlines of _io.TextIOWrapper object at remote 0x-?[0-9a-f]+>'	1580
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(twitter).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	1087
'[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'	1247
'^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'	1432
'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'	746
'(\\([0-9\\?]{4}(?:/[IVXLCDM]+)?\\)(?: \\(mini\\)| \\(TV\\)| \\(V\\)| \\(VG\\))?)'	1469
'(\\d+\\.?\\d*)\\s*(second|minute|hour|day|week|month|year|[hdwmy])s?\\s*(?:ago)?$'	1258
'(?:(?P<proto>[a-zA-i0-9]+)://)?(?P<host>[a-zA-Z0-9.-]+)(?:[:](?P<port>[0-9]+))?/?'	863
'((?P<h>[0-9]+))([^0-9 ]+(?P<m>[0-9 ]+))?([^0-9ap ]+(?P<s>[0-9]*))?((?P<d>[ap]m))?'	1247
'^([0-9]{4}):([0-9]{1,2}):([0-9]{1,2}) ([0-9]{1,2}):([0-9]{1,2})(?::([0-9]{1,2}))?'	1495
"^Function.*has unrooted.*of type.*live across GC call ('?)(.*?)('?) at \\S+:\\d+$"	1007
'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+#]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'	340
'^\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?(?:\\.post\\d+)?(?:\\.dev\\d+)?$'	405
'\\s*([a-zA-Z_][-.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n<>]*))?'	413
'myth://((?P<group>.*)@)?(?P<host>[\\[\\]a-zA-Z0-9_\\-\\.]*)(:[0-9]*)?/(?P<file>.*)'	506
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(facebook|fb).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'^(?P<user>[^:]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?$'	1247
'.*?application/vnd.openstack.reddwarf(\\+.+?)?;version=(?P<version_no>\\d+\\.?\\d*)'	993
'^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+#]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$'	340
'[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'	1025
'(\'[^\']*\'|"[^"]*"|//?|\\(\\)|==?|[/.*\\[\\]\\(\\)@])|([^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1621
'((?:^[\\\'].*[\\\'])|(?:^[\\"].*[\\"]))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
'^(?:https?://)?(?:\\w+\\.)?facebook.com/video/video.php\\?(?:.*?)v=(?P<ID>\\d+)(?:.*)'	386
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)-(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'^gstreamer(?P<version>[0-9\\.]+)\\((?P<kind>.+?)-(?P<data>.+?)\\)(\\((?P<opt>.*)\\))?'	290
'^\\$?(\\d{1,3},?(\\d{3},?)*\\d{3}(\\.\\d{0,2})?|\\d{1,3}(\\.\\d{0,2})?|\\.\\d{1,2}?)$'	977
'\n^\ncreate \\s+ (?: or \\s+ replace \\s+ )?\nfunction ( [^(]+ )\n[(] ( [^)]* ) [)]\n'	1520
'^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})(\\.\\d{1,6})?Z?([\\+\\-]\\d{2}:?\\d{2})?$'	1580
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^\\s"\\\'=<>`]*))?'	1580
'^(?P<t>\\S.*?)?(?:\\s+\\[(?P<a>.+?)\\])?(?:\\s+(?P<k>\\S+))?(?:\\s+(?P<p>popup))?\\s*$'	1247
'\\([ ]*-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)([ ]+-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)){2}[ ]*\\)'	729
'^class(\\s+[^\\s]*_EXPORT)?\\s+(vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s+(vtk[^ \n\\{]*)'	557
'(?P<prefix>^diff(\\s-[a-z]{1})?(\\s-[a-z]{1})?(\\s-[a-z]{1})?)(?P<main>.*)(?P<suffix>$)'	31
'(\\d{4}-\\d{2}-\\d{2} |)(\\d{2}:\\d{2}:\\d{2}) \\[([A-Z]+)\\] (?:\\[Minecraft\\] )?(.*)'	1463
'^\\s*(?:[87][- ]?[- \\(]?[0-9]{3}[- \\)]?[- ]?)?[0-9]{3}[- ]?[0-9]{2}[- ]?[0-9]{2}\\s*$'	44
'(?P<replace>(?P<type>>((!?@?)|\\|)?)\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	896
'^(?P<position>[cj]?(?:ob|fl|fi|fe|fn))=\\s*(?:\\((?P<id>\\d+)\\))?(?:\\s*(?P<name>.+))?'	1576
'(?P<replace>(?P<type><((!?@?)|\\|)?)\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'	896
'<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'	1488
'(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'	1073
'^\\s*(?P<new_window>\\+?)\\s*(?P<dots>\\.*)(?P<absolute_path>(?:\\w+)?(?:\\.\\w+)*)\\s*$'	1567
'(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'	1184
'^(-{3}-*)(?::(?P<c>[a-zA-Z][_a-zA-Z\\-\\d]*)(?:\\[(?P<p>[a-zA-Z][_a-zA-Z\\-\\d]*)\\])?)?$'	1247
'((?P<hour>\\d+) hour(s|))? ?((?P<min>\\d+) min)? ?((?P<sec>\\d+) sec)? ?((?P<ms>\\d+) ms)?'	1469
'^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'	1226
'^(([^:/?#]+):)?(//(([^:]+)(:(.+))?@)?([^/?#:]*)(:([0-9]+))?)?([^?#]*)(\\?([^#]*))?(#(.*))?'	826
'(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)'	602
'^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'	1024
'^\\s*([A-Z.a-z -]+[1-2]?)\\s+([0-9A-Z]+)\\s+([0-9A-Zx]+)\\s+([1-3])\\s+([A-Z][A-Z])\\s+.*$'	1432
'(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'	1073
'(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'(?<!\\w|\\<|/|:)/[^\\s/]([^/]*[^\\s/])?/(?!\\w|/|:)|(?<!\\w)_[^\\s_]([^_]*[^\\s_])?_(?!\\w)'	18
'[ \t\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\n]*=[ \t\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n]*))?'	413
'^(\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?(-(\\d+(\\.\\d+)?))?$'	1594
'^(?P<neg>-?)(?P<h>\\d\\d):(?P<m>\\d\\d):(?P<s>\\d*(\\.\\d+)?)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'	485
'(?<!\\")(?<!\\\\.)(?:[a-z|A-Z]+[0-9]+:?(?:[a-z|A-Z]+[0-9]+\\:?)?)(?:(?=[+\\-*/% \\,)])|(?!.))'	152
'{\\s*(.+?)?\\s?(\\([0-9\\?]{4}-[0-9\\?]{1,2}-[0-9\\?]{1,2}\\))?\\s?(\\(#[0-9]+\\.[0-9]+\\))?}'	1469
'(\\s*DRI_CONF_ENUM\\s*\\([^,]+,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'	557
'(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	1122
'^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'	1463
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+)$'	1247
'\\[\\s*[a-zA-Z_][a-zA-Z0-9_]*\\s+(?:[a-zA-Z_][a-zA-Z0-9_]*\\s*\\]|(?:[a-zA-Z_][a-zA-Z0-9_]*)?:)'	1555
'(((?P<py>python)|(?P<fr>fakeroot))\\s*)*(?P<func>[\\w\\.\\-\\+\\{\\}\\$]+)?\\s*\\(\\s*\\)\\s*{$'	1143
'\\s*(((if|while|else\\s*(if)?|for(each)?|switch|declare)\\s*\\(.*\\)[^{:;]*)|(do\\s*[^\\({:;]*))'	407
'(\xd0\xbf\\.?|\xd0\xbf\xd0\xb0\xd1\x80\xd0\xba) \xd0\xbf\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xb4\xd1\x8b'	1122
'(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d+)?)(?:(Z)|([+-])(\\d{2}):(\\d{2}))'	348
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<path>[^\\?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'http://(?:www\\.)?redd(?:\\.it/|it\\.com/(?:tb|(?:r/[\\w\\.]+/)?comments)/)(\\w+)(/.+/)?(\\w{7})?'	1463
'<Foo\\(an_attr=<Foo\\(an_attr=<\\.\\.\\.>\\) at remote 0x-?[0-9a-f]+>\\) at remote 0x-?[0-9a-f]+>'	1580
'^(?P<device>[\\S\\:]+)\\s+Link encap:(?P<link>(\\S+ ?\\S+))(\\s+HWaddr (?P<hwaddr>[0-9a-fA-F:]+))?'	826
"err: (?P<error>.+?(Syntax error at \\'(?P<near>.+?)\\'; expected \\'.+\\')) at /.+?:(?P<line>\\d+)?"	1322
'^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'	405
'^(?P<Y>(?:\\d\\d)?\\d\\d)?(?P<M>\\d\\d)(?P<D>\\d\\d)(?P<h>\\d\\d)(?P<m>\\d\\d)(?:\\.(?P<s>\\d\\d))?$'	1007
'_(.+?(?: \\([0-9\\?]{4}(?:/[IVXLCDM]+)?\\))?(?: \\(mini\\)| \\(TV\\)| \\(V\\)| \\(VG\\))?)_ \\(qv\\)'	1469
'^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$'	548
'((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(?![\\d])'	190
'^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'	826
'((?P<title>.+?)(-)?)?(\\s*)(s|(season\\s)|\\s)(?P<season>\\d+)\\s*(e|(episode\\s)|x)(?P<episode>\\d+)'	506
'(?P<source_filename>.+)_(?P<x>\\d+)x(?P<y>\\d+)(?:_(?P<options>\\w+))?_q(?P<quality>\\d+)(?:.[^.]+)?$'	248
'(ACTION|DEVPATH|KERNELS?|NAME|SYMLINK|SUBSYSTEMS?|DRIVERS?|TAG|RESULT|TEST)\\s*(?:=|!)=\\s*"([^"]*)"$'	722
"^\\s*([A-Za-z0-9'./> -]+)\\s+\\(?([0-9A-F]+),([0-9A-FxXY]+)\\)?\\s+([A-Z][A-Z])\\s+([1-3C]+)?,?.*\\s*$"	1432
'((?:(?:25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(?:25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d))))'	1563
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:http://)?(?:[a-z]+\\.)?video\\.yahoo\\.com/(?:watch|network)/([0-9]+)(?:/|\\?v=)([0-9]+)(?:[#\\?].*)?'	386
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'((?P<protocol>[^:]+)://)?((?P<username>[^:]+)(:(?P<password>.+))?@)?(?P<server>[^/]+)(/(?P<mailbox>.+))?$'	43
'>rRNA_([A-Z]+[0-9]+)\\.([0-9]+)_([0-9]+)-([0-9]+)_DIR([-\\+]) /molecule=(.*)_rRNA /score=([0-9]+.?[0-9]*)'	1331
'(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(\\s*DRI_CONF_DESC\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'/(?P<url>[\\w/]+)/(?P<resource_name>\\w+)/(?P<pk>\\d+)/(?P<child_resource_name>\\w+)/(?P<child_pk>\\d+)/?$'	1357
"[Ee]rr(or)?: (?P<error>.+?(Syntax error at \\'(?P<near>.+?)\\'; expected \\'.+\\')) at /.+?:(?P<line>\\d+)?"	1025
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) (?P<title>.*)\\.(?:\\w{2,5})$'	913
'^{[^\\.]+\\.[^\\.]+(\\.(lt|gt|le|ge|eq|ne|contains|startswith|year|month|day|hour|minute|second))?(\\.not)?}$'	1247
'(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	1122
'(?:(?P<format>[AIJ])(?P<width>[0-9]+)?)|(?:(?P<formatf>[FED])(?:(?P<widthf>[0-9]+)\\.(?P<precision>[0-9]+))?)'	689
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'((?<=[\\\'"\\s/])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?(?:\\s|/(?!>))*'	1580
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
u'(Traceback \\(most recent call last\\):\\n(?:  File "[^"\\n]+", line \\d+, in \\w+\\n(?:    .+\\n)?)+\\S.*\\n)'	737
'(?P<prefix>^[\\s]*)(?P<main>([\\*\\s]+(html|body)\\s+)?[a-zA-Z_\\.,#]+[\\sa-zA-Z_\\.,#\\{:]*)(?P<suffix>[^;]+)$'	31
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>[GgMmKk]?(?P<multiplier_style>[Ii])?[Bb])?\\s*(?P<fraction>\\(\\d+%\\))?'	962
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(\\s*DRI_CONF_DESC_BEGIN\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'(align|valign|border|width|height|alt|margin(?:-(?:left|right|top|bottom))?|title|longdesc|class|id|usemap)=(.+)'	1258
'\n    ^(?P<ending>\\w+)\n    (?P<intact>[*]?)\n    (?P<num>\\d+)\n    (?P<append>\\w*)\n    (?P<cont>[.>])\n    '	1184
'\\s*(?P<name>[+\\w. -]+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1580
'^\\s*([A-Za-z0-9 #()./,_:>-]+)\\s+([0-9A-Z]+),\\s?([0-9A-ZxX]+)\\s+([1-3C]+)\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
'(?P<fence>^(?:~{3,}|`{3,}))[ ]*(\\{?\\.?(?P<lang>[a-zA-Z0-9_+-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?<=\\n)(?P=fence)[ ]*$'	1395
'!?((((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?))(/(3[012]|[12]?[0-9])))'	735
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'	873
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d\\.\\-]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
'^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.\\d+)?$'	646
'^(starting\\s+from\\s+page\\s+(?P<number>\\w+))?\\s*(using\\s+(?P<key>[\\"\\\'\\w]+))?\\s*(as\\s+(?P<var_name>\\w+))?$'	250
'[ \t\r\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\r\n]*=[ \t\r\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:+*%?!\\(\\)_#=~]*))?'	1076
'(?:http://)?video\\.google\\.(?:com(?:\\.au)?|co\\.(?:uk|jp|kr|cr)|ca|de|es|fr|it|nl|pl)/videoplay\\?docid=([^\\&]+).*'	386
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P=artist) - (?P<album>.*) - (?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P=album)-(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?P<rtn>\\S+)\\s+(?P<fname>[^\\s\\(\\){}]+({[^{}]*})?)\\s*\\((?P<args>(({[^{}]*})+|(\\([^\\(\\)]*\\))+|[^\\(\\)]+)*)\\)'	1249
'\\s*((const|mutable)\\s+)?(char|(short(\\s+int)?)|int|long(\\s+(long|int))?)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*:\\s*\\d+\\s*;'	1199
'^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])(\\D?([01]\\d|2[0-3])\\D?([0-5]\\d)\\D?([0-5]\\d)?\\D?(\\d{3})?)?$'	1328
'^<([\\w\\-]+(?:\\:[\\w\\-]+)?)((?:\\s+[\\w\\-]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	407
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?(?P<urlargs>.*))?$'	1247
'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})[T ](?P<hr>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})(?P<sec_frac>\\.\\d+)?'	1155
'^(?P<neg>-?)P((?P<Y>\\d+)Y)?((?P<M>\\d+)M)?((?P<D>\\d+)D)?(?P<T>T?)((?P<h>\\d+)H)?((?P<m>\\d+)M)?((?P<s>\\d*(\\.\\d+)?)S)?$'	1076
'(?P<protocol>PYRONAME|PYRONAMESSL)://(((?P<hostname>[^\\s:]+):(?P<port>\\d+)/)|((?P<onlyhostname>[^\\s:]+)/))?(?P<name>\\S*)'	1184
'^(?:nfs://)?(?P<host>([a-zA-Z][\\w\\.^-]*|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}))(?::(?P<port>\\d*))?(?P<dir>/[\\w/]*)?$'	1543
'\\s*\n      <table[^>]*>\\s*\n        ((?:<tr[^>]*>)?\n          (.*?)\n        (?:</tr>)?)\\s*\n      </table>\\s*$\n      '	1258
'(?:.*(/|\\\\))?(?P<albumartist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})_(?P<artist>.*)_-_(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^<(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*\\/?\\s*>'	1025
'^P(?:(?P<days>\\d+(.\\d+)?)D)?(?:T(?:(?P<hours>\\d+(.\\d+)?)H)?(?:(?P<minutes>\\d+(.\\d+)?)M)?(?:(?P<seconds>\\d+(.\\d+)?)S)?)?$'	1158
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<artist>.*)-(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.\\d+)(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'	1184
'^\\s*(?:virtual\\s+)?void\\s+([A-Za-z_]+\\w*)\\s*\\([A-Za-z_:0-9]+\\s*&\\s*\\w*\\)\\s*;\\s*//\\s*wxGlade:\\s*<event_handler>\\s*$'	602
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$'	1247
'(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)((?P<year>\\d{4}) - )(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^GL_?API(CALL)?\\s+(?P<return>[\\w\\s*]+[\\w*])\\s+(GL)?_?APIENTRY\\s+(?P<name>\\w+)\\s*\\((?P<params>[\\w\\s(,*\\[\\])]+)\\)\\s*;'	533
'^! (((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)(/(3[12]|[12]?[0-9])))[\\t\\s]+([^\\t]+)$'	735
'^\\s*([A-Za-z0-9&{}=+ \xab\xbb%;#()./,_:<>-]+)\\s+\\(?([0-9A-Fa-fn]+),\\s?([0-9A-Fa-fyxX]+)\\)?\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+?)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<artist>.*) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<artist>.*) - (?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})\\. (?P<artist>.*) - (?P<title>.*)\\.(?:\\w{2,5})$'	913
'<(\\/?)(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*(\\/?)\\s*>'	1025
'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})[T_ ](?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(?P<subsecond>\\.\\d+)?Z?'	1469
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'^\\s*\\(([0-9A-Z]+),([0-9A-Zx]+)\\)\\s+([A-Za-z0-9./:_ -]+)\\s+\\|\\s+([A-Za-z0-9 ()._,/#>-]+)\\s+([A-Z][A-Z]_?O?W?)\\s+([0-9n-]+)\\s*$'	1432
'^(?P<t>\\S.*?)?(?:\\s+\\[(?P<a>.+?)\\])?(?:\\s+(?P<k>\\S+))?\\s+(?P<p>img|IMG|left|right|center|video|audio)(?:\\s+(?P<w>\\d+px))?\\s*$'	1247
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)-(?P<D>\\d\\d)T(?P<h>\\d\\d):(?P<m>\\d\\d):(?P<s>\\d*(\\.\\d+)?)(?P<tz>(Z|([-+]\\d\\d:\\d\\d))?)$'	1076
'//\\s?[\\-]*\\s(?P<desc>.*?)\\*/\\W*?struct\\s(?:ASSIMP_API\\s)?(?P<name>[a-z][a-z0-9_]\\w+\\b)[^{]*?\\{(?P<code>.*?)\\}\\s*(PACK_STRUCT)?;'	706
'^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$'	317
'(?:.*(/|\\\\))?(?P<albumartist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P=album)-(?P<tracknum>\\d{2})-(?P<artist>.*)-(?P<title>.*)\\.(?:\\w{2,5})$'	913
'^\\s*([A-Za-z0-9&{}=+ ;%#\\[\\]()./,_:<>-]+)\\s+\\(?([0-9A-Fa-f]+),\\s?([0-9A-Fa-fyxX]+)\\)?\\s+([1-3C]+)\\s+([A-Z][A-Z])\\s+([0-9Nn-]+)\\s*$'	1432
"([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"	1247
'^(?:(?P<days>-?\\d+) )?((?:(?P<hours>\\d+):)(?=\\d+:\\d+))?(?:(?P<minutes>\\d+):)?(?P<seconds>\\d+)(?:\\.(?P<microseconds>\\d{1,6})\\d{0,6})?$'	1158
'http://rapidshare.com/files/\\d+/.*\\.(?:rar|zip|avi|wmv|part\\d+\\.rar|\\d+)|http://megaupload.com/?d=........|http://megaporn.com/?d=........'	1173
'^https?://cdnsecakmi.kaltura.com/p/(?P<partner_id>[\\d]+)/sp/(?P<subp_id>[\\d]+)/flvclipper/entry_id/(?P<entry_id>[\\w]+)/version/0(?:/ext/flv)?'	856
'(?x)\n        \\[\\s*\\]\n    |   \\(\\s*\\)\n    |   \\+\\+ | --\n    |   ->\\*? | \\,\n    |   (<<|>>)=? | && | \\|\\|\n    |   [!<>=/*%+|&^~-]=?\n'	1087
'(((http|https)://)|(www\\.))+(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(/[a-zA-Z0-9\\&amp;%_\\./-~-]*)?'	548
'([a-zA-Z]+[.]? \\d+\\, \\d\\d\\d\\d at \\d+(\\:\\d+)? [ap]\\.m\\. [A-Z]{1,5})|( \\((\\d+ hour(s)?(, )?)?(\\d+ minute(s)?(, )?)?(\\d+ second(s)?(, )?)?\\))'	1529
'(?x)\n        \\[\\s*\\]\n    |   \\(\\s*\\)\n    |   [!<>=/*%+|&^-]=?\n    |   \\+\\+ | --\n    |   (<<|>>)=? | ~ | && | \\| | \\|\\|\n    |   ->\\*? | \\,\n'	251
'^(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)(\\.(?P<patch>[0-9]+))?(\\-(?P<prerelease>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?(\\+(?P<build>[0-9A-Za-z]+(\\.[0-9A-Za-z]+)*))?$'	1025
'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'	1065
'(?P<comment>/\\*\\*[^{}]*?\\*/)?\\s*message\\s*{\\s*(?P<type>\\w*)\\s*,\\s*(?P<subtype>\\w*)\\s*,\\s*(?P<subtypecode>\\w*)\\s*,\\s*(?P<datatype>\\w*)\\s*}\\s*;\\s*'	1522
'(?:http://)?(?:\\w+\\.)?youtube.com/(?:(?:view_play_list|my_playlists|artist)\\?.*?(p|a)=|user/.*?/user/|p/|user/.*?#[pg]/c/)([0-9A-Za-z]+)(?:/.*?/([0-9A-Za-z_-]+))?.*'	386
'^(optimized.)?group(?P<year>[0-9]{2}).(?P<group>[^.]+).mc(?P<prodyear>[0-9]{2})[_]?(?P<energy>[0-9]{1,2})(TeV)?.(?P<run>[0-9]+).(?P<name>).(?P<tag>[^.]+).(?P<suffix>.+)$'	270
'^Line (?P<line>\\d+) of "(?P<filename>[\\w\\\\/\\.\\-+:]*)" starts at address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+> and ends at 0x[0-9a-f]+ <(?P<symend>[^+]+)(\\+\\d+)?>.'	108
'(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xb0|\xd0\xbf\\.?\\s?\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xb0)'	1122
'\n(^|\\s) # start of string or has whitespace before it\n(https?://[:/.?=&;a-zA-Z0-9_-]+) # the URL itself, http or https only\n(\\s|$) # trailing whitespace or end of string\n'	485
'^\\s+((?P<up>UP)\\s+)?((?P<use_bcast>(BROADCAST|LOOPBACK))\\s+)?((?P<running>RUNNING)\\s+)?((?P<use_mcast>(MULTICAST|NOARP))\\s+)?MTU:(?P<mtu>[0-9]+)\\s+Metric:(?P<metric>[0-9]+)'	826
'\n    (?:\'[^\'\\n\\r]*\')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+(?:\\.\\w+)*|\n    (?:"[^"\\s]+")+|\n    \\(|\\)|\n    \\S+\n    '	1495
'.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'	1244
'(?P<indent>^\\s*)(?P<visibility>(final|abstract)?\\s?(public|private|protected)?\\s?(static)?\\s*)(?P<entity>(function|class|interface)\\s+)(?P<name>[^$]+[&a-zA-Z0-9_]+)(?P<args>.*$)'	31
'\n       (^\\.\\.[ ]*pylisting::[ ]?\\S*\\n    # directive\n            (?:[ ]*\\n|                   # blank line or\n               [ ]+.*\\n)*)               #   indented line\n        '	1248
'(?P<year>[0-9]{4})-(?P<month>[0-9]{1,2})-(?P<day>[0-9]{1,2}).(?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?(?P<tz>Z|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{1,2})(:)?(?P<tzmin>[0-9]{2})?)?'	506
'\n        (?P<decl>typedef\\s+struct\\s*\\w*\\s*)  # Declaration\n        {(?P<body>.*?)}(?P<footer>\\s*        # Body\n        (?P<name>playerc_\\w+?)(_t)?          # Name\n        \\s*;)\n    '	1522
'(?P<year>[0-9]{4})-(?P<month>[0-9]{1,2})-(?P<day>[0-9]{1,2}).(?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?( )?(?P<tz>Z|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{1,2})(:)?(?P<tzmin>[0-9]{2})?)?'	506
'(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\\d+|[xX*])\n         (?:\\.(?P<minor>\\d+|[xX*])\n          (?:\\.(?P<patch>\\d+|[xX*]))?\n         )?\n        )\n        (?P<other>.*)$'	1025
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	557
'(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{2}(?::?\\d{2})?)?$'	1158
'(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xbc\xd1\x83\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0|\xd0\xbf\\.?\\s?\xd0\xbc\xd1\x83\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0)'	1122
'(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\\d+)\n         (?:\\.(?P<minor>\\d+)\n          (?:\\.(?P<patch>\\d+)\n           (?P<other>[-+][a-zA-Z0-9-+.]*)?\n          )?\n         )?\n        )?$'	1025
'\\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alt>\\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>(?!0)\\d+)?\n(?P<thousands_sep>,)?\n(?:\\.(?P<precision>0|(?!0)\\d+))?\n(?P<type>[eEfFgGn%])?\n\\Z\n'	1580
'((?:(?:(?:(?!-)(?:[\\w\\d-])*[A-Za-z](?:[\\w\\d-])*(?:(?<!-))){1,63})(?:(?:\\.)?(?:(?!-)[\\w\\d-]{1,63}(?<!-)))*|(?:[\\d]{1,3}(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3}))))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
"^([\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$"	1247
'(?P<dayname>[a-zA-Z]{3}), (?P<day>[0-9]{1,2}) (?P<month>[a-zA-Z]{3}) (?P<year>[0-9]{2,4}) (?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?( )?(?P<tz>[A-Z]{2,3}|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{2})(?P<tzmin>[0-9]{2}))?'	506
'^(((?P<first_page>\\w+)\\,)?(?P<per_page>\\w+)\\s+)?(?P<objects>\\w+)(\\s+starting\\s+from\\s+page\\s+(?P<number>\\w+))?(\\s+using\\s+(?P<key>[\\"\\\'\\w]+))?(\\s+with\\s+(?P<override_path>\\w+))?(\\s+as\\s+(?P<var_name>\\w+))?$'	250
'(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb4\xd0\xbc\\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'	1122
'\\[(?P<escapeopen>\\[?)(?P<name>[\\w\\d\\_-]+)\\b(?P<arguments>[^\\]\\/]*(?:\\/(?!\\])[^\\]\\/]*)*?)(?:(?P<selfclosing>\\/)\\]|\\](?:(?P<content>[^\\[]*(?:\\[(?!\\/(?P=name)\\])[^\\[]*)*)\\[\\/(?P=name)\\])?)(?P<escapeclose>\\]?)'	934
'(?x)\n        (?P<major>[0-9]+)\n        \\.(?P<minor>[0-9]+)\n        \\.(?P<patch>[0-9]+)\n        (?:\\-(?P<prerelease>(?:[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?))?\n        (?:\\+(?P<build>(?:[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?))?'	1025
'(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb0\xd0\xb4\xd0\xbc.|\xd0\xb0\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x80\xd0\xb0\xd0\xbb\xd0\xb0) \xd1\x83\xd1\x88\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb2\xd0\xb0'	1122
'(?P<exp>export\\s*)?(?P<var>[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P<flag>[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P<colon>:=)|(?P<ques>\\?=)|(?P<append>\\+=)|(?P<prepend>=\\+)|(?P<predot>=\\.)|(?P<postdot>\\.=)|=)\\s*(?P<apo>[\'\\"]?)(?P<value>.*)(?P=apo)$'	1143
'.*AST_TYPE(LOC)?_TRAVERSE_MATCHER\\(\n                       \\s*([^\\s,]+\\s*),\n                       \\s*(?:[^\\s,]+\\s*),\n                       \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                     \\)\\s*;\\s*$'	1244
'(?P<exp>export\\s*)?(?P<var>[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P<flag>[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P<colon>:=)|(?P<lazyques>\\?\\?=)|(?P<ques>\\?=)|(?P<append>\\+=)|(?P<prepend>=\\+)|(?P<predot>=\\.)|(?P<postdot>\\.=)|=)\\s*(?P<apo>[\'\\"]?)(?P<value>.*)(?P=apo)$'	1143
'(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)\\.?\\s?\xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb5\xd0\xb2\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2'	1122
'^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'	1399
'^ ([\\w.]+\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	898
'^ ([\\w.]*\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	1551
'((?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::) :)|(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?: \\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
"\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*>[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"	55
"\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"	200
'\n                                (?P<pre_sep>[ _.-]*)\n                                ((?:s(?:eason|eries)?\\s*)?%0?S(?![._]?N))\n                                (.*?)\n                                (%0?E(?![._]?N))\n                                (?P<post_sep>[ _.-]*)\n                              '	1269
'^Host (?P<host>.+), plugin (?P<plugin>.+)( \\(instance (?P<plugin_instance>.+)\\))? type (?P<type>.+)( \\(instance (?P<type_instance>.+)\\))?: Data source "(?P<ds_name>.+)" is currently (?P<ds_value>.+)\\. That is (below|above) the (failure|warning) threshold of (?P<ts_value>[\\-0-9\\.]+)(?P<percent_flag>%?)\\.'	826
'(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f|\xd0\xbf\\.?\\s?\xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f|\xd0\xbf\xd0\xbb\\.?\\s?\xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f)'	1122
'\n        [^<]*\n        (\n          ((<!--.*?-->)                         |  # comment\n           (<![CDATA[.*?]])                     |  # raw character data\n           (<!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>) |  # doctype decl\n           (<[^>]*>))                              # tag or PI\n          [^<]*)*\n        \\Z'	1248
'^\n                                    \\s*\n                                    ((?:\\[+\\s*))\n                                    ((?:[a-z0-9:_\\.\\s,]*))\n                                    \\s*\n                                    ((?:\\]+))\\s*\n                                    (\\#.*)?\n                                    $'	1256
'\n\t\t\t       (?xi)( # allow comments, case insensitive\n\t\t\t        if\\s* # begins with an if statement\n\t\t     (.*(and|or)\\s*)* # predicates are possible\n\t\t       keycode\\s*=\\s* # keycode assignment\n\t        (?P<keycode>\\w{5})\\s* # \n\t  (?P<assign_name>\\w+)\\s*=\\s* #\n(?P<assign_value>[0-9](.[0-9]+)?)\\s*) #\n\t\t\t\t      '	962
'sockets: used \\d+\nTCP: inuse (?P<tcp_inuse>\\d+) orphan (?P<orphans>\\d+) tw (?P<tw_count>\\d+) alloc (?P<tcp_sockets>\\d+) mem (?P<tcp_pages>\\d+)\nUDP: inuse (?P<udp_inuse>\\d+)(?: mem (?P<udp_pages>\\d+))?\n(?:UDPLITE: inuse (?P<udplite_inuse>\\d+)\n)?RAW: inuse (?P<raw_inuse>\\d+)\nFRAG: inuse (?P<ip_frag_nqueues>\\d+) memory (?P<ip_frag_mem>\\d+)\n'	803
'\n    ep                  # Character Literals\n    (?:isode)?          # Junk group for optional character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    [\\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'	926
'(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80\xd0\xb0|\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb0.|\xd0\xbf\\.?\\s?\xd0\xb0\\.?|\xd0\xbf\\.?\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80\xd0\xb0)\\s?\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'	1122
'\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '	220
'^\\s*AST_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\n                                    \\s*\n                                    ((?:[a-z][a-z0-9_]*))\n                                    \\s*\n                                    =\n                                    \\s*\n                                    ((?:[a-z0-9_\\\\/:]*))\n                                    \\s*\n                                    (\\#.*)?\n                                    $'	1256
'(\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd1\x82\xd0\xb5\xd1\x85\\.?\\s?\xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd0\xb8\xd1\x82\xd1\x83\xd1\x82|\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\\.?\\s?\xd0\xb8\xd0\xbd\xd1\x82\xd1\x81\xd1\x82\xd0\xb8\xd1\x82\xd1\x83\xd1\x82|\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xba\xd0\xb0)'	1122
'^\\s*AST_MATCHER_FUNCTION(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'\\s*<DOC>\\s*\n     (\\s*(<DOCID>\\s*(?P<docid>.+?)\\s*</DOCID>|\n           <STORYID\\s+[^>]*?>\\s*.+?\\s*</STORYID>|      \n           <SLUG\\s+[^>]*?>\\s*.+?\\s*</SLUG>|          \n           <DATE>\\s*(?P<date>.+?)\\s*</DATE>|         \n           <NWORDS>\\s*.+?\\s*</NWORDS>|                    \n           <PREAMBLE>\\s*.+?\\s*</PREAMBLE>)\\s*)*\n     <TEXT>\\s*(?P<text>.+?)\\s*</TEXT>\\s*(<TRAILER>\\s*(?P<trailer>.+?)\\s*</TRAILER>\\s*)?</DOC>\\s*'	1488
'^(?P<exception>sqlite)://:memory:$|\n                     ^(?P<driver>\\w+?)://  # driver\n                     (?:(?:(?P<user>\\w+?)(?::(?P<password>\\w+?))?@)?  # user and password pattern\n                     (?:(?P<host>[\\w\\.]+?)(?::(?P<port>\\d+))?/|(?P<unix_socket>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*):)  # host patterns\n                     (?P<dbname>\\w+)|(?P<path>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*))$ # database patterns'	648
'(\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd1\x83|\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbc|\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82|\xd0\xb0\xd1\x80\xd0\xb5\xd0\xbd\xd0\xb4\xd1\x83\xd0\xb5\xd0\xbc|\xd0\xb8\xd1\x89\xd0\xb5\xd0\xbc|\xd0\xb8\xd1\x89\xd1\x83 \\d-?\xd0\xba|\xd0\xb8\xd1\x89\xd1\x83 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xba|\xd0\xb8\xd1\x89\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd1\x80\xd1\x82\xd0\xb8\xd1\x80\xd1\x83|\xd0\xb8\xd1\x89\xd1\x83 \xd1\x82\xd1\x80\xd0\xb5\xd1\x85\xd0\xba)'	1122
'<!-- \\*\\*\\* Reference number \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(<[BI]>)?(.*?)</FONT>.*?<!-- \\*\\*\\* Motion title \\*\\*\\* -->.*?<A HREF="(.*?)" TARGET="_parent">\\s*<font face="arial,helvetica" size=2>(?:<[BI]>)?([^<]*?)</font></A>\\s*</TD>\\s*<!-- \\*\\*\\* Signatures -->.*?(?:<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d+) &nbsp;&nbsp;</font>\\s*)?</TD>\\s*<!-- \\*\\*\\* Motion date \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d\\d)\\.(\\d\\d)\\.(\\d\\d)</FONT>(?s)'	32
'\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .+$\\n?       # But any other line\n                  )*)\n        '	1580
'\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    season              # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<S>\\d{1,2})      # NG(S) capturing 1/2 digits for season no\n    [\\W_]?              # Optional non alphanum char\n    episode             # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'  \n    (?P<SN>.*?)         # Named Group (SN) non greedily capturing show name\n    s                   # Letter S representing season\n    (?P<S>\\d{1,2})      # Named Group (S) capturing 1/2 digits for season no\n    [\\W_]?              # Single Optional Non Alpha-Num char\n    e                   # Letter E representing Episode\n    (?P<E>\\d{1,2})      # Named Group (E) Capturing 1/2 digits for episode no\n    [\\W_]*?             # Non greedy optional Non Alpha-Num char\n    (?P<EN>.*)          # Named Group (EN) greedily trying to grab episode name'	817
'\n        # Include these so we can skip them:\n        (?P<COMMENT>        <!--.*?-->                          )|\n        (?P<CDATA>          <![CDATA[.*?]]>                     )|\n        (?P<PI>             <\\?.*?\\?>                           )|\n        (?P<DOCTYPE>        <!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>  )|\n        # These are the ones we actually care about:\n        (?P<EMPTY_ELT_TAG>  <\\s*[^>/\\?!\\s][^>]*/\\s*>            )|\n        (?P<START_TAG>      <\\s*[^>/\\?!\\s][^>]*>                )|\n        (?P<END_TAG>        <\\s*/[^>/\\?!\\s][^>]*>               )'	1248
'\n                 (?x)( # verbose identify URLs within text\n     (http|ftp|gopher) # make sure we find a resource type\n                   :// # ...needs to be followed by colon-slash-slash\n        (\\w+[:.]?){2,} # at least two domain groups, e.g. (gnosis.)(cx)\n                  (/?| # could be just the domain name (maybe w/ slash)\n            [^ \\n\\r"]+ # or stuff then space, newline, tab, quote\n                [\\w/]) # resource name ends in alphanumeric or slash\n     (?=[\\s\\.,>)\'"\\]]) # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'\n        \\s*    \n        ((?P<retval>                  # Capture the return type:\n            \\w+\\s*?(                  # Type name, is a \n            \\** |                     # pointer OR\n            &?  |                     # reference OR\n            (\\[\\s*[0-9]*\\s*\\])        # array.\n            )\n        )\\s*)?                        # Only one (potential) return value.\n        (?P<name>                     # Capture function name\n            playerc_\\w+               # Class name and member function name\n        )\\s*\n        (?P<params>\\(.*?\\))           # Parameters\n        \\s*;\n    '	1522
'     # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?           # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)           # ...a number (with at least one digit)\n        (?P<int>\\d*)          # consisting of a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?           # ...an infinity, or...\n    |\n        (?P<signal>s)?        # ...an (optionally signaling)\n        NaN                   # NaN\n        (?P<diag>\\d*)         # with (possibly empty) diagnostic information.\n    )\n#    \\s*\n    $\n'	12
'\n                (?xm)  # verbose identify URLs in text (and multiline)\n             (?=^.{11} # Mail header matcher\n     (?<!Message-ID:|  # rule out Message-ID\'s as best possible\n        In-Reply-To))  # ...and also In-Reply-To\n               (.*?)(  # must grab to email to allow prior lookbehind\n   ([A-Za-z0-9-]+\\.)?  # maybe an initial part: DAVID.mertz@gnosis.cx\n        [A-Za-z0-9-]+  # definitely some local user: MERTZ@gnosis.cx\n                    @  # ...needs an at sign in the middle\n         (\\w+\\.?){2,}  # at least two domain groups, e.g. (gnosis.)(cx)\n    (?=[\\s\\.,>)\'"\\]])  # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'\n\t\t\t\t\t\t\t\t#^diff[ ]--git\n\t\t\t\t\t\t\t\t\t[ ]a/(?P<a_path>.+?)[ ]b/(?P<b_path>.+?)\\n\n\t\t\t\t\t\t\t\t(?:^similarity[ ]index[ ](?P<similarity_index>\\d+)%\\n\n\t\t\t\t\t\t\t\t   ^rename[ ]from[ ](?P<rename_from>\\S+)\\n\n\t\t\t\t\t\t\t\t   ^rename[ ]to[ ](?P<rename_to>\\S+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^old[ ]mode[ ](?P<old_mode>\\d+)\\n\n\t\t\t\t\t\t\t\t   ^new[ ]mode[ ](?P<new_mode>\\d+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^new[ ]file[ ]mode[ ](?P<new_file_mode>.+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^deleted[ ]file[ ]mode[ ](?P<deleted_file_mode>.+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^index[ ](?P<a_blob_id>[0-9A-Fa-f]+)\n\t\t\t\t\t\t\t\t\t\\.\\.(?P<b_blob_id>[0-9A-Fa-f]+)[ ]?(?P<b_mode>.+)?(?:\\n|$))?\n\t\t\t\t\t\t\t'	599
'\n\t\t\t\t\t\t\t\t#^diff[ ]--git\n\t\t\t\t\t\t\t\t\t[ ]a/(?P<a_path>\\S+)[ ]b/(?P<b_path>\\S+)\\n\n\t\t\t\t\t\t\t\t(?:^similarity[ ]index[ ](?P<similarity_index>\\d+)%\\n\n\t\t\t\t\t\t\t\t   ^rename[ ]from[ ](?P<rename_from>\\S+)\\n\n\t\t\t\t\t\t\t\t   ^rename[ ]to[ ](?P<rename_to>\\S+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^old[ ]mode[ ](?P<old_mode>\\d+)\\n\n\t\t\t\t\t\t\t\t   ^new[ ]mode[ ](?P<new_mode>\\d+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^new[ ]file[ ]mode[ ](?P<new_file_mode>.+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^deleted[ ]file[ ]mode[ ](?P<deleted_file_mode>.+)(?:\\n|$))?\n\t\t\t\t\t\t\t\t(?:^index[ ](?P<a_blob_id>[0-9A-Fa-f]+)\n\t\t\t\t\t\t\t\t\t\\.\\.(?P<b_blob_id>[0-9A-Fa-f]+)[ ]?(?P<b_mode>.+)?(?:\\n|$))?\n\t\t\t\t\t\t\t'	599
'<!-- Ref -->\\s*<TD WIDTH=14>[^C]*?(Closed)?[^C]*?</TD>\\s*<TD ALIGN="CENTER" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">\\s*<B>(.*?)</B>\\s*</FONT>\\s*</TD>\\s*<!-- Motion Title -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT COLOR="#0000DD">\\s*<A HREF="(/weblink/html/motion.html/ref=.*?)" TARGET="_top">\\s*(.*?)</A>\\s*</FONT>\\s*</TD>\\s*<!-- Sponsor -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<A HREF="/weblink/html/member.html/mem=.*?" TARGET="_top" >\\s*<font face="arial,helvetica" size=2>.*?/.*?</A>\\s*</TD>\\s*<!-- Count of signatures -->\\s*<TD ALIGN="RIGHT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">(\\d+)</FONT>&nbsp;&nbsp;&nbsp;\\s*</TD>'	32
"\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "	1247
"\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "	1523
'\n    ^\n    \\s*                         # Leading whitespace\n    (?!.*::.*::)                # Only a single wildcard allowed\n    (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n    (?:                         # Repeat 6 times:\n        [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n    ){6}                        #\n    (?:                         # Either\n        [0-9a-f]{0,4}           #   Another group\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        [0-9a-f]{0,4}           #   Last group\n        (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n         |  (?<!:)              #\n         |  (?<=:) (?<!::) :    #\n         )                      # OR\n     |                          #   A v4 address with NO leading zeros \n        (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n        (?: \\.\n            (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n        ){3}\n    )\n    \\s*                         # Trailing whitespace\n    $\n'	1500
'\n        ^\n        \\s*                         # Leading whitespace\n        (?!.*::.*::)                # Only a single whildcard allowed\n        (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n        (?:                         # Repeat 6 times:\n            [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        ){6}                        #\n        (?:                         # Either\n            [0-9a-f]{0,4}           #   Another group\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n            [0-9a-f]{0,4}           #   Last group\n            (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n             |  (?<!:)              #\n             |  (?<=:) (?<!::) :    #\n             )                      # OR\n         |                          #   A v4 address with NO leading zeros \n            (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n            (?: \\.\n                (?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n            ){3}\n        )\n        \\s*                         # Trailing whitespace\n        $\n    '	1523
