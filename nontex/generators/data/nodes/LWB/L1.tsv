'\n{2,}'	55,82,89,113,147,181,200,302,323,355,422,552,606,849,866,878,992,1004,1012,1074,1075,1086,1158,1184,1223,1247,1322,1420,1495,1517,1580,1634
'^#define\\s{1,}(\\w{1,}_H)\\s{1,}<(.*)>'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1493,1511
u'^\\s*[#*=]{4,}\\n[a-z0-9 -]+\\n[#*=]{4,}\\s*'	283,332,339,356,436,518,538,670,689,747,787,832,975,1000,1247,1288,1495
'\\s{2,}'	109,113,127,147,181,182,305,407,682,1025,1322,1326,1505,1529
'^(From |[\\041-\\071\\073-\\176]{1,}:|[\\t ])'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(\\s+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	12,287,412,602,636,759,852,961,1125,1221,1509,1511
'(?:\\r\\n|\\r|\\n){2,}'	585,992,1104,1257,1349,1386,1415,1469,1536,1580
'(\\s+|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	308,322,467,505,534,636,743,1125,1216,1466
' {2,}'	162,210,251,253,305,619,1087,1267,1505
'-{2,}'	992,1104,1257,1386,1415,1469,1536,1580
'0{6,}\\d'	302,849,878,1004,1012,1086,1158,1495
' {2,}\n'	55,200,552,606,1223,1247,1420
'(\\s+|-*\\w{2,}-(?=\\w{2,}))'	322,467,505,534,743,1216,1466
'(\\s+|[^\\s\\w]*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	322,467,505,534,743,1216,1466
'.*\\.([a-zA-Z]{3,}$)'	147,181,254,438,594,790
'^[ ]{4,}(?P<value>.*)'	236,247,919,1007,1340,1395
'^<logentry.*?revision="([0-9]{4,})".*?<date>([0-9]{4}-[0-9]{2}-[0-9]{2})T.*?<msg>(.*?)</msg>.*?</logentry>$'	412,759,852,961,1221,1511
'^[-=*_^#]{3,}\\s*$'	356,436,538,1247,1288
'(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	147,162,171,181,1381
'[.]{2,}'	1263,1290,1580,1594
'(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	381,1054,1087,1580
'(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'	236,247,919,1007
'^[a-z0-9][a-z0-9_]{2,}$'	1269,1469,1498
'(\\d+)(\\s+\\d){3,}\\s+([TF])'	262,267,268
'\\n{3,}'	1267,1618
'\\n{2,}\\Z'	55,200
'^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'	354,379
'^(\\-[3-9]{1,}|\\-{3,}|\\-[1-9][0-9]+)$'	354,379
'<td style="text-align: right;">[0-9]{1,}</td>'	354,379
' (SENATOR|REPRESENTATIVE)\\([Ss]\\) ([^,]+(,[^,]+){0,})'	109,182
'(?P<fence>^~{3,})[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*(\\{\\.(?P<lang>[a-zA-Z0-9_-]*)\\})?[ ]*$'	236,1395
'(\\s+|(?<=\\s)(?::[a-z-]+:)?`\\S+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	251,1087
'_{2,}'	858
'\n{4,}'	1426
'^/{2,}'	1393
'={10,}'	1248
'^.{5,}'	826
'\\.{2,}'	817
'( {2,})'	1555
'[\n ]{2,}'	126
u'0{6,}[0-9]'	1158
'^#?\\d{2,}$'	847
'^(\\d{3,}).*'	1469
'(DN)[0-9]{4,}'	735
'.+@.+\\..{2,}'	190
':[0-9A-F]{10,}'	633
'^/r/([^/]{2,})'	200
'(http://\\S{3,})'	330
'^_{2,}.*[^_]+_?$'	640
'^\\d+(\\.\\d+){1,}$'	1580
'(?<![\\n\\*])\\*{2,}'	138
'^\\w{3,}\\.?\\s\\d{4}$'	1004
'(?m)(?:^[ \\t]*\\n){1,}'	1258
'^bytes=(\\d{1,})-(\\d*)'	737
'\\s*[^#]{3,}:\\s*(#.*)?'	407
'/gs/[a-z0-9\\.\\-_]{3,}'	1495
' at 0x[0-9a-f]{6,}(>+)$'	531
'\\s{2,}|[\t\n\r\x0c\x0b]'	381
'/gs/[a-z0-9\\.\\-_]{3,}$'	1495
'(?:(?:\\w|-)+\\.){2,}\\w+'	897
'(tel:(//)?)?\\+?[0-9]{4,}'	1465
'Merge: +([0-9a-f]+ *){2,}'	1540
'^[a-zA-Z][a-zA-Z\\d_]{2,}$'	820
'\\s*[:_\t]+\\s*|\\s{2,}|\n'	1190
'[1-9A-HJ-NP-Za-km-z]{6,}\\Z'	677
'[1-9A-HJ-NP-Za-km-z]{26,}\\Z'	677
'^[a-z0-9][a-z0-9\\.\\-]{2,}$'	826
'\\r\\n(?P<rv>[0-9]{1,})\\r\\n'	763
u'\\w{5,}|\\w{2,}(?:[:-]\\w+)+'	782
'^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'	1580
'\\((.*?)\\)\\s{1,}"(.*?)"\\s"(.*?)"$'	1629
'^[a-z0-9\\-._]*[a-z0-9]\\.[a-z]{2,}$'	18
'\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'	1190
'^([0-9a-z_]{2,}\\.)*([0-9a-z_]{2,})?$'	557
'^(([0-9a-z_]{2,}\\.)|\\.)*([0-9a-z_]{2,})?$'	557
'^[a-zA-Z0-9\\./_-]{1,}@[a-zA-Z0-9\\./-]{4,}$'	826
'^\\-{4,}\n(?P<t>.*?)\n\\-{4,}(:(?P<c>\\w+))?\n'	1247
'\\b([0-9a-fA-F]{1,4}::?){3,}[0-9a-fA-F]{1,4}\\b'	727
'\\d{1,} (minutes|minute|hours|hour|day|days) ago'	1549
'^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'	1580
'^(?P<neg>-?)(?P<Y>\\d{4,})(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'^(?P<Alias>\\s\\s\\-.*?)\\s{2,}(?P<Desc>.*?)(?=^\\s\\s\\-)'	873
'^[a-zA-Z0-9\\.\\_\\%\\-\\+]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'	732
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)-(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'	1076
'(?P<fence>^(?:~{3,}|`{3,}))[ ]*(\\{?\\.?(?P<lang>[a-zA-Z0-9_+-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?<=\\n)(?P=fence)[ ]*$'	1395
'^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)-(?P<D>\\d\\d)T(?P<h>\\d\\d):(?P<m>\\d\\d):(?P<s>\\d*(\\.\\d+)?)(?P<tz>(Z|([-+]\\d\\d:\\d\\d))?)$'	1076
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	557
'\n                 (?x)( # verbose identify URLs within text\n     (http|ftp|gopher) # make sure we find a resource type\n                   :// # ...needs to be followed by colon-slash-slash\n        (\\w+[:.]?){2,} # at least two domain groups, e.g. (gnosis.)(cx)\n                  (/?| # could be just the domain name (maybe w/ slash)\n            [^ \\n\\r"]+ # or stuff then space, newline, tab, quote\n                [\\w/]) # resource name ends in alphanumeric or slash\n     (?=[\\s\\.,>)\'"\\]]) # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'\n                (?xm)  # verbose identify URLs in text (and multiline)\n             (?=^.{11} # Mail header matcher\n     (?<!Message-ID:|  # rule out Message-ID\'s as best possible\n        In-Reply-To))  # ...and also In-Reply-To\n               (.*?)(  # must grab to email to allow prior lookbehind\n   ([A-Za-z0-9-]+\\.)?  # maybe an initial part: DAVID.mertz@gnosis.cx\n        [A-Za-z0-9-]+  # definitely some local user: MERTZ@gnosis.cx\n                    @  # ...needs an at sign in the middle\n         (\\w+\\.?){2,}  # at least two domain groups, e.g. (gnosis.)(cx)\n    (?=[\\s\\.,>)\'"\\]])  # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
"\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "	1247
