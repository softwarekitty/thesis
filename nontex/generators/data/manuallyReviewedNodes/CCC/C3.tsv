'[^A-Za-z0-9.]+'	12,287,487,498,602,662,1033,1054,1087,1257,1263,1290,1415,1469,1509,1536,1580,1594,1634
'\nmd5_data = {\n([^}]+)}'	55,77,121,147,155,162,181,198,200,201,217,252,259,296,302,331,378,390,409,462,498,524,538,548,599,628,690,728,735,752,774,819,842,849,865,868,878,903,908,914,932,933,958,991,992,1007,1012,1015,1032,1086,1087,1115,1119,1123,1158,1194,1218,1268,1282,1288,1308,1330,1341,1416,1426,1434,1518,1638,1644
'([\\\\"]|[^\\ -~])'	55,113,147,181,233,247,251,287,288,302,323,340,355,383,422,436,507,510,580,594,602,622,627,729,752,759,780,849,852,866,878,919,927,935,961,989,1003,1004,1007,1012,1015,1025,1032,1033,1054,1078,1086,1087,1122,1158,1184,1194,1199,1221,1247,1269,1328,1469,1495,1498,1501,1509,1511,1517,1580,1634
'[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'	271,279,280,282,318,346,367,406,442,495,569,586,590,601,652,667,751,762,791,799,848,855,876,937,952,1018,1040,1041,1098,1103,1105,1106,1116,1131,1167,1206,1236,1237,1306,1333,1334,1356,1360,1370,1390,1400,1440,1467,1514,1556,1562,1568,1581,1599,1610,1622,1624,1626,1627,1643
'<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'	271,279,280,282,318,346,367,406,442,495,569,586,590,601,652,667,751,762,791,799,848,855,876,937,952,1018,1041,1098,1103,1105,1106,1116,1131,1167,1206,1236,1237,1306,1333,1334,1356,1360,1370,1390,1440,1467,1514,1556,1562,1581,1599,1610,1622,1624,1626,1627,1643
'[^:]*:'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?'	147,181,220,225,278,287,296,323,355,432,436,510,559,602,774,814,819,925,927,936,995,1003,1068,1104,1150,1211,1247,1263,1269,1301,1328,1366,1439,1469,1495,1498,1509,1536,1555,1580
'[^\\w\\s-]'	13,21,82,89,190,236,247,302,323,355,422,552,606,849,866,878,919,1004,1007,1012,1021,1074,1075,1086,1158,1184,1223,1285,1395,1420,1468,1495,1517,1580,1614,1634
'(<[^<>]*)/>'	22,38,55,60,64,65,72,94,126,225,273,287,340,472,510,527,602,683,691,707,774,790,881,928,1068,1122,1150,1169,1199,1269,1300,1469,1498,1509,1557
'<!\\s+([^<>]*)>'	22,38,55,60,64,65,72,94,126,225,273,287,340,472,510,527,602,683,691,707,774,790,881,928,1068,1122,1150,1169,1199,1269,1300,1469,1498,1509,1557
'^(?:\\s*(?:,\\s*)?([^ \\t\\r\\n=]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\\\\\"]|\\\\.)*?(?=\\")|(?<!\\")[^ \\t\\r\\n,]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'^(?:\\s*(?:,\\s*)?([^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+)\\s*=\\s*\\"?((?<=\\")(?:[^\\0-\\x08\\x0A-\\x1f\\x7f-\\xff\\\\\\"]|\\\\[\\0-\\x7f])*?(?=\\")|(?<!\\")[^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\"/[\\]?={} \\t]+(?!\\"))\\"?)(.*)$'	220,323,355,436,510,559,814,925,927,936,995,1003,1068,1104,1150,1211,1269,1301,1328,1439,1469,1495,1498,1536,1555
'[^a-zA-Z0-9]'	302,322,323,341,355,422,467,505,534,757,826,866,913,1004,1087,1158,1248,1328,1466,1495,1517
'(<a [^>]*?)target=[^\\s>]+'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'\\sCONSTRAINT `[^`]*` FOREIGN KEY \\(`([^`]*)`\\) REFERENCES `([^`]*)` \\(`([^`]*)`\\)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'<[^>]*?>'	82,89,302,323,355,403,422,582,849,866,878,1004,1074,1075,1184,1453,1495,1517,1634
'(<!--.*?-->|<[^>]*>)'	96,113,147,181,251,252,487,639,1087,1104,1257,1349,1386,1415,1469,1495,1536,1555,1580
'\\$(\\w+|\\{[^}]*\\})'	12,251,287,381,412,422,602,662,759,800,852,961,1033,1054,1087,1221,1509,1511,1517
'url="([^"]+)"'	251,422,662,800,1033,1087,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'%\\(([^)]*)\\)s'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"	12,101,251,287,381,412,518,602,759,787,852,961,1054,1087,1221,1509,1511,1580
'[^"\\\\]*(?:\\\\.[^"\\\\]*)*"'	12,101,251,287,381,412,518,602,759,787,852,961,1054,1087,1221,1509,1511,1580
'(\\\'[^\\\']*\\\'|"[^"]*")\\s*'	12,43,287,330,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'\n        \\$(?:\n          (?P<escaped>\\$)              |   # Two $ signs\n          (?P<named>[_a-z][_a-z0-9]*)  |   # $name format\n          {(?P<braced>[^}]*)}              # ${name} format\n        )\n        '	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
u'^[^(]*'	283,332,339,356,436,518,538,670,689,747,787,832,975,1000,1247,1288,1495
'&([^;]+);'	251,252,391,487,639,992,1087,1104,1169,1257,1386,1415,1469,1495,1536,1555,1580
'#egg=([^&]*)'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'((^|[^%])(%%)*%[sy])'	302,323,355,422,425,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'<title>[^<]*Revision \\d+:'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'&([a-zA-Z][-.a-zA-Z0-9]*)[^a-zA-Z0-9]'	12,43,287,381,412,510,602,759,774,852,961,1054,1087,1221,1509,1511,1580
'href=(?:"([^"]*)"|\'([^\']*)\'|([^>\\s\\n]*))'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'"([^"]+)"'	12,287,381,412,602,759,812,852,961,1054,1087,1221,1509,1511,1555,1580
'[^a-zA-Z0-9_]'	317,428,466,534,768,825,917,1007,1047,1050,1060,1268,1277,1466,1580,1602
'^-r\\s*([^ ])?'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1594,1634
'``([^`\\s]+?)``'	95,131,274,302,334,573,849,878,951,1004,1012,1086,1158,1176,1495,1525
'-isysroot [^ \t]*'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'(?:W/)?"((?:\\\\.|[^"])*)"'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'https?://[^/]*(/.*reset/\\S*)'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'	12,287,412,413,510,602,759,774,852,961,1054,1076,1087,1221,1509,1511
'^([^=]*)=(.*)$'	12,287,412,560,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'realm="([^"]*)"'	147,181,190,220,325,454,582,622,666,707,915,927,1003,1247,1597
'^\\s*([^=\\s;,]+)'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
"^'([^']+)'(\\|.*$)"	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1580,1634
'^\\s*=\\s*([^\\s;,]*)'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'<(/)?([^ ]+?)(?: (/)| .*?)?>'	82,89,302,323,355,422,866,1004,1021,1074,1075,1184,1468,1495,1517
'&#(?:[0-9]+|[xX][0-9a-fA-F]+)[^0-9a-fA-F]'	12,43,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^\\s*=\\s*\\"([^\\"\\\\]*(?:\\\\.[^\\"\\\\]*)*)\\"'	12,225,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'(?P<name>[^-]+)( -(?P<ver>[^-]+) (-py(?P<pyver>[^-]+) (-(?P<plat>.+))? )? )?'	487,498,602,662,1033,1087,1257,1263,1415,1469,1509,1536,1580,1594,1634
'<([^>]+)>'	257,283,992,1104,1248,1257,1319,1386,1415,1448,1469,1488,1536,1580
'\\!([^=])'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'[^0-9A-F]'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'^([^/:]+):'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'^(.*)#([^#]*)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'&#([0-9]+)[^0-9]'	12,287,412,413,602,759,852,961,1054,1076,1087,1221,1509,1511
'^(.*)\\?([^?]*)$'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511,1580
'\\{@([^\\}]*)=([^\\}]*)}'	9,55,147,181,236,247,552,606,919,1007,1223,1267,1395,1420
'<([a-zA-Z][-.a-zA-Z0-9]*)/([^/]*)/'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'	1040,1103,1105,1106,1131,1237,1306,1356,1400,1556,1610,1622,1624,1627
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	12,287,412,510,602,759,774,852,961,1054,1087,1221,1509,1511
'[^0-9]'	21,312,492,525,531,627,826,832,846,971,1364,1386,1546
'^([^/:]+)://'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511
'%\\(([^)]+)\\)s'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'\\+OK.*(<[^>]+>)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'%\\(([^)]*)\\)s|.'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'"(?:[^"\\\\]|\\\\.)*"'	12,287,356,412,602,759,852,961,1054,1087,1221,1509,1511
'[^\t\r\n -~\xa0-\xff]'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
"'(?:[^'\\\\]|\\\\.)*'"	12,287,356,412,602,759,852,961,1054,1087,1221,1509,1511
'\\[(?P<header>[^]]+)\\]'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'([-\\w]+)\\s*:\\s*([^:;]*)'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'.*FLAGS \\((?P<flags>[^\\)]*)\\)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'url\\s*\\(\\s*[^\\s)]+?\\s*\\)\\s*'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'[ \t]*([^ \t]+)[ \t]+realm="([^"]*)"'	12,287,412,602,759,852,961,1054,1087,1221,1495,1509,1511
'&#(?P<char>[0-9]+[^0-9]|x[0-9a-fA-F]+[^0-9a-fA-F])'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<delim>[^\\w\n"\'])(?P<space> ?)(?P<quote>["\']).*?(?P=quote)(?P=delim)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@]*))?'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'.*"([^"]+)"$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'[^ !-<>-~\\t]'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'[^-a-zA-Z0-9!*+/ ]'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^([^ \t]+)[ \t]+(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'((^|;)\\s*charset=)([^;]*)'	22,38,60,64,72,94,790,881,928,1068,1150,1169
"[^\\w!#$%&'*+,.:;<=>?^`|~-]"	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^(?P<group>[^ \t]+)[ \t]+(.*)$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'\\[(?P<type>[A-Z-]+)( (?P<data>[^\\]]*))?\\]'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'^content-type:.*multipart/.*boundary="?([^;"\n]*)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'(::|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	12,147,245,287,305,602,1248,1317,1501,1505,1509,1638
'(\\s+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	12,287,412,602,636,759,852,961,1125,1221,1509,1511
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<atom>.*?)         # non-greedy up to the next ?= is the atom\n  \\?=                   # literal ?=\n  '	12,287,412,602,759,852,961,1054,1087,1221,1509,1511
'[^A-Za-z0-9_]'	308,322,389,467,498,505,534,619,743,1216,1466
'([\\\\"/]|[^\\ -~])'	41,82,89,101,200,560,1004,1074,1075,1300,1495
'^([^\\[\\]]+)(\\[.*\\])?$'	0,75,119,768,785,825,1007,1015,1032,1054,1301
'encoding\\s*=\\s*[\'"]([^"\']+)["\']'	12,73,287,412,602,759,852,961,1221,1509,1511
'^const\\s+([a-zA-Z0-9_]+)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'	100,190,200,619,658,950,1247,1399,1403,1485,1570
'^macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'^python\\s+macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*=\\s*([^;]*);$'	306,322,464,467,505,534,883,1007,1300,1404,1466
'[^A-Z0-9_]'	294,308,322,389,467,505,534,743,1216,1466
'[^a-zA-Z0-9]+'	803,849,878,1012,1086,1158,1170,1495,1580,1634
'\\[([^]]+)\\]'	306,322,464,467,505,534,782,1300,1404,1466
'^([^:]*):(.*)$'	12,287,412,602,759,852,961,1221,1509,1511
'^\\s*[^#\\s].*'	220,927,959,1122,1263,1276,1290,1469,1580,1594
'(^|[^\\\\])\\.'	12,287,412,602,759,852,961,1221,1509,1511
'\\$Port([^=]|$)'	12,412,759,774,852,961,1087,1221,1511,1580
'^//([^/?]*)(.*)$'	12,287,510,602,774,1054,1087,1495,1509,1580
"'(\\\\.[^\\\\]*|[^\\\\])'"	12,412,759,852,961,1054,1087,1221,1511,1580
'/\\*([^*]+|\\*+[^/])*(\\*+/)?'	12,412,759,852,961,1054,1087,1221,1511,1580
'url\\s*\\(\\s*[^#\\s][^)]+?\\)'	220,927,959,1122,1263,1276,1290,1469,1580,1594
'name="([^"]+)" value="([^"]+)"'	302,849,878,884,1004,1012,1086,1158,1495,1634
'[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'	308,322,389,467,505,534,743,1216,1466,1587
'<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'	12,412,759,852,961,1054,1087,1221,1511,1580
'"[^"]*"'	322,416,467,505,534,1199,1300,1404,1466
'<[^>]+>'	64,429,539,1004,1074,1075,1087,1495,1555
'^[^-_.]+'	322,416,467,505,534,1199,1300,1404,1466
'/\\.(?![^.]*$)/'	45,59,151,164,238,371,1345,1507,1516
'[\\t ]+(?![^{]*})'	308,322,389,467,505,534,743,1216,1466
'<([^<\\s]+?)\\s*/>'	147,181,190,220,325,582,622,915,1597
'\\bexpires=([^;]+)'	337,801,1104,1112,1257,1386,1415,1536,1580
'(\\s)@\\s*([^\\s]+)'	308,322,389,467,505,534,743,1216,1466
'\\s*([^: ]*)\\s*:(.*)'	306,322,464,467,505,534,1300,1404,1466
'#include +"[^/]+\\.h"'	322,416,467,505,534,1199,1300,1404,1466
'(function\\b[^(]*)\\((.*)\\)\\{$'	306,322,464,467,505,534,1007,1404,1466
'<title>([^- ]+ - )?Revision \\d+:'	662,1033,1087,1257,1415,1536,1580,1594,1634
'(\\\\*)(\\(\\?P<[^>]*>|\\((?!\\?))'	317,559,921,1047,1095,1234,1277,1580,1592
'\\$\\([^\\$]*(\\$[^\\)][^\\$]*)*\\$\\)'	308,322,389,467,505,534,743,1216,1466
'^\\s*#\\s*include\\s*([<"])([^>"]*)[>"].*$'	322,416,467,505,534,1199,1300,1404,1466
'^\\s*(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'^\\* ([^:]*):(:|[ \t]*([^\t,\n.]+)([^ \t\n]*))[ \t\n]*'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#?\\s*end\\s+(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'<a href="([^"#]+)">([^<]+)</a>\n\\s+\\(<a (?:title="MD5 hash"\n\\s+)href="[^?]+\\?:action=show_md5&amp;digest=([0-9a-f]{32})">md5</a>\\)'	662,1033,1087,1257,1415,1536,1580,1594,1634
'{([^}]*)}(.*)'	220,927,1122,1263,1290,1469,1580,1594
'(^[^\\.]+)\\.'	302,849,878,1004,1012,1086,1158,1495
'(a(?!\\s[^a]))'	12,412,759,852,961,1087,1221,1511
'(a(?=\\s[^a]))'	12,412,759,852,961,1087,1221,1511
'[\\\\"]|[^ -~]'	306,322,467,505,534,896,1007,1466
'^([^:]*): *(.*)'	12,412,759,852,961,1087,1221,1511
'[^A-Za-z0-9_.-]'	992,1104,1257,1386,1415,1469,1536,1580
'(a(?=\\s[^a]*))'	12,412,759,852,961,1087,1221,1511
'^([^:]*):\\t(.*)'	12,412,759,852,961,1087,1221,1511
'</?xsl:([^>]*)/?>?'	113,147,181,251,498,1087,1267,1555
'<([^<>\\s]+?)\\s*/>'	220,454,666,707,927,988,1003,1247
'^(\\|)?([^()]+)\\1$'	12,412,759,852,961,1087,1221,1511
'^(\\|)?([^()]+)\\1?$'	12,412,759,852,961,1087,1221,1511
'[^\\x00-\\x21\\xff]{1,250}$'	992,1104,1257,1386,1415,1469,1536,1580
'REG_\\w+\\s+([^\\r]+)\\r\\n'	306,322,467,505,534,896,1007,1466
'<div[^>]*navigat.*?</div.*?>'	12,412,531,759,852,961,1221,1511
'^([^.]*)\\.([^:]*):[\\t ]+(.*)'	12,412,759,852,961,1087,1221,1511
'&#(x?[0-9A-Fa-f]+)[^0-9A-Fa-f]'	147,181,190,325,582,622,915,1597
'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'	220,927,1122,1263,1290,1469,1580,1594
'([^\\s;,]+)(?:[^,]*?;\\s*q=(\\d*(?:\\.\\d+)?))?'	992,1104,1257,1386,1415,1469,1536,1580
'<a href="([^"]*)"[^>]* id="lookup_id_inquisition"'	302,849,878,1004,1012,1086,1158,1495
'^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'	849,878,1012,1086,1158,1495,1580,1634
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:;+*%?!&$\\(\\)_#=~]*))?'	43,330,412,759,852,961,1221,1511
'(\\\\*)(?:(?::([a-zA-Z_][a-zA-Z_0-9]*)?()(?:#(.*?)#)?)|(?:<([a-zA-Z_][a-zA-Z_0-9]*)?(?::([a-zA-Z_]*)(?::((?:\\\\.|[^\\\\>]+)+)?)?)?>))'	559,921,1047,1095,1234,1277,1580,1592
'(?smx)\n    (<\\?.*?\\?>)?\\s*\n    <!DOCTYPE\\s+(\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     "[^"]*")\n     [^>]*>\n'	113,147,181,251,498,1087,1267,1555
'\n    ((?P<name>\\w+)\\s*=\\s*)?\n    (?P<value>\n        True|False|\n        \\d+.\\d+|\n        \\d+.|\n        \\d+|\n        \\w+|\n        [urUR]?(?P<stringval>"[^"]*?"|\'[^\']*\')\n    )\\s*,\n'	992,1104,1257,1386,1415,1469,1536,1580
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  '	43,412,759,852,961,1221,1511,1580
'[^\\w]+'	201,435,552,606,923,1223,1420
u'<[^>]*>'	55,558,795,813,1150,1302,1326
'\\s([^a])'	12,412,759,852,1087,1221,1511
'[^a-z0-9]+'	147,162,181,251,619,1087,1267
'<\\S[^>]*>'	220,454,666,707,927,1003,1247
'\\s([^a]*)'	12,412,759,852,1087,1221,1511
'[^]~%\\\\{}]+'	12,412,759,852,961,1221,1511
'\\(([^)]+)\\)'	82,89,806,1004,1074,1075,1495
'^([^/]+)(/.*)$'	225,287,510,602,774,1495,1509
'[^\\\\][^\\\\]*'	12,412,759,852,961,1221,1511
'[\\\\]end{([^}]*)}'	12,412,759,852,961,1221,1511
'[\\\\]begin{([^}]*)}'	12,412,759,852,961,1221,1511
"^([^=]+)=\\'(.*)\\'$"	322,467,505,534,712,1216,1466
'\\\\raisebox\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'^([^@]*@)?([^:]*)(:.*)?'	147,181,278,296,432,819,1366
'\\\\hackscore\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'\\bNOLINT\\b(\\([^)]*\\))?'	322,416,467,505,534,1404,1466
'[ \n]*{(([^{}}]|{[^}]*})*)}'	12,412,759,852,961,1221,1511
'\\s*[-\\w]+\\s*:\\s*[^:;]*;?'	220,454,666,707,927,1003,1247
'([\\d.]+)[^(]*(?:\\((.+)\\))?'	12,412,759,852,961,1221,1511
'&#(x?[0-9a-fA-F]+)[^0-9a-fA-F]'	55,225,287,510,602,774,1509
'^(?P<host>[^:]+):(?P<port>[0-9]+)$'	100,190,200,950,1403,1485,1570
'(\\ ?\\ ?\\ ?)\\[\\^([^\\]]*)\\]:\\s*(.*)'	147,181,236,247,919,1007,1395
'(?:\x1b\\[([0-9?;]*)([a-zA-Z])|([^\x1b]+))'	322,467,505,534,712,1216,1466
'.+\\s+"([^\\s]+)\\s+([^\\s]+)\\s+HTTP/\\d+\\.\\d+"\\s+200\\s+.*'	50,728,998,1416,1429,1459,1531
'(\\s+|[^\\s\\w]*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	322,467,505,534,743,1216,1466
'([^\'"<>]|"[^"]*"(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'	220,454,666,707,927,1003,1247
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+?)\n    (?:\\.(?P<version>[^._]+))?\n    (?:_(?P<suffix>[^._]+))?\n    \\.dylib$\n)\n'	12,287,602,1054,1087,1509,1580
'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'	12,287,602,1054,1087,1509,1580
'^\n        (?P<prefix>(?:[^\\r\\n|\\n|\\r])*?)\n        [\\ \\t]*Local\\ Variables:[\\ \\t]*\n        (?P<suffix>.*?)(?:\\r\\n|\\n|\\r)\n        (?P<content>.*?\\1End:)\n        '	305,552,606,1223,1247,1420,1505
'[^.]*'	225,287,510,602,774,1509
'--[^>]*>'	454,666,707,927,1003,1247
'\\.?[^.]*'	225,287,510,602,774,1509
'[^=]+=(.+)'	322,467,505,534,1216,1466
'\\([^)]*\\)'	503,624,656,906,1404,1486
'([^:]+):(.*)'	322,467,505,534,1216,1466
'[^-A-Za-z0-9_.]'	82,89,1004,1074,1075,1495
'^//([^/]*)(.*)$'	412,759,852,961,1221,1511
'[^a-zA-Z0-9._-]'	82,89,1004,1074,1075,1495
'import\\s+([^;]+)'	322,467,505,534,1216,1466
'module\\s+([^;]+)'	322,467,505,534,1216,1466
'<url>([^<]+)</url>'	412,759,852,961,1221,1511
'[^A-Za-z0-9_.!~*()-]'	412,759,852,961,1221,1511
'<root>([^<]*)</root>'	412,759,852,961,1221,1511
'<body[^>]*>(.*?)</body>'	82,89,1004,1074,1075,1495
'<\\/([\\w\\:\\-]+)[^>]*>'	305,407,1025,1322,1326,1505
'^(https?)://([^/]+)(/.*)$'	82,89,1004,1074,1075,1495
"((?:\\'[^\\'\\n\\r]*\\')+)"	82,89,1004,1074,1075,1495
'<title>\\([^<]*\\)</title>'	412,759,852,961,1221,1511
'^s3:\\/\\/([^\\/]*)\\/(.*)$'	546,830,1028,1039,1223,1420
'  File "[^"]+", line \\d+\\n$'	113,251,498,1087,1267,1555
'^#import[\\s\t]*([^\\s^\t]*)[\\s\t]*$'	546,830,1028,1039,1223,1420
'<h2>.+?Revision ([0-9]*): ([^<]*)</h2>'	412,759,852,961,1221,1511
'<li><a href="([^"]*)">([^"]*)</a></li>'	412,759,852,961,1221,1511
"[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"	225,287,510,602,774,1509
'^(["\\\'])((?:(?!\\1)[^\\\\]|\\\\.)*)\\1'	305,407,1025,1322,1326,1505
'^\\s*(<=|>=|<|>|!=|==)\\s*([^\\s,]+)\\s*$'	12,287,602,1054,1087,1509
'(?P<q>[\\\'"])(.*?)(?<![^\\\\][\\\\])(?P=q)'	306,322,534,896,1007,1466
'(.*?[^\\s\\]\\}\\)]+.*?)([\\]\\}\\)],?)\\s*$'	306,322,534,896,1007,1466
'<span class="date below-more" title="([^"]+)"'	412,759,852,961,1221,1511
',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'	82,89,1004,1074,1075,1495
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'([sS][eE][tT]\\s*\\()\\s*([^\\s]+)\\s+"([^"]+)"\\)'	322,467,505,534,1216,1466
'([a-zA-Z][a-zA-Z_-]*)\\s*(?:=(?:"([^"]*)"|([^ \\t",;]*)))?'	82,89,1004,1074,1075,1495
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+\\s+const(\\s?&|&\\s?)[\\w]+'	322,416,467,505,534,1466
'<a class="ot-profile-link-2" href="/u/[^/]+/">([^<]+)</a></span>'	412,759,852,961,1221,1511
'([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(?:\\s*\\(\\s*([^)\\s]+)\\s*\\))?$'	12,287,602,1054,1087,1509
'([\\w.+]+)\\s*\\(#(\\d+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	412,759,852,961,1221,1511
'<a class="ot-revision-link" href="/p/[^/]+/source/detail\\?r=[0-9]+">([^<]+)</a>'	412,759,852,961,1221,1511
'("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'	82,89,1004,1074,1075,1495
'\\([^()]*\\bconst\\s+(?:typename\\s+)?(?:struct\\s+)?(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'<structure name="([^"]+)" noffset="([^"]+)" install="([^"]*)" ioffset="([^"]+)" voffset="([^"]+)"'	412,759,852,961,1221,1511
'<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*\\s*(\\/?)>$'	305,407,1025,1322,1326,1505
'<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,407,1025,1322,1326,1505
'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '	12,287,602,1054,1087,1509
'[^\\w]'	136,137,1408,1495,1571
'[^a-z]'	326,1248,1433,1469,1488
'[^\\)]+'	322,467,505,534,1466
'=[^,)]+,'	356,436,538,1247,1288
'(<[^>]+>)'	557,558,1223,1326,1420
'([^\\\\] )'	422,602,747,1517,1580
'(?![^%])%s'	323,355,866,1004,1495
'=[^,)]+\\)$'	356,436,538,1247,1288
'[^A-Za-z0-9]'	1116,1451,1471,1480,1580
'<([^\\s\\w/])'	322,467,505,534,1466
'[^a-zA-Z0-9_-]'	251,1087,1121,1320,1355
'\\[([^\\]]*)\\]'	143,188,213,1094,1583
'([^*]|\\*(?!/))+'	322,467,505,534,1466
'^(\\s*<[^>]+>\\s*)'	143,188,213,1094,1583
'["&<>]|[^\\x00-\\x7f]'	433,927,1003,1202,1350
'([^"\\\\]|\\\\(.|$))+'	322,467,505,534,1466
"([^'\\\\]|\\\\(.|$))+"	322,467,505,534,1466
'([a-z]*) ([^ \\r\\n]*)'	441,628,1054,1204,1580
'^%[%!\\w]([^:]*)[ \\t]*$'	441,628,1054,1204,1580
'^lib([^/]+)\\.(a|dylib)$'	467,505,534,1007,1466
'(\\s*<[^>]+>[\\s\\n\\r]*)$'	143,188,213,1094,1583
'^%%([^:]*):[ \\t]*(.*)[ \\t]*$'	441,628,1054,1204,1580
'([^*{}\\s]@|[^*{}@]|\\*(?!/))+'	322,467,505,534,1466
'([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'	322,467,505,534,1466
'(\\s*)[^\\s]+@[^(\\s]+(\\s*)\\(.+\\)'	322,467,505,534,1466
'(\\\\\\\\)|(\\$\\$)|\\$\\{([^}]+)\\}'	322,467,505,534,1466
'^([A-Za-z][^:]*):[ \\t]*(.*)[ \\t]*$'	441,628,1054,1204,1580
'(.+) release ([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'	236,247,919,1007,1395
'class (\\w[^\\s:]*)(: public (\\w[^\\s{]*))?\\s*{'	467,505,534,1404,1466
'([^0-9]+)(?: release )?([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
u'^\\s*blocktrans(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\\s+|$)'	1012,1086,1158,1495,1580
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	12,287,602,1054,1509
'\\s*((?<=[\\\'"\\s])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?'	873,927,1469,1580,1592
u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'	1012,1086,1158,1495,1580
'^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\'[^\']*\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'\\s*#define[ \t]+[^_]*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+[^_]*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]'	441,628,1054,1204,1580
'[^!-~]'	642,776,971,1203
'([^/]+)'	433,927,1003,1202
'<[^<>]*>'	851,1269,1561,1576
'^/([^/])/'	460,1025,1322,1505
'^[^(\\[]*'	356,538,1247,1288
'[^ -~\\n]'	642,776,971,1203
'\\[[^]]*\\]'	190,624,729,1486
'^   ([^ ]+)'	614,947,996,1491
'^([^/])\\:/'	460,1025,1322,1505
'\\([^()]*\\)'	851,1269,1561,1576
'[^\\w\\.\\-]'	122,1015,1032,1205
'(\\x1b[^m]+m)'	422,747,1517,1580
'\\.(?![^.]*$)'	191,532,843,1132
'%[^\\r\\n\\v]*'	642,776,971,1203
'\\{([^{]*?)\\}'	1263,1290,1580,1594
'(\\d+) ([^=]+)='	1263,1290,1580,1594
'\\{([^\\}]*)\\}'	143,188,213,1583
'\\s*#![^\\r\\n]*'	1263,1290,1580,1594
"[^']*'([^']*)'.*"	1004,1074,1075,1495
'^https://([^/]+)'	1025,1322,1326,1505
'[^\\}\\{]+\\{\\}'	568,807,1144,1247
'^[ \\t]*[^# \\t]'	433,927,1003,1202
'(?<=\\n)\\s*#[^#]'	433,927,1003,1202
'[^A-Z^a-z^0-9^:]+'	305,1025,1138,1505
'<p[^/>]*>\\s*</p>'	422,747,1517,1580
'url\\s*\\(([^)]+)'	113,147,181,1258
'((^|[^%])(%%)*%s)'	642,776,971,1203
'^([^ ]+) \\((.+)\\)'	614,947,996,1491
'[^A-Z^a-z^0-9^\\/]+'	305,1025,1138,1505
'^gemsets for ([^ ]+)'	614,947,996,1491
'([<>]|&(?![^\\s]+;))'	60,64,881,928
'<a href=[^>]*>([^<]+)<'	1263,1290,1580,1594
'\\sSONAME\\s+([^\\s]+)'	287,602,1509,1580
"__version__ = '([^']+)'"	286,807,888,1340
'[()]|\\s=[^=]|[^=!<>]=\\s'	304,662,842,1322
"(nextval\\(')([^']+)('.*$)"	113,1415,1469,1580
"goog.require\\('([^']*)'\\)"	343,350,1308,1403
'^(\\s*@charset [^;]+;\\s*)+'	568,807,1144,1247
'\\d+ hdrcharset=([^\\n]+)\\n'	1263,1290,1580,1594
'^https?://github.com/[^/]+/?$'	1025,1322,1326,1505
'(\\[.{16,16}[^,]*?),.*?\\]\\)'	356,538,1247,1288
'^(.*)(@charset \\"[^\\"]*\\";)'	568,807,1144,1247
'^\\S+?:/+(?:[^\\s/]*@)?(\\S+)$'	119,1007,1015,1032
'\\[.*\\]\\sSONAME\\s+([^\\s]+)'	287,602,1509,1580
'^https?://github.com/[^/]+/[^/]+/?$'	1025,1322,1326,1505
'/{0,2}[^]\\0\\t\\r\\v\\n ()<>{}/%[]+'	642,776,971,1203
'^(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'	619,658,1247,1399
'(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'	568,807,1144,1247
'<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'	1263,1290,1580,1594
u'%[^0-9A-Fa-f]|%[0-9A-Fa-f][^0-9A-Fa-f]'	927,1292,1399,1469
u"[^ \r\na-zA-Z0-9\\-'()+,./:=?;!*#@$_%]"	1263,1290,1580,1594
'([^\\w\\s]*)\\s*(\t|  )\\s*([^\\w\\s]*)'	304,662,842,1322
u'extra\\s*==\\s*("([^"]+)"|\'([^\']+)\')'	1263,1290,1580,1594
'^[= ]([*> ]) ([^- ]+)-([^ ]+) \\[ (.*) \\]'	614,947,996,1491
'^https?://github.com/[^/]+/[^/]+/tree/[^/]+/?$'	1025,1322,1326,1505
'.*[\\\\/]([^\\\\/]+)[\\\\/][^\\\\/]+[\\\\/]scons[\\\\/]?$'	592,896,1301,1403
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?$\n'	1263,1290,1580,1594
'^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)( *(?P<argument> .+))?'	700,1120,1269,1498
'(?P<prefix>[|+ ]*)(?P<samples>\\d+), (?P<symbol>[^,]+), (?P<image>.*)'	851,1269,1561,1576
'\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'	251,498,1087,1555
'(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	381,1054,1087,1580
'(?ms)^(?P<package>[^#]\\S+)[\t ]+(?P<question>\\S+)[\t ]+(?P<type>\\S+)[\t ]+(?P<value>[^\n]*)$'	614,947,996,1491
'([^\\"\'=\\s])(\\s*)#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])'	568,807,1144,1247
'^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'	1007,1015,1032,1300
u'\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+)\n\\.whl$\n'	1263,1290,1580,1594
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quot;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	552,606,800,1469
'\n(rel\\s*=\\s*(?:"(?P<rel1>[^"]*)"|\'(?P<rel2>[^\']*)\'|(?P<rel3>[^>\\s\n]*))\\s+)?\nhref\\s*=\\s*(?:"(?P<url1>[^"]*)"|\'(?P<url2>[^\']*)\'|(?P<url3>[^>\\s\n]*))\n(\\s+rel\\s*=\\s*(?:"(?P<rel4>[^"]*)"|\'(?P<rel5>[^\']*)\'|(?P<rel6>[^>\\s\n]*)))?\n'	1263,1290,1580,1594
'[^\\d]'	477,1068,1247
'[^0-9, ]'	557,1223,1420
'%[^%]|%$'	287,602,1509
'[^\\w.-]'	103,130,360
'([^-]*)-'	241,874,1249
'^([^ ]+)'	241,874,1249
'{([^}]+)}'	251,753,1087
'([^.]*).*'	241,874,1249
'<![^<>]*>'	330,413,1076
'[^a-z0-9]'	813,927,1003
'^([^:]+)$'	241,874,1249
'\\[[^]]+]$'	1269,1469,1498
'DD>([^<]+)'	1007,1015,1032
'"([^"]*)",?'	1630,1632,1639
'\\([^)]+\\)'	624,944,1486
'(([^:]+::)*)'	1007,1015,1032
'([^/]+)\\.a$'	534,1007,1466
u'([^\\t -~])'	304,1025,1322
'[^.]*\\.(.*)'	241,874,1249
'\\*\\s[^:]+:'	526,1046,1642
'(<[^>]*>)(.*)'	241,874,1249
'[^a-zA-Z.0-9]'	492,627,1364
'[^A-Za-z0-9 ]'	210,253,1426
'\\{([^}]*)\\}'	1263,1267,1580
'([^/]+)\\.so$'	534,1007,1466
'\\x1b\\[[^h]+h'	747,1517,1580
'^<\\?xml[^>]*?>'	220,1003,1247
'\\(([^()]+)\\)$'	526,1046,1642
'>([^<]+)</TITLE'	1007,1015,1032
'"([^"]+)"|(\\S+)'	127,682,1529
'^(.+)\\.([^\\.])*'	241,874,1249
'^([^<]*)(/(<.*))?$'	241,874,1249
'filename="([^"]+)"'	1007,1015,1032
'[\\/][^\\/]+[\\/]?$'	532,577,1314
'([^\\(]*)(\\(.*\\))?'	241,874,1249
'\\*([^,]+)(?:,(.*))?'	262,267,268
'^[^ ]*/([^ ]+)( .*)?'	1007,1015,1032
'^(.+)(\\[[^\\]]+\\])$'	1263,1290,1580
'TREEVIS ([^ ]+) (.*)$'	1007,1015,1032
'(?:[^:]*\\.)?([^:]*:)'	1054,1087,1580
'\\sfile:\\s+"([^"]*)"'	642,776,1203
'^([^<]+)[<]?(.*)[>]?$'	241,874,1249
'([^/\\\\]+)\\.xcodeproj'	289,638,956
'([A-Z][a-z]+[A-Z][^ ]+)'	1269,1469,1498
'(([^-/]+)-?([^/]+)?)/?.*'	241,874,1249
'\\\\x0([0-7])(?=[^0-7]|$)'	1269,1469,1498
'^[ \t]*import[ \t]+([^#]+)'	12,1054,1087
'([^\\(]*)(\\((.*)%(.*)\\))?'	241,874,1249
u"^((?:'[^']*'|[^'])*?)--.*$"	1012,1086,1580
'^([^.]+)[.]([^.]+)[.]?([^.]*)'	241,874,1249
'(\\S+);\\s*filename="([^"]+)"'	1007,1015,1032
'(?P<key>[A-Z]+)="(?P<val>[^"]+)'	1007,1015,1032
'^https?://github.com/([^/]+)/?$'	1322,1326,1505
'^[ \t]*from[ \t]+([^ \t]+)[ \t]+'	12,1054,1087
'&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'	31,476,732
'^([^:]+): (\\w+) \\(([\\w\\.]+)\\)'	122,1015,1032
'^(.*?)\\s*<(?:URI:|URL:)?([^<>]+)>$'	757,1087,1330
'([^;?#]*)(;[^?#]*)?(\\?[^#]*)?(#.*)?'	107,1225,1638
'([^ ]+) ([^ ]+)(( HTTP/([0-9.]+))$|$)'	107,1225,1638
'^\\.\\.\\. (?P<path>[^#]+)#\\d+ \\w+$'	122,1015,1032
'([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'	947,996,1491
'\\$\\{([^\\d}][^}:]*)(?::([^}]*))?\\}'	52,188,597
"Success: created profile .* at '([^']+)'"	1007,1015,1032
'([^<>= ]+)(?:\\s*([<>=]{1,2})\\s*(.*))?$'	242,930,1323
'multipart/byteranges; boundary="[^"]*"\\Z'	557,1223,1420
'(?:[^\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	640,945,1505
'(^|\n)svn path=[^\n]+revision=\\d+(?=$|\n)'	526,1046,1642
u'<img [^>]*\\bid="plugin_obj_(\\d+)"[^>]*/?>'	1121,1320,1355
'^https?://github.com/([^/]+)/([^/]+)($|/.*$)'	1322,1326,1505
'\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'	1025,1215,1423
'^(?P<chunk>[^\\r\\n]+)|(?P<newline>\\n|\\r\\n?)'	381,1054,1087
'(js_Execute|CallHook) ([^ ]+) ([^ ]+ )?([^ ]+ms)'	1007,1015,1032
'^https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$'	1322,1326,1505
'^(.+)[ \\._\\-]([0-9]{1})([0-9]{2})[\\._ -][^\\/]*$'	506,1269,1498
'goog\\.provide\\s*\\(\\s*[\'"]([^\\)]+)[\'"]\\s*\\)'	240,343,1336
'goog\\.require\\s*\\(\\s*[\'"]([^\\)]+)[\'"]\\s*\\)'	240,343,1336
'^(.+)[ \\._\\-]([0-9]{2})([0-9]{2,3})[\\._ -][^\\/]*$'	506,1269,1498
'(?P<name>[\\w-]+)\\s*\\(\\s*(==\\s*)?(?P<ver>[^)]+)\\)$'	1263,1580,1594
'href\\s*=\\s*"([^>"]*)"[^>]*title\\s*=\\s*"View larger image"'	813,927,1003
'(^|\n)\\d+-\\d+-\\d+[ \t]+((\\w|[.-])+[ \t]+)+<[^\n>]+>(?=$|\n)'	526,1046,1642
'^([^/]|/[^/])*\\bvoid\\s+([Tt]est\\w+)\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'^([MACDRUG_ ][MACDRUG_ ])(.)(.)   .   [^0-9-]+(\\d+|-)(.{23})(.+)'	241,874,1249
'(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'	381,1054,1087
u'(\\d{4})-([^-]+)-(\\d{,2})T(\\d{,2}):(\\d{2})((\\+|-)(\\d{,2}:\\d{2}))'	220,1003,1247
'^\\s*blocktrans(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?(?:\\s+|$)'	849,878,1634
'(?P<time>\\d+)\\.M(?P<M>\\d{1,6})P(?P<P>\\d+)Q(?P<Q>\\d+)\\.(?P<host>[^:/]+)'	12,1087,1580
'^((?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	251,498,1267
'([=!]=|is|is\\s+not)\\s*type(?:s\\.(\\w+)Type|\\(\\s*(\\(\\s*\\)|[^)]*[^ )])\\s*\\))'	640,945,1505
u'([^,]+),\\s+(\\d{2})\\s+([^\\s]+)\\s+(\\d{4})\\s+(\\d{2}):(\\d{2}):(\\d{2})\\s+([^\\s]+)'	220,1003,1247
'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?\\s*'	849,878,1634
'DOCTYPE\\s+(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	220,927,1469
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1054,1087,1580
'[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'	1004,1495,1580
'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	220,927,1469
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	1004,1074,1075
'\n                            \\s* ([^\\s;]+) \\s*            #content-coding\n                            (;\\s* q \\s*=\\s* ([0-9\\.]+))? #q\n                            '	1054,1087,1580
'\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'	332,689,1007
'(?x)\n    ^\n    (?: (\\w+):                     )?  # optional label at start of line\n        \\s* (\\.?\\w+)                   # optional spaces, (pseudo-)opcode\n    (?: \\s+ ([+-]?\\w+ | \\([^)]*\\)) )?  # optional first immediate operand\n    (?: \\s+ ([\\w,-]+  | \\([^)]*\\)) )?  # optional second immediate operand\n    (?: \\s* (?:\\#.*)               )?  # optional spaces and comment\n    $'	1007,1015,1032
'\n    (?P<escape_hex>\\{\\#x(?P<escape_hex_val>[0-9a-fA-F]+)\\})\n  | (?P<escape_dec>\\{\\#(?P<escape_dec_val>[0-9]+)\\})\n  | (?P<escape_lbrace>\\{\\{)\n  | (?P<escape_rbrace>\\}\\})\n  | (?P<attr>\\{\n        (?P<attr_name>[^ \\{\\}]+)\\s+\n        (?P<attr_val>[^\\}]+)\\})\n  | (?P<nl_hard1>\\n(?=[ \\t]))\n  | (?P<nl_hard2>\\{\\}\\n)\n  | (?P<nl_soft>\\n(?=\\S))\n  | (?P<nl_para>\\n\\n+)\n  | (?P<text>[^\\{\\}\\n]+)\n    '	518,757,787
'(?x)\n        ^ OPDEF \\( (JSOP_\\w+),         \\s*  # op\n                   ([0-9]+),           \\s*  # val\n                   ("[^"]+" | [\\w_]+), \\s*  # name\n                   ("[^"]+" | [\\w_]+), \\s*  # image\n                   (-1|[0-9]+),        \\s*  # len\n                   (-1|[0-9]+),        \\s*  # uses\n                   (-1|[0-9]+),        \\s*  # defs\n                   ([0-9]+),           \\s*  # prec\n                   ([\\w_| ]+)          \\s*  # format\n                \\) \\s* $'	1007,1015,1032
'\n    (?:\n        ([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*list\\(\n            (\n                (?:\n                    \\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                    )\n                    \\s*,\\s*\n                )*\n                (?:\n                    (?:".*?")|              # double quotes\n                    (?:\'.*?\')|              # single quotes\n                    (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                )?                          # last one\n            )\n        \\)\n    )\n'	332,689,1007
'\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    '	332,689,1007
'^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'	332,689,1007
'[^V_]'	1248,1488
'^[^:]+'	1269,1498
'[^A-Z]'	162,1302
"'[^']*'"	1087,1247
'[^0-9]+'	1051,1469
'-[^-]*$'	405,1219
'[^\'"]*'	757,1087
'{[^}]*}'	1211,1495
'[^_\\w]'	619,1247
'[^ \\t]'	52,188
'<[^<]+?>'	1048,1431
'<![^>]*>'	1247,1563
'"([^"]*)"'	678,1133
'#F([^#]+)'	332,689
'<br[^>]*>'	169,179
'`([^`]+`)'	52,597
'{([^}]*)}'	757,1248
'([^\\(]+)'	113,1469
'[^\\w.-]+'	1223,1420
'@"([^"]+)"'	296,819
'[^0-9:\\.]'	1248,1488
'[^\\w\\d_]'	1269,1498
'({[^{}]*})'	568,1144
'([^-]*-).*'	1246,1540
"@'([^']+)'"	296,819
'[^A-Za-z_]'	332,689
'[^-._\\w]+$'	295,1496
'^[^A-Za-z_]$'	332,689
'[^0-9A-Za-z]'	153,944
'\\\\[^ntrab]'	52,597
'libs/([^/]+)'	241,1249
'[^a-zA-Z0-9.]'	251,1087
'([^,;]+[,;]?)'	1007,1301
'^<p( [^>]+)?>'	757,1087
'@([^\'"\\s]+)'	296,819
'^([^\t]*)\t\t'	103,130
'[^\\w\\.\\- ]'	1223,1420
'([^#:]*#)(.*)'	251,1087
'\\x1b\\[[^m]*m'	153,1301
'\\[([^:]+?)\\]'	296,819
'<a[^>]*\\shref'	757,1087
'\\$([^\\$]+)\\$'	757,1087
"user:'([^']+?)'"	296,819
'([^A-Z])([A-Z])'	1054,1198
'^([^:]*):[^:]*$'	103,130
'<([^/!])>\\s+</'	558,1326
'user:"([^"]+?)"'	296,819
'<([^ ]+)(>| ).*'	558,1326
'^[^:]*:([^:]*)$'	103,130
'PATH.[^\\s]+\\s'	1317,1501
'<param([^<>]+)>'	1228,1231
'[^\\w\\-\\.\\/]+'	492,1364
'title:"([^"]+?)"'	296,819
'  ([^:]*):  (.*)'	241,1249
'\\s*[^\\s]+\\s*='	1007,1172
'<[^>]+>|[^\\s<]+'	1248,1488
'\\/\\/[^\\n\\r]*'	1025,1322
'<id>([^<]+)</id>'	296,819
'([^<]*)(<[^>]*>)'	9,148
'LC_ALL.[^\\s]\\s'	1317,1501
'({[^}]+})?(\\w+)'	492,1364
"title:'([^']+?)'"	296,819
'timestamp="[^"]+"'	241,1249
'^([^/]+)/([^/]+)$'	1004,1495
'(fe80::[^\\s|/]*)'	1317,1501
'\\(live[^\\)]*\\)'	110,1431
'[^a-zA-Z0-9\\_\\.]'	1269,1498
'.*[^.]\\.\\.[^.].*'	958,1308
'url\\(([^\\)]+)\\)'	568,1144
'^(.*[/#])([^/#]+)$'	210,253
'([^aeiouylsz])\\1$'	255,1184
'(?<=@)[^.]+\\.\\w+'	440,542
'(<!DOCTYPE[^]]*]>)'	210,253
u'[^A-Za-z0-9_.;\\-]'	332,689
'(.*) ([(][^()]*[)])'	251,1087
'^[aeiouy][^aeiouy]$'	866,1184
'\\s-drive\\s[^\\s]+'	1317,1501
'^[^{]*\\}|\\{[^}]*$'	1263,1580
'^[\\s\t\n]*([^\n]*)'	640,659
'@\\w+( [^{}:\n]+)?:'	757,1087
'^\\[([^]]+)\\](.*)$'	296,819
'projects/([^/]+)/?$'	354,379
'[^A-Za-z0-9_\\.\\-]'	332,689
'([^[]+)\\[([^]]+)\\]'	171,1381
'<([^:]+:[^\\s"<>]+)>'	55,908
'(</?(?:ul|li)[^>]*>)'	1228,1231
'(^|\\\\n)([^\\\\]*)$'	1248,1488
'by ([^;(\n]+;?|\\w+)'	109,182
'href="/pypi/([^/"]*)'	1263,1290
'(="[^"]+")([a-zA-Z])'	109,182
u'[^A-Za-z0-9_.:;\\-]'	332,689
'([:\\-\\w]*){([^}]+)}'	753,942
'/dev/disk([0-9]+)[^s]'	1246,1540
'\\[user:([^\\]]+?)\\]'	296,819
'(?m)(^|[^\\\\])(%.*$)'	86,88
'(?m)&mediaURL=([^&]+)'	386,1181
'[$][{]\\d+:([^}]+)[}]'	1025,1322
'^([A-Z][^A-Z]*?\\.\\s)'	251,1087
'(?:#|#.*?&)egg=([^&]*)'	1263,1290
'\\bexpires=([^;]+)(?i)'	1415,1580
"download_url:'([^']+)'"	386,1181
'\\\\\\?([^\\.]+)\\.(.*)'	1248,1488
'^\\s*(#|//[^/]|////).*$'	241,1249
'[^%]+%[^.]+[.](compile)'	241,1249
'(\\$\\{)\\d+(:[^}]+\\})'	1025,1322
'[/*?]|\\[[^]]*/[^]]*\\]'	737,1315
'([\\w\\-\\.]+)="([^"]+)"'	640,662
"([\\w\\-\\.]+)='([^']+)'"	640,662
'(?:https?://)?([^/]*)/.*'	386,1181
'<([^/!][^>]*[^/])>\\s+</'	558,1326
'"(\\\\\\\\|\\\\"|[^"])*"'	251,1087
"__([a-z]+)__ = '([^']+)'"	429,1582
'QEMU_AUDIO_DRV.[^\\s]+\\s'	1317,1501
'\\s*([^=:]+)(=|:)\\s*(.*)'	919,1007
'\\d+\\|[^|]+(?:\\|[^|]+)*'	1269,1498
'VERSION\\s*=\\s*"([^"]+)"'	441,628
'http://([^/]+)(/\\S*)\\s*'	498,1495
'(.*)\\[([^\\[\\]]+)\\](.*)'	757,1087
'h(e)l[A-Z]lo.*th[^e]*e(r)e'	171,1381
'https://github.com/([^/]+)$'	709,1601
'\\[\\[\\!\\!([^\\]]*)\\]\\]'	482,579
'(^| )`\\w([^`]*?\\w)?`($| )'	1087,1580
'({@link(?:plain)?\\s[^}]+})'	757,1087
'^http://([^/]+).sourceforge'	354,379
'([\\w]*)([^:=]*:?=?)([sif]?)'	602,747
'(?<=[^a-zA-Z0-9_-])%(?=[^:])'	1246,1540
'[^%]+%[^.]+[.](link|archive)'	241,1249
'^([^: \t\n]+):([1-9][0-9]*):'	12,1087
'[&?]versionId=([^&]+)($|=|&)'	1223,1420
u'(?<!\\\\)/.*?[^\\\\]/[gims]*'	1025,1322
'^--([^\\n]+)\\n(.*?)\\n--\\1$'	1087,1580
'Linux version ([0-9.]+-[^ ]+)'	1116,1141
'\\[\\[([^\\]^!][^\\]]*)\\]\\]'	482,579
'({[^{}$]*\\$[^{}$]*\\$[^{}]*})'	518,787
'([^\\r\\n]*)(?:\\r\\n|\\r|\\n)'	55,908
'(<[^<>]+(?:href|src)=(["\'])/)'	1228,1231
'^([a-zA-Z]:[^(]*)\\(([0-9]+)\\)'	602,1054
'^[\\\'\\"][^\\\'\\"]+[\\\'\\"]$'	247,1007
'(?i)<form[^>]* name="loginForm"'	386,1181
'version *= *([\'"][^\'"]*[\'"])'	222,1486
'<replaceable>[^<]+</replaceable>'	1087,1555
'(?P<name>\\w+)=(?P<value>[^ ,]+)'	440,542
'^(\\s*#!("[^"]+"|\\S+))\\s+(.*)$'	1263,1580
'.*[^aeiouy][aeiouy][^aeiouywxY]$'	866,1184
'[^%]+%testing[.](capture-output)'	241,1249
'<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'	413,1076
'(?<!\\$)(?<!\\\\)\\$([^\\$]+?)\\$'	518,787
'[^/\\\\,{]\\*\\*|\\*\\*[^/\\\\,}]'	1263,1580
'[^aeiouy]*[aeiouy]+[^aeiouy](\\w*)'	866,1184
'^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$'	55,908
'^(<=|>=|<|>|!=|==)?\\s*([^\\s,]+)$'	1263,1290
'{\\s*"name"\\s*:\\s*"([^"]+)"\\s*}'	1317,1501
'(\\S+[^<|^!|^>])\\s*(=+)\\s*(\\S+)'	241,1249
'^\\s+\\(c-name\\s+([^\\s]+)\\s*\\)$'	1054,1198
'\\s*<entry><type>([^<]+)</></entry>'	1087,1555
'(interface|) ([^ ]*) : public (.*)$'	602,1054
'&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'	413,1076
"'(?P<key>[^:]*)'\\:(?P<value>[^,]*),"	147,181
'#define\\s+ZLIB_VERSION\\s+"([^"]*)"'	441,628
'([^\\?\\!]*\\?)?([^\\?\\!]*\\!)?(.*)'	86,88
'^(\\S+) \\(in ([^)]+)\\) \\((.+)\\)$'	1015,1032
'(\\S+)\\s*->\\s*(?:\\[([^\\]]*)\\])?$'	1248,1488
'\\smarkdown(=[\\\'"]?[^> ]*[\\\'"]?)?'	236,1395
'[^[]+\\[(\\d+/[A-Za-z]+/\\d+):[^\\d]*'	1004,1075
'(\\w+|-+>|=+>|"[^"]+"|\'[^\']+\'|\\|)'	1248,1488
'[a-z]::[^=]|:[a-z]+:|`|\\.\\.\\s*\\w+:'	1087,1580
'"QOOXDOO_PATH"\\s*:\\s*"([^"]*)"\\s*,?'	1043,1619
'(\\S+)\\s*=\\s*("([^"]*)"|\'([^\']*)\')'	1228,1231
'^([\\w\\.]+) \\.\\.\\. \\[([^\\]]+)\\]$'	1015,1032
'(?:^|, )(?P<key>\\w+)=(?P<value>[^, ]+)'	440,542
'^(([^:/?#]+):)?(//([^/?#]*):([^/?#]*))?'	1269,1498
'^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'<link rel="pingback" href="([^"]+)" ?/?>'	126,1340
'CONSTRAINT (\\w+) UNIQUE \\(([^\\)]+)\\)'	1415,1580
'\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'	1248,1488
'LayoutTests/platform/(?P<platform>[^/]+)/'	1199,1300
'^(<=|>=|<|>|!=|={2,3}|~=)?\\s*([^\\s,]+)$'	1263,1580
'[\\?#&](?P<name>[^&=]+)=(?P<value>[^&=]+)'	1263,1580
'<span id=short-desc-content>([^<]*)</span>'	386,1181
'^([^<]*)<([^>]*)>\\s+(\\d+\\s+[+-]\\d{4})$'	103,130
'^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'	602,1054
'^(\\s+\\(implements\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'([A-Za-z0-9_.-]*|"[^"]*")\\s+(\\S+)\\s+(.*)'	241,1249
'enum\\s*{([^}]*)}\\s*([A-Z][A-Za-z]*)(\\s|;)'	1054,1198
'importScripts\\([\\\'"]([^\\\'"]+)[\\\'"]\\)'	896,1300
'^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'\\([^)]+\\)\\s*(([A-Za-z0-9_][A-Za-z0-9_]*))'	31,324
'[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'	386,1181
'@/([^/\\\\]*(?:\\\\.[^/\\\\]*)*)*/[a-z]*(?ms)'	96,252
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)'	1506,1510
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/\\?]*)\\s*\\['	1248,1488
'flashvars: [\\\'"](?:.*&)?file=(http[^\\\'"&]*)'	386,1181
'^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)$'	1506,1510
'/(?:[^/\\\\]*(?:\\\\.[^/\\\\]*)*)/[a-zA-Z]*(?s)'	636,1125
'[^%]+%testing[.](expect-failure|expect-success)'	241,1249
'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'	332,689
'<a href="([^"]*)"[^>]* id="lookup_id_defendant1"'	1012,1158
'<a href="([^"]*)"[^>]* id="lookup_id_defendant0"'	1012,1158
'<link rel="video_src" href=".*\\?file=([^"]+)" />'	386,1181
'((msgasser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'(([wum]asser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'((?:http|https|git)://github.com/[^/]*/[^/]*)/{0,1}'	354,379
'^(.+?)[ \\._\\-]\\[?([0-9]+)((?:[x-]\\d+)+)[^\\/]*$'	1269,1498
'\\A#!.*^exec [^\\r\\n|\\n|\\r]*?(tclsh|wish|expect)'	305,1505
'(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'	1263,1580
'(?is)<p>([^<>]{0,15}<b>[^<>]+?</b>[^<>]{2,2}.+?)</p>'	169,179
'^/(artist|release|track|label|release-group)/([^/]*)$'	927,1003
'(?P<mimetype>[^;]+).*(?:charset=(?P<charset>[^ ]+))?$'	906,1404
'postfix-(?P<queue>[^/]+)/(?P<process>[^[]+)\\[\\d+\\]:'	440,542
'n( mod \\d+)? (is|in|within|(not in))( not)? ([^\\s]+)'	919,1007
'https://(github.com)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$'	709,1601
' (SENATOR|REPRESENTATIVE)\\([Ss]\\) ([^,]+(,[^,]+){0,})'	109,182
'((msgasser(t|ted)NoTrace))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'^(https://nodeload.github.com/[^/]+/[^/]+/)zipball(/.*)$'	1025,1326
'\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'	1025,1322
'(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+) \\[([^\\]]+)\\]\\)$'	947,996
's3n://.*\\.elasticmapreduce/libs/state-pusher/[^/]+/fetch'	440,542
'<STREAM APP="(http://.*)" FULLPATH="/?(/.*\\.flv\\?[^"]*)"'	386,1181
'^www\\.|^(?!http)\\w[^@]+\\.(com|edu|gov|int|mil|net|org)$'	1495,1634
'\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^\\)]+)\\)'	1025,1322
'^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'	1015,1032
'((?<!{)(?:{{)+|(?:}})+(?!})|{(?:[^{](?:[^{}]+|{[^{}]*})*)?})'	568,1144
'((msgasser(t|ted))) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'	568,1144
'^(.+?)[ \\._\\-][Ss]([0-9]+)((?:[\\.\\-_ ]?[Ee]\\d+)+)[^\\/]*$'	1269,1498
'/\\* \\[([^\\]]*.*?)] \\*/[ \\t](.*[* ]+)(\\w+)(\\[ *])?[\\),]'	602,1054
'^(.+?)[ \\._\\-]\\[[Ss](\\d+)\\]((?:_\\[[Ee]\\d+\\])+)[^\\/]*$'	1269,1498
'\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'	243,481
'^\\s*([\\w\\s\\*]+)\\(\\s*\\*\\s*(\\w+)\\s*\\)\\s*\\(([^()]*)\\);'	1054,1198
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*("\\S[^"]+\\S")\\s*,?.*'	1459,1531
'(?P<atom>[^\\](){%*"\\\\\\x00-\\x20\\x80-\\xff]+)( (?P<rest>.*$)|$)'	1223,1420
'((msgasser(t|ted)NoTrace)) *\\(( *)(\\d+) *, *("\\S[^,^"]+\\S") *,?'	1459,1531
'\\s*<entry><token>([^<]+)</token></entry>\\s*<entry>([^<]+)</entry>'	1087,1555
'\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'	1054,1198
'https://(github.com|bitbucket.org)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$'	709,1601
'(?<![\\\'\\"])require\\s*\\(\\s*[\\\'\\"]([^\\\'\\"]+?)[\\\'\\"]\\s*\\)'	247,1007
'[ ]*(?P<arg>.*?=(?:(?:[^"\']*?)|(?:"[^"]*")|(?:\'[^\']*\')))[ ]*[,\r\n]'	1232,1233
'//.*?$|/\\*.*?\\*/|\\\'(?:\\\\.|[^\\\\\\\'])*\\\'|"(?:\\\\.|[^\\\\"])*"'	298,1007
'\\b((http|ftp)://[^ \\t\\n\\r\\f\\v<\'"]+|RFC[- ]?(\\d+)|PEP[- ]?(\\d+))'	305,1505
'^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'	1199,1300
'^\\s+\\(field\\s+\\(type-and-name\\s+([^\\s]+)\\s+([^\\s]+)\\s*\\)\\s*\\)$'	1054,1198
'([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'	779,1407
'\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))'	274,573
'(\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)")(?ms)'	96,252
'(?P<before>.*?)[\\(]host (?P<host>\\S+) (?P<action>[^:]+): (?P<message>.*)[\\)]'	440,542
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'	1054,1087
'^\\s+\\(value\\s+\\(name\\s+([^\\s]+)\\)\\s+\\(c-name\\s+([^\\s]+)\\s*\\)\\s*\\)$'	1054,1198
'^\\s+\\(parameter\\s+\\(type-and-name\\s+([^\\s]+)\\s+([^\\s]+)\\s*\\)(\\s*.*)\\)$'	1054,1198
'^((http[s]?):\\/)#?\\/?([^:\\/\\s]+)((\\/[\\w\\-\\.]+)*\\/)*([\\w\\-\\.]+[^#?\\s]+)'	1028,1039
'(require|define)\\s*\\(\\s*([\\\'\\"][^\\\'\\"]+[\\\'\\"]\\s*,)?\\s*\\[([^\\]]+)\\]'	247,1007
'\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'	1025,1322
'<meta[^>]*content\\s*=\\s*[\'"]?text/html;\\s*charset\\s*=\\s*([^ \'">]+)\\s*[\'"]?[^>]*>'	1228,1231
'^class ([^,]*), addr (\\d\\d:\\d\\d.\\d+), pci id (\\w{4}:\\w{4}) \\(sub (\\w{4}:\\w{4})\\)'	1317,1501
"\\svalues\\s*(\\(((?<!\\\\)'[^\\)]*?\\)[^\\)]*(?<!\\\\)?'|[^\\(\\)]|(?:\\([^\\)]*\\)))+\\))"	422,628
'UsernameToken Username="([^"]+)", PasswordDigest="([^"]+)", Nonce="([^"]+)", Created="([^"]+)"'	333,348
'^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'	1087,1555
'(?P<symbol>[^\t]+)\t(?P<filename>[^\t]+)\t(?P<ex_command>.*?);"\t(?P<type>[^\t\r\n]+)(?:\t(?P<fields>.*))?'	1025,1505
'^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'	305,1505
'(?xs)(\n        \'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'  |\n        "(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"\n    )'	636,1125
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	72,1087
'(\\s+|(?<=\\s)(?::[a-z-]+:)?`\\S+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	251,1087
'\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)[$]?(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'	666,707
'(?x)\n    (?P<key>[^=]+)\n    \\s*=\\s*\n    (?P<val>\n        "(?:[^\\\\"]|\\\\.)*" |\n         (?:.*?)\n    )\n    \\s*;\n'	1415,1580
"\n    (?:'[^'\\n\\r]*')+|\n    <=|>=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+|\n    \\(|\\)|\n    \\S+\n    "	82,89
'(?P<name>\\w+)\\s+(?P<type>[A-Za-z]+|\\(.*?\\))\\s+(?P<default>#REQUIRED|#IMPLIED|\\w+|(?:#FIXED)?((?:")([^"]*?)(?:")|(?:\')([^\']*?)(?:\')))\\s*(?:--(?P<comment>.*?)--)?'	305,1505
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>([^ ]|\\\\ )*?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	1223,1420
'<[a-zA-Z][-_.:a-zA-Z0-9]*\\s*(\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@][][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*(?=[\\s>/<])))?)*\\s*/?\\s*(?=[<>])'	1087,1580
u'\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\\.)\\.\\.[ \\t]*\\w+:  # .. foo: (but NOT ... else:)\n    '	1087,1580
'\n            ^\n            \\s*\n            (={1,5})\n            \\s*\n            (?P<name>(?:!=+|\n                        [^=!]+|\n                        !)+?\n            )\n            \\s*\n            \\1\n            (?:\\s|\\#|$)\n         '	305,1505
'^\n\\s*((?:-|\\w|\\&|\\*)+)   # return type\n\\s*                    # skip whitespace\n\\(\\s*\\*\\s*             # opening (\n([a-z]\\w+)\\)           # match the function name until the closing )\n\\s*\\(\\s*([^)]*)\\).*      # group the function arguments\n$'	1054,1198
'\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        '	1263,1580
"\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "	1263,1580
'[^ ]'	1621
'[^{}]'	1248
'[^:]+'	1569
'[^10]'	202
'[^"]+'	1076
'[^"]*'	1076
"[^']+"	1076
"[^']*"	1076
'^[^^]'	918
"[^<']*"	1076
'[^<"]*'	1076
'[^:]//'	1569
'[^/]*$'	126
'[^%]*%'	356
'[^ -~]'	1007
'~[^01]'	420
'^_[^_]'	1621
'[^\\t]'	261
'[^a-z]+'	923
'[$][^$]'	592
'[^0-9.]'	1469
'[^+0-9]'	174
'_[^_]+$'	407
' *[^$]+'	735
'([^,]+)'	539
'_[^,]*,'	1143
'[^c0-9]'	1158
'[^\\s]+'	1463
'[^\\d]+'	1122
'{[^}]+}'	1491
'[^-*+]*'	1248
'^[^0-9]*'	108
'^/[^/]+/'	1571
'[^-]{8}-'	1403
'<[^>]+?>'	55
'[^0-9.]+'	1555
'[^\\w_]+'	1399
'[^\\s,]+'	1520
'([^/]+)/'	233
'[^\\d.]*'	1101
'^[^\\.]+'	448
'<[^<]*?>'	498
'\\$[^ ]+'	1422
'`([^`]+)`'	533
'[^\\s,;]+'	200
'("[^"]*")'	1571
'[^\\w, ]+'	680
'>([^<]*)<'	126
'^[^\\s]*$'	624
'__[^_]+__'	743
'^[^:]*://'	220
'[^\\?]*//'	1262
'[^A-Za-z]'	182
'([^\\{])<'	1248
'([^0-9]*)'	829
'[^a-zA-Z]'	879
'[^0-9 :-]'	122
'[^\\[\\]]'	1248
'v=([^&]+)'	169
'<([^"]*)>'	1133
'^[^\\$]+$'	682
'([^() ]+)'	1248
'[^\\w\\-]'	1247
u'[^\\w-]+'	1557
'^[^ ]+ - '	506
'^/([^/]+)'	1226
'(.*) [^ ]'	1331
'^[^^ ].*$'	1633
'-Wl,[^,]*,'	506
'^/?([^/]+)'	1226
'\\s*[^=]+='	1258
u'-[^-]*U.*'	1007
'"([^ ]+?)"'	902
'[^\\{\\}]+'	1248
'/\\.[^/]*$'	1226
'^([^\\.]+)'	681
'<[^<]*?/?>'	144
'<([^>]*?)>'	935
'\\bq[^-+]*'	1248
'/v/([^?]+)'	506
'\\bj[^-+]*'	1248
'([^\\/]+)$'	654
'[^a-z0-9_]'	1589
u'[^SATB-]+'	782
u'==[^=]+=='	1100
'comp=[^&]*'	741
'\\bm[^-+]*'	1248
'\\br[^-+]*'	1248
'^[^\\s\\}]'	1025
'[^\\w\\s]+'	1594
'[^\\w\\.]+'	1247
'[^\\w\\._]'	33
'[^\\w\\-.]'	1315
'[^\\w\\-]+'	360
'\\bw[^-+]*'	1248
'\\bd[^-+]*'	1248
'([^\\([]+)'	113
'([^:]+)://'	1569
'\\bp[^-+]*'	1248
'[^a-zA-Z-]'	1302
'^lib[^-]+-'	33
'\x1b[^m]*m'	1618
'<img[^>]*?>'	705
'{([^}^{]*)}'	1328
'[^ ]*\\.DLL'	1045
'\\${[^{}]+}'	1143
'^/*([^/].*)'	1381
'SID=[^\\n]+'	594
'^[^,.:;?!]+'	1055
'xmlns=[^>]+'	507
'\\([^\\(]*$'	809
'\\.([^/]+)$'	200
'\\:([^/]+)?'	1122
'.*"([^"]+)"'	735
'\\{[^}]*\\}'	498
'<\\&I[^>]*>'	1248
'tid=([^&]+)'	1569
'[^A-Z]+(.*)'	1326
'<{([^}]+)}>'	1248
'fid=([^&]+)'	1569
'^[^\\.]+\\.'	826
'\\n([^\\n])'	1244
'<[^!][^>]*?>'	413
'.*\\.[^/.]+$'	560
'([^:]*):(.*)'	1462
'([^=]+)=(.+)'	449
'(\\w+)[^>]*>'	928
'\n([^\r]*)\r'	1007
u'.*/([^?#]*)'	1557
'&([^;\\s]+);'	539
'<[^/?!]?\\w+'	1638
'\\n[^ \\t]+:'	1580
'[^-_a-z.0-9]'	743
'([^\\\\])\\$'	1248
'<(?!!)[^>]+>'	539
'[^a-fA-F\\d]'	674
u'[^\\W0-9_]+'	782
'Auth=[^\\n]+'	594
'\\${([^}]+)}'	402
'[^0-9a-zA-Z]'	1495
'Passwd=[^&]+'	594
':[^\\s]+\\s*'	1218
'([$]{[^}]*})'	313
'([^@]+)@(.+)'	1462
'file://[^/]*'	18
'[A-Z][^A-Z]*'	596
'[a-z]*[^A-Z]'	596
'LSID=[^\\n]+'	594
'>([^<]+)</a>'	200
'(\\$[^ ]+)\\b'	29
'[^0-9A-Za-z_]'	1007
' at -?0x[^>]+'	313
'[^0-9a-zA-Z_]'	1247
'[^0-9a-zA-Z]+'	340
'[^\\w\\.\\-]+'	975
'[,]?([^,=]+)='	1068
'(?i)<br[^>]*>'	55
'[^\\w\\s@+.-]'	1458
'</?\\w+[^>]*>'	1139
'^A[0-9][^ ]+$'	439
'^https?:/[^/]'	200
'[^=]+=([^,]+)'	645
'\\<[^\\>]+\\>'	190
'[^A-Za-z0-9]+'	864
'[^0-9\\.\\-]+'	973
'src="([^"]*)"'	190
'[^a-zA-Z0-9,]'	826
'[^.]*\\.\\..*'	233
'.*\\/([^?#]*)'	1557
'/~([^/]+)(.*)'	1638
'\xc2([^\xc2])'	190
'qop="([^"]+)"'	1544
'#define[^\n]+'	749
'(\\[[^]]*\\])'	1328
'[^a-z0-9\\-]+'	309
'inet6 ([^ ]+)'	494
'\\$[^/]+(/|$)'	1315
'^[^:/]+://.*$'	374
'^([^e]+)e(.+)$'	900
'^\\[[^][]+\\]$'	1569
'<input[^<>]+/>'	1569
'\\(([^()]+)\\)'	313
'->\\s*[^\\)]*$'	1025
'<b>([^<]+)</b>'	126
u'"id" ([^,]+),'	1158
'link="([^"]*)"'	1431
'%\\([^\\)]+\\)'	1158
'^(\\w+)\\([^;]'	1023
'^[ ]{0,3}[^ :]'	236
u'\\[[^\\]]*\\]'	1139
'^[^0-9A-Za-z]*'	108
"[^ ']*::[^ ']*"	560
'([^\\\\\\/]+)$'	1025
'#\\{([^}]*)\\}'	1436
'[\\w]+="[^"]+"'	1076
'[^\\n]*(\\n|$)'	727
'{{{([^{]+?)}}}'	682
'^(\\{[^}]+\\})'	1088
'([^:]+):(\\S+)'	1301
'^[^:]*[\\d:]+$'	741
'[^0-9a-zA-Z._]'	1051
'^([^:]+):(.*)$'	910
'app_id=([^&]*)'	225
'[^a-zA-Z0-9_]+'	31
'([^!])=?\\|\\|'	1258
'[^a-zA-Z0-9-]+'	1267
'([^:]*)\\:(.*)'	765
'[*]|--|[^+*-]+'	1248
'\\([^\\)]*\\)$'	1431
u'[^a-zA-Z0-9 ]'	826
'q=(http[^&]+)&'	1169
'^([^,]), (.*)$'	1408
'<([^\\s"<>]+)>'	55
'^/r/([^/]{2,})'	200
'^([^:]+):.(.*)$'	225
'^\\\\[^\\s]+\\n'	1244
'([^a-z0-9\\.-])'	1088
'title="([^"]*)"'	1431
'([^\\d]+)(\\d+)'	43
'([^.()]+\\.){5}'	1319
'[^a-zA-Z0-9_ -]'	1352
'baseUrl>([^<]+)'	740
'<!DOCTYPE[^>]*>'	1248
'(,\\n|[^\\n-])+'	1594
'^(<[^>]*/>)\\s*'	1301
'^["]([^"]+)["]$'	502
'^([^_].*)\\.py$'	190
'\\\\[^\\s]+\\s+'	1244
'charset=([^;]*)'	393
'<[Bb][Rr][^>]*>'	110
u'[^\\w\\d_\\-]+'	1181
'@\\w+{([^,]+),$'	1470
'value="([^"]+)"'	1569
'[^\\.a-zA-Z0-9]'	1495
'([^#]*)(?:#.*)?'	1248
'realm="([^"]+)"'	1544
'[^\\s0-9a-fA-F]'	1386
"'(?:[^']|'')*'$"	1571
'\x1b\\[([^m]*)m'	1580
'<(![^-\\[]|\\?)'	1076
'^(\\d+)[^\\d].*'	1007
'(([^/]*)(/.*)?)'	1248
'[^A-Za-z0-9\\.]'	356
'([^\\.])+\\..*$'	233
'nonce="([^"]+)"'	1544
'.*\\r(?=[^\\n])'	1580
'(qu|[^aeiou])y$'	1247
'[^a-zA-Z0-9~$]+'	360
'([^a-zA-Z_0-9])'	560
'^\\<\\/?([^ ]+)'	236
'href="[^"]*.py"'	499
'href="[^"]*.in"'	499
'http://[^ \n\r]*'	297
'^\\[([^\\]]+)\\]'	1088
'(\\s\\#[^\n]+\n)'	1326
'\\$\\{[^\\}]+\\}'	635
'([^\n])\n([^\n])'	413
'Customer:[^\\s]+'	225
'tmpl/[^ ]*_js.cs'	413
', "t": "([^"]+)"'	1365
'(\\w+)="([^"]+)"'	1569
'[^\\r\\n\\t ,;]+'	1184
'[^a-zA-Z\\d\\-_]'	820
'[^a-zA-Z0-9_\\.]'	842
':[^`]+:`([^`]+)`'	1594
'drives\\/([^/]*)'	575
'http://[^/]*(.*)'	360
'([^*]+)\\*(\\d+)'	356
'[^a-zA-Z0-9._-]+'	905
'<!--[^>]*-->|<!>'	1247
'^PART :?(#[^ ]+)'	375
u'\xa0([^\xa0]|$)'	1438
'[^ ]*\\.[A-Z]{3}'	1045
'<h1>([^<]+)</h1>'	1181
'([^\\x00-\\x7f])'	1025
u'/data[^ ]*/hphp'	218
'^[^ :]+:[^ ]+ - '	506
'^_{2,}.*[^_]+_?$'	640
'ed2k://[^\\s<>]+'	1569
"'\\.\\./([^']*)'"	126
'\\s*([^()]+)\\s*'	1488
'^/var/log/[^/]+$'	1226
'^([^ ]+) - .*\\n'	506
'([^:]+):\\s*(.*)'	1143
'(TICKET_[^\\<]+)'	453
'^\\<\\/?([^ >]+)'	1395
'artist="([^"]*)"'	1431
'<(hr|br)[^>]*?/>'	1267
'"[^"]*"|\'[^\']*'	1076
'[^aeioudgkprt]h$'	1247
'openssl-([^<]+)<'	1580
'[^-A-Za-z0-9.:_]'	905
'(http://[^/]+):80'	335
'\\w[^=]*\\s*=\\>?'	356
'<(?!/?TEXT)[^>]+>'	1248
'"(?:[^"]|\\\\")*"'	602
'id\\(([^\\)]+)\\)'	29
'[^[]*\\[(.*)\\].*'	1488
'(^|\\s+|[^\\\\])@'	44
'INFO Passed: [^0]'	566
'/([^/]*)/([^/]+)/'	1319
'\\$(\\w+|{[^}]+})'	1111
'\\{([^}]+)\\}(.*)'	1500
'(\\/display[^"]*)'	110
'gems/([^/]+)/gems'	944
'[^a-z0-9_]|^[0-9]'	1520
' ?([^=]+)="(.*?)"'	1244
"^File '([^\n]*)'$"	889
'<\\[\\/?[^>]+\\]*>'	1248
'detailkey="([^"]+)'	650
'\\[([^\\[\\]]+)\\]'	396
'(?i)<i>([^<]*)</i>'	1607
'([^<]+) (<[^>]*>)$'	502
'(\\$\\([^\\)]*\\))'	413
'int\\s*[(][^)]*[)]'	356
'[^a-zA-Z0-9-_,.$ ]'	225
'hex\\(([^\\)]+)\\)'	29
'([\\d.]+)([^\\s]+)'	899
'(,"[^,"]+),([^,"])'	55
'[^a-zA-Z0-9\\._:-]'	826
'([^\\s].*?)(\\s|$)'	747
'[^(]+[(]([^)]+)[)]'	602
'((?:"[^"\\s]+")+)$'	1495
'[^a-zA-Z0-9_\\. ]+'	31
'^\\!?([^,]+),(.+)$'	1463
'(?i)<b>([^<]*)</b>'	1607
'.*/index/([^/]+).*'	200
'encoding="([^"]+)"'	377
'/projects/+([^/]+)'	352
'^([^:]+:)\\d+:\\s*'	1226
'^branch\\s*=[^=].*'	747
"encoding='([^']+)'"	377
'<[a-zA-Z\\/][^>]*>'	175
'^[^_]{1,1}.*\\.py$'	1528
'^([^ \\t]+)[ \\t]*'	813
'\\s([^\\s\\(\\)]+)'	1248
'#include "([^"]+)"'	635
'charset=([^;\\s]+)'	329
'\\\\c ([^ ,;\\.]+)'	1244
'(.*?)([^.]*?)(_?id)'	241
'(<!--.*-->|<[^>]*>)'	992
'^([^-]*)(?:(-.*))?$'	1094
'<h1[^>]*>(.+?)</h1>'	1277
'"(?P<phrase>[^"]+)"'	190
"#([^']+?)# \\(qv\\)"	1469
'(?:[^\\n]*\\n){0,2}'	1594
'\\[\\[image:[^\\]]+'	138
'^\\((\\?P<[^>]*>)?$'	1248
'[ \\t]*(#[^\\n]*)?$'	908
'.*Video: ([^,]+),.*'	53
'RegExp\\b|\\/[^\\/]'	1322
u'[^\\w"\\\'`\\(\\)]'	943
'([\'"][^\'"]*[\'"])'	1054
'<[a-zA-Z\\/][^>]*?>'	175
'.*Audio: ([^,]+),.*'	53
'^Name:[ ]*([^\\s]*)'	122
'\\$\\([^ ]* \\$<\\)'	534
'.*/watch/([^/]+)/.*'	200
'^/([^/]+)(?:/(.*))?'	66
'([^A-Za-z0-9\\._-])'	1088
'images/([^/]*)/(.*)'	1381
'\\<\\?[^\\>]*\\?\\>'	605
'(\\s\\/\\/[^\n]+\n)'	1326
'bool\\s*[(][^)]*[)]'	356
'([\\\'"])[^\\1]*\\1'	1469
'[^a-zA-Z0-9\\./_:-]'	826
u'^[\\s]*==([^=]+)=='	1100
'[^-a-zA-Z_\\.0-9:]+'	225
"'([^']+?)' \\(qv\\)"	1469
'project.[^=]*=(.*)$'	444
"VERSION = '([^']+)'"	1438
"VERSION = '([^']*)'"	757
'(\\\\.|[^#])*(#.*)?'	1248
'\\[\\[image:([^ ]*)'	138
'([^<]*)<([\\w]*|/)>'	363
'[^{}]*{[^{}]*}[^{}]*'	1248
':[^:()|]+:([^:()|]+)'	1248
"('(?:[^']|(?:''))*')"	1258
'^\\s*(?P<arg0>[^ ]+)'	902
' \\([=<>]* [^ )]*\\)'	1143
'(?=-)([^>]*)(?=.tar)'	1178
'.*/videos/([^/]+)/.*'	200
'.*/video/([^/?#]+).*'	200
'.*?[^a-zA-Z0-9_]_\\('	1377
'(?:^|[^%])%([\\w-]+)'	1571
"LOCALROOT.'([^']*?)'"	1182
"XAMPPPATH.'([^']*?)'"	1182
'\\[caption[^\\]]*\\]'	1267
'^@([^\\s]+)\\s+(.+)$'	1463
'<Term>([^<]+)</Term>'	1302
'^(.+?)\\(([^)]+)\\)$'	1571
"jsclassref='([^']*)'"	1181
'[^a-z]([a-z]+)[^a-z]'	472
'(file|id)=([^,\\s]+)'	560
"'((?:[^']|(?:''))*)'"	1258
'"([^\\\\"]+|\\\\.)*"'	339
'\\[hwid:([^\\]]*)\\]'	1007
u'[^a-zA-Z0-9_\\-\\.]'	826
'@(\\w+)\\(([^;]+)\\)'	1216
' ?\\[([^\\[\\]]+)\\]'	1594
'^([a-z-]*) +([^ ].*)'	1618
'/prefs(?:/([^/]+))?$'	1258
'float\\s*[(][^)]*[)]'	356
'<code>([^<]+)</code>'	200
'name=\\"q\\">([^<]*)'	1248
'^Subject: [^\n]+$(.*)'	335
u'version ([^\\+\\)]+)'	1007
'^%include\\s"([^"]+)"'	1495
u'[^a-zA-Z0-9_\\-\\. ]'	826
'^version = "([^"]+)"$'	1217
"USINGXAMPP.'([^']*?)'"	1182
"APACHEPATH.'([^']*?)'"	1182
'device_del ([^,\\s]+)'	560
'Error occured:([^<]+)'	1302
'device_add ([^,\\s]+)'	560
'\\[FIXED ([^\\]]+)\\]'	206
'DataText4>([^<]*)</a>'	126
'[ \\t]*\\n([^\\r\\n])'	1025
'\\$\\$([^\\$]*)\\$\\$'	1340
'\\[\\[([^\\]]+)\\]\\]'	201
'[^:]+://(.*)/([^/]*)$'	560
'<(\\w+)(\\s.*)?[^/]?>'	992
'#include\\s+<([^>]+)>'	1587
'\\s*([^,;]+?)\\s*[,;]'	1522
'<a href="?([^\\s^"]+)'	1178
u'([^ ]+) *(\\+\\+|--)'	1422
'<\\s*/?\\s*([^\\s>]+)'	1248
'("(\\\\.|[^"\\\\])*")'	539
'\\[|\\]|[^\\[\\]\\s]+'	1248
'"[^=]*=\\s*"([^"]*)";'	520
'<h3><a href="([^"]+)"'	539
'\\bhostname="([^"]*)"'	727
'([^\\w.@+-/]|[,;?!])*'	585
'^file\\:\\/\\/[^\\?]*'	1555
'[^\\\\]\\$([a-z]+)\\b'	375
u'(?s)<[^>]*>|&#?\\w+;'	506
'((\\\\.|[^#])*)(#.*)?'	1248
'^(scsi|ide)[0-9]+[^:]'	562
'<img .*?src="([^"]*)"'	641
'^[^/\\\\.~][^/\\\\]*$'	1529
'<source src="([^"]+)"'	508
'\\[([^]]*)\\]:(\\d*)$'	687
'^([^\\)]+)\\((.*)\\)$'	630
'/url\\?q=(http[^&]+)&'	1169
'\\s+\\(feat. [^)]*\\)'	913
'([^\\.\\/\\\\]+)\\.py'	557
'gaphor-version="[^"]*"'	1115
'[^#]*?(<.+>).*(<.+>).*'	420
'\\[\\[([^][|:]*)\\]\\]'	1454
'NAME\\s*=\\s*"([^"]*)"'	1540
'^/changeset/([^/]+).*?'	816
'^\\s*([^\\s;]+)\\s*.*$'	55
'value="(ed2k://[^"]+)"'	1569
'<\\/strong><br>([^<]*)'	1248
'^[\\w\\<][^\\n]*(\\n+)'	485
'<\\&frasl>\\s*<p[^>]*>'	1248
'[name|class]="([^"]*)"'	1249
'<!ELEMENT\\s+([^\\s]+)'	1469
'([^!]*)!?([^@]*)@?(.*)'	539
'^([^:]+):\\s+(.+)\\s*$'	49
'^(\\d\\d\\d)-.*[^\\~]$'	1023
'^/v2/images/([^\\/]+)$'	420
'\\|\\s+([^\\|*])\\s+.*'	1247
'([^a-z]+)\\s*([a-z]+)?'	729
'^/v1/images/([^\\/]+)$'	420
'[(]([^)]*)[)]\\*(\\d+)'	356
'^([^=]+)[ ]*=[ ]*(.+)$'	502
'^(.)(.+?)\\1 ([^#]+)#?'	1055
'[^0-9a-z_.%&=()<>*/+-]'	1520
'<li><a href="([^"]+)/"'	207
'(<[^<]*snum=)([^">]+)>'	1248
'<title>([^<]+)</title>'	1181
':([^:()|]+):([^:()|]+)'	1248
'DataText4>([^<]*)</td>'	126
'(\\w+)(?:=([^\\s;]+))?'	1216
'(?=qtonpi)([^>]*)(?=-)'	1178
'unicode\\s*[(][^)]*[)]'	356
'<TITLE>([^<]*)</TITLE>'	126
'<ERROR>([^>]+)</ERROR>'	1302
'^[^,]+,([0-9A-F]+),.*$'	1432
'complex\\s*[(][^)]*[)]'	356
'\\s*("[^"]*"|.*?)\\s*,'	1118
'\\s*[^#]{3,}:\\s*(#.*)?'	407
'(\\[\\[)([^$]+)(\\]\\])'	1315
'(?<!\\\\)[^"\\]\\[\\$]+'	557
'(?is)<tr [^>]*>.*?</tr>'	55
'href\\=\\"([^\\"]*?)\\"'	33
'(?ims)<dd[^>]*>.*?</dd>'	539
'[^_]+_toy-([\\w-]*)-x86'	1068
'https?://([^/]*?)(/.*)?'	867
'(?ims)<tr[^>]*>.*?</tr>'	539
'(^.+)\\s+\\([^\\)]+\\)$'	327
'EXTRA\\s*=\\s*"([^"]*)"'	1540
'^([^\\.]+)\\.(\\w{,4})$'	360
'^[^ :]+:([^ ]+) - .*\\n'	506
'<td v[^>]+>([^<]*)</td>'	55
'\\s*([^\\s\\(\\)]*)\\s*'	1248
'\\#access_token=([^&]*)'	1160
'^([^ ]+) = ([0-9\\.]+)$'	1510
u'[^0-9]([0-9]{4})[^0-9]'	1469
'^\\t*(\\S[^\\t]*\\t){3}'	560
'^\\s*\\s*\\(([^ )]*)\\)'	557
'\\A<[^>]*?href=["\']\\Z'	245
'(\\/display[^>]*)([^<]*)'	110
'[^ \\t\\n\\r\\f\\v\\\\]+'	1618
'\\[\\s*expr ([^\\]]+)\\]'	557
'id="cok" value="([^"]+)"'	1569
'^(?:\\[([^]]+)\\])?(.*)$'	819
'<WebEnv>([^>]+)</WebEnv>'	1302
'\\s*(([^,]|(,\\s*\\d))+)'	1500
'<hostname name="([^"]*)"'	727
'<([^>]*)/([^>]*)@(\\d+)>'	1248
'code-info,([^,]+),(\\d+)'	464
'TEST-START \\| ([^\\s]*)'	1007
'L"\\\\0(\\d)" L"([^"]*)"'	1209
'tcp://([^\\s:]+):(\\d+)$'	1638
'([^"])%\\((.+)\\)s([^"])'	1420
'/photos/(?:[^/]+)/(\\d+)'	115
'((.+)\\@)?([^:]+):(\\d+)'	1506
' *\\bservicefp="([^"]*)"'	727
'("[^"]*?")|(\'[^\']*?\')'	1247
'td bgcolor=white>([^<]*)'	1248
'"[^"]+"|\\\'[^\\\']+\\\''	232
'[^a-zA-Z0-9.:^*$@!+_?-|]'	276
'/\\.[^\\.]|\\\\\\.[^\\.]'	602
'(run\\s+)([^\\s]*)(\\s*)'	1547
'(<title>Lyrics: )([^<]*)'	110
'[^a-zA-Z0-9.: ^*$@!+_?-]'	276
'member=([^"]+)">([^<]+)<'	55
'/\\*[^\\n]*-- translated'	356
'(Artist:.*html">)([^<]*)'	110
'<!-- BUG([^ ]*) (.*) -->'	1244
'\\S+@\\S+\\.\\S*[^\\s)?]'	18
'#\\s*(\\w*)\\s*=([^#]*)#'	356
'"[^\\n]*Q_OBJECT[^\\n]*"'	1587
'item=("[^"]+"|\'[^\']+\')'	1248
'\\[\\s*([^\\]]+?)?\\s*\\]'	1087
'<large[^>]*>(.*?)</large>'	1093
'&(?![^a-zA-Z0-9_#]{1,5};)'	1469
u'[^0-9]([0-9]{3,4})[^0-9]'	1469
'(?is)<td [^>]*>(.*?)</td>'	55
': (\\S+\\.[^\\.]+):(\\d+)'	200
'\\A(\\w+)://([^ *?[]*)\\Z'	1462
'padding:10px[^>]+>([^<]*)'	1248
'%\\((?P<name>[^\\)]+)\\)s'	1247
'\\(\\?P<([^>]+)>[^()]+\\)'	892
'^GNU gdb [^\\d]*(\\d+)\\.'	1087
'Matcher&lt;([^\\*&]+)&gt;'	1244
'[^A-Za-z0-9\\-_ \\(\\).]+'	1469
'\\bgl_Position\\b([^;]*);'	685
'gene_name \\"([^\\"]+)\\"'	1412
'charset\\s*=\\s*"([^"]+)"'	422
'([\\w\\.-]+)\\s+([^(]+).*'	1501
'(\\[(?P<link>[^\\]]+)\\])'	190
'/mysql-(.+)/[^.]+\\.sock$'	803
'[^ \\t\\n\\r\\f\\v"\\\']+'	974
u'\\[\\[([^:]+):([^|\\]]+)'	1100
"queryUrl\\(-1,'([^']{40})"	1569
'\\bplural\\s*=\\s*([^;]+)'	1258
'[ \\t]*(#[^\\n]*)?\\r?\\n'	908
'(\\b[^ ,=]+)="?([^",]+)"?'	1301
'^([^-]+)-([^-/]+)(/(.*))?$'	850
'^(\\w+)\\.(\\w+)\\.([^.]+)'	1259
'^\\\\@input\\{([^\\}]+)\\}'	1362
'<!-- ([^#]+)#([^\\s]+) -->'	902
u'name\\s?=\\s?([^"\\s]+)/>'	1100
'[A-Z]{([^}<]*)(<[^>}]*>)?}'	1248
u'\\[\\[Bruker:([^\\|\\]]+)'	1100
'(_)(?=\\S)([^\\r]*?\\S)\\1'	888
'Author: +([^<]+) <([^>]+)>'	1540
'(%(\\([^\\s\\)]*\\))?[sd])'	162
'^([^=]*)\\{(\\w*)\\}=(.*)$'	560
'Commit: +([^<]+) <([^>]+)>'	1540
'<EMAIL>[^<]*(<\\/EMAIL>|$)'	1001
'^Routine: (?P<name>[^ ]+)$'	439
u'https?://[^/]*imdb\\.com/'	1557
'^([^-]*)-(.*)\\.tar\\.bz2$'	560
'^(([^}]*?[^;]?)\\s*)(?=\\})'	1025
'^(.*[^a-z0-9\\n])?insmod .*'	1465
u'[^ ]*/debugger(/[^ ]*.php)'	218
'([A-Za-z0-9-]+): ([^\r\n]+)'	1638
'^/v2/images/([^\\/]+)/file$'	420
'<p(?: [^>]*){0,1}>(.*?)</p>'	1248
'^([^-]+-[^-]+)-(.*)\\.fail$'	1208
'<Compile Include="([^"]*)"*'	504
'((.+)\\@)?([^:]+)(:(\\d+))?'	1510
'([^\\-\\.]*)-([\\d+.\\-]+)$'	1248
'([^_]|^)___(.+?)___([^_]|$)'	738
'<s(?: [^>]*){0,1}>(.*?)</s>'	1248
'\\[\\[file:([^|\\]]*)\\]\\]'	138
'\\s*([^\\s\\=]+)[\\s=]+(.*)'	1412
'File "([^"]*)", line (\\d+)'	602
'^https?://github.com/[^/]+$'	305
'TEST-START \\| ([^\\n]+)\\n'	1007
'lib(64)?/lib[^/]*\\.so\\..*'	1226
'^[\\w|\\s.]+\\(([^)]*)\\).*'	1580
'^([^:]+):.([0-9]+).Watts.*$'	225
'BUNDLE_ID\\s*=\\s*"([^"]*)"'	1540
'\\\\\\\\([^ \\\\/?:]+\\\\)+'	300
"(^|[^'])'''(.+?)'''($|[^'])"	738
'[^A-Za-z0-9_\\-\\.:\\/\\+]+'	562
'\\(([^,\\)]+),([^,\\)]+)\\)'	1295
'((?:"[^"]+"|[^,"]+)+)\\s*,?'	1249
'\\([^\\s()]+ ([^\\s()]+)\\)'	1248
'^(?P<download_dir>.*/)[^/]*$'	566
'.*UTS_RELEASE\\s+"([^"]+)".*'	560
'\\[\\[(ftp://[^|\\]]*)\\]\\]'	138
'\\s*([^;# \\t\\n\\r\\f\\v]+)'	276
'Line ([0-9]*) of "([^"]*)".*'	1007
'^\\s*//.*|^\\s*/\\*[^*]*\\*/'	1621
'build/bdist\\.[^/]+/egg/(.*)'	1258
'.*UTS_VERSION\\s+"([^"]+)".*'	560
u'(?x) \\( [^()]* \\b few \\b'	1557
'require\\("std\\.([^"]+)"\\)'	796
u'^import (.*)\\.\\d+[^\\s]*$'	1158
'^\\s+\\(from\\s([^\\s]+)\\)$'	1571
'[0-9]+(?:\\.[0-9]+)?|[^0-9]+'	1436
'^\\s*\\[Branch\\s+([^]]+)\\]'	122
'^(<stream:stream [^>]*>)\\s*'	1301
'class="FAILURE">([^<]+)</li>'	119
'(.*)artist:(?P<artist>[^,]+)'	539
'var thunder_url = "([^"]+)";'	1569
'^([^;]+);([^;]+):(\\d{1,5})$'	798
'<property\\s+name="([^>]+)">'	43
'(\\d+)\\s(\\d+)\\sR[^a-zA-Z]'	1151
'^[^\\s/].*\\s(\\w+)\\([^;]*$'	1023
'\\s*#\\s*include\\s+<([^>]*)>'	1007
'OS=(\\w+\\s+[^A-Z]+)\\s+[A-Z]'	681
'^([+\\-])?\\$([^\\$\\{\\}]+)$'	557
'productType\\s*=\\s*"([^"]*)"'	820
u'(\\b|_)([^\\b_\\s]+?)(\\b|_)'	888
'"([^"]+)"\\s*(0x[0-9a-fA-F]+)'	633
'((?:[^ \\t\\.#]|\\.\\.)+)(.*)'	338
'android:versionName="([^"]+)"'	701
'^([^<,]+)\\s*(?:<([^>,]+)>)?$'	1553
'[a-zA-Z][^\t\n\r\x0c />\x00]*'	1580
'(^.*[^a-z0-9\\n])?setprop +.*'	1465
'^function\\("([^"\\\\]+)"\\)$'	1094
'^\\s*([^=\\s]+)=?\\s*(\\S.*)$'	496
'is_base_of<([^,]+), NodeType>'	1244
'.*pion_session_id="([^"]+)".*'	1072
'(?m)(?s)<terms.*<locale[^>]+>'	796
'([^\\s]+)\\s*<->\\s*([^\\s]+)'	735
'\\(([^\\s()]+) ([^\\s()]+)\\)'	1248
'HTTP/1.[01] ([0-9]+) ([^\r]*)'	606
'^convert_file \\"([^\\"]*)\\"'	107
'invalid cidr value: "([^"]+)"'	735
'\\s*#\\s*include\\s+"([^"]*)"'	1007
'^([^ ]+)[ ]+([^ ]+)[ ]+([^ ]+)'	1491
'([^ \t\n\r\x0c\x0b\\{\\}]+)\\s'	1205
'([^:]*):(\\d+): Emergency stop'	31
'https?://github.com/([^/]+)/?$'	1025
'//#TPT-Directive\\s+([^\r\n]+)'	1405
'^AUTOTEST_STATUS:([^:]*):(.*)$'	560
'.?<\\?xml[^<>]+encoding="(.+)"'	764
'AC_INIT[(][^,]*,\\s+([^)]*)[)]'	1520
'^GNU gdb [^\\d]*(\\d+)\\.(\\d)'	1580
'([^,(\\s]+[.]spacesaver[(][)])'	356
'[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'	126
'/[*]+(?:[^*]+|[*]+[^/*])*[*]+/'	1023
'/lib(64)?/(.+/)?lib[^/]+\\.so$'	1226
'/changeset(?:/([^/]+)(/.*)?)?$'	1258
'^[^ #]+\\s+(\\S+)\\s+\\S+\\s*$'	506
'^\\[([^:]+):[^\\[]+\\[([^:]+):'	1302
'^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'	902
'http://([^:/]+)(:(\\d+))?(/.*)'	1205
u'{{[^}]*(?:stubb|spire)[^}]*}}'	1100
'text/html; charset="?([^"]+)"?'	1181
'(\\[.{16,16}[^,)]*?),.*?\\]\\)'	436
'version[ \\t]+([^ \\t\\r\\n]+)'	1252
'(([^@]+)@)?([^:]+)(:([0-9]+))?'	1510
'(?P<user>[^:]+)(:?(?P<pswd>.*))'	1143
'(~|\\#[^/]+\\#|\\.orig|\\.rej)$'	1226
'(|.*/)applications/(?P<a>[^/]+)'	1247
'\\[\\[(https?://[^|\\]]*)\\]\\]'	138
'^java\\.cli\\.([^\\.]+)\\.(.+)$'	1463
'([.#])((?:[^ \\t\\.#]|\\.\\.)+)'	338
'"((?:\\\\"|[^"])+)"|([^ \\t"]+)'	813
'(\\<div[^\\>]+\\>)|(\\</div\\>)'	190
'revision[ \\t]+([^ \\t\\r\\n]+)'	1252
'value=[\\\'"]([^\\\'"]+)[\\\'"]'	966
'Site-class models:\\s*([^\\s]*)'	1302
'^GNU gdb [^\\d]*(\\d+)\\.(\\d+)'	1621
'[^\\s]*?[\'|"].*?[\'|"]|[^\\s]+'	560
'(<([a-z0-9\\:\\-_]+)\\s+[^>]+>)'	1326
'\\<%inherit file="([^"]+)" /\\>'	1340
'^(<([^ >]*)[^>]*>.*?</\\2>)\\s*'	1301
'.*=\\(([^)]+)\\) already exists.'	735
'<OutputType>([^"]*)</OutputType>'	504
'\\ssubroutine\\s(.+)\\([^()]*\\)'	531
'^.*\\s*host=\\s*([^\\s]+)\\s*.*$'	1520
'^([^\\t]+)\\t[^\\t]+\\t([^\\t]+)'	681
'([^:]*):(\\d+): LaTeX Error:(.*)'	31
'\\$\\(([^\\$]|\\$[^\\(])*?\\$\\)'	743
'id="__VIEWSTATE" value="([^"]*)"'	126
"''(?P<t>[^\\s']+( +[^\\s']+)*)''"	1247
'(id|driver|mac|drive)=([^,\\s]+)'	560
'^.*\\s*user=\\s*([^\\s]+)\\s*.*$'	1520
'([^:]*):(\\d+): (Emergency stop)'	31
'((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'	1249
'^Synset\\([\'"]([^\\)]*)[\'"]\\)'	1230
'^ 0  (?:.*!)?(?:void )?([^\\[]+)'	1007
'([^= ]+)=(?:"([^"]*)"|([^,]+)),?'	557
'\\s*"(([^"]|(\\\\"))*)(?<!\\\\)"'	276
'\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'	220
'~~(?P<t>[^\\s*]+( +[^\\s*]+)*)~~'	1247
',\\"sdURL\\"\\:\\"([^\\"]+?)\\",'	1181
'^([^}{]*?[^;,}{\\s])\\s*(?=\n|$)'	1025
'^([^\\[\\]]+|\\[[^\\[\\]]*\\])*$'	1248
'^.*\\s*port=\\s*([^\\s]+)\\s*.*$'	1520
'<tr[^>]*id\\s*=\\s*"task_(\\d+)"'	330
'^http://[^.]+\\.magnatune\\.com/'	110
'https?://[^/]*(/.*reset_key/\\S*)'	181
'\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'	1454
u'[^\\s"]*"[^"]*"[^\\s"]*|[^\\s"]+'	782
'\\.(?!\\\\(\\\\\\\\)*($|[^\\\\]))'	1248
'^([^-]+)-([^-]+).*\\.egg(-info)?$'	944
'^\\s*package\\s+([^\\s;]+)\\s*;.*'	885
'([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'	1495
'<[wc](?: [^>]*){0,1}>(.*?)</[wc]>'	1248
'([^\\s]*)\\s*(\t|  )\\s*([^\\s]*)'	1322
'^https?://github.com/[^/]+/[^/]+$'	305
'^\\s*\\$INCLUDE\\s*([^;\\s]*)\\s*'	1644
'^([^\\s\\.#]+\\.)*([^\\s\\.#]+)?$'	557
' color="#(?:6666CC|333366)"[^>]*>'	55
'^iqn\\.(\\d{4}-\\d{2})\\.([^:]+):'	548
'&lt;(http://[^\\s\'"\\]\\)]+)&gt;'	200
'\\[\\[[Ii]mage:([^.]*)(.*?)\\]\\]'	1454
'<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'	748
'("[^"]*"|0x[0-9A-Fa-f]{1,4}|\\d+)'	804
'\\${project_path:(?P<file>[^}]+)}'	626
'<field>((?:[^<]|<(?!/))*)</field>'	780
'^\\s*#\\s*include\\s*["<]([^>"]+)'	557
'([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'	8
'^-([a-z]*)\\|--([a-z]*) +([^ ].*)'	1618
'<img.+?src="(?P<filename>[^"]+?)"'	1513
'\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'	407
'(ns3::|::ns3::|)Ptr<([^>]+)>\\s*$'	1216
'<h\\d[^>]*>presenter notes</h\\d>'	310
u'Name(?:\\[([^]]+)\\])?\\s*=(.*)$'	782
'\\s*([^#]\\S+)\\s*=\\s*(\\S+)\\s*'	993
"(?mx) ([^';]* (?:'[^']*'[^';]*)*)"	619
'<[^>]* alt=[\'"]([^\'"]*)[\'"].*?>'	220
':ext:([^@]+@)?(?P<hostname>[^:/]+)'	1426
"''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"	1247
'<description>([^<]+)</description>'	1181
'<a href="(VideoPage.php\\?[^"]+)">'	1181
'(?P<name>[^:]+):(?P<value>[^,]*),?'	1067
'^(\\t*)START\\t----\\t([^\\t]+).*$'	560
'^(.+) \\(in ([^)]+)\\) \\((.+)\\)$'	1007
'http://([^/:]+)(?::(\\d+))?(/.*)?$'	1569
'^\\s*<(?:div|table)(?:\\s+[^>]+)?>'	1258
'\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\/'	498
'^#define PACKAGE_VERSION "([^"]*)"'	533
'^[./]*resolve[Uu]id/([^/]*)/?(.*)$'	988
'[ ]{0,3}\\[\\^([^\\]]*)\\]:\\s*(.*)'	1395
'<([wc](?: [^>]*){0,1}>)(.*?)</[wc]>'	1248
'<sync start="(\\d+)">([^<]*)</sync>'	1431
'(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'	356
"\\s*<?xml\\b.*\\bencoding='([^']+)'"	1248
'<tr[^>]*status\\s*=\\s*"not%20done"'	330
'\\s*<?xml\\b.*\\bencoding="([^"]+)"'	1248
'\\n\\s*[^!]\\s*<include_file=(.*?)>'	531
'\\[(.*?)\\][^\\:]+\\:\\s+(\\-?\\d+)'	1247
'.*<([^@]+)@[^@]+>\\s*|([^@]+)@[^@]+'	1258
'^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'	1143
'(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'	820
'<a [^>]*href="([^"]+)"[^>]*>.*?</a>'	1340
'<[^>]* term=[\'"]([^\'"]*)[\'"].*?>'	220
'^(.*[^a-z0-9\\n])?(chown|chmod) +.*'	1465
'<br />\\s*([^<]+)<br />\\s*([^<]+)<'	506
'(^|.*[^\\\\])(?P<obr>\\[)[^\\]]*\\Z'	866
'^\\s*description\\s*{(.*?)}[^\n]*\n'	1522
'<a href="(CoursePage.php\\?[^"]+)">'	1181
'\\A[^*]*\\* \\* \\*[^*]*\\* \\* \\*'	1401
'(?ims)<title[^>]*>(.*?)</title\\s*>'	539
'[-d]  (setuptools|distribute)-[^-]+-'	313
'(\\s*"float_value": -?\\d+)\\.[^\\d]'	775
'(^build|[^/]+\\.egg-info|.*.py[co]$)'	884
'<[^>]* title=[\'"]([^\'"]*)[\'"].*?>'	220
'<AssemblyName>([^"]*)</AssemblyName>'	504
'(?P<name>[^=]+)="(?P<value>[^"]*)" *'	1067
'\\$\\$qtLibraryTarget\\(([^\\)]+)\\)'	1587
'<img[^>]*src="(?P<url>http://[^"]*)"'	884
'(?P<word>[^\\s]*)\\s+(?P<count>\\d*)'	1139
'(?P<name>[^{]+)({(?P<attrs>[^}]+)})?'	1249
'(\\*\\*)(?=\\S)([^\\r]*?\\S[*_]*)\\1'	888
'<EmbeddedResource Include="([^"]*)">'	504
':(.+)!(.+)@.+ PRIVMSG ([^:]+) :(.+)$'	281
'require\\("citeproc_js\\.([^"]+)"\\)'	796
'^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'	1555
'\\b(\\w+)=(?:\'([^\']*)\'|"([^"]*)")'	1569
'<[^>]* label=[\'"]([^\'"]*)[\'"].*?>'	220
'/(raw-)?attachment/([^/]+)(?:/(.*))?$'	1258
'(?P<root>https?://[^/]+)(?P<path>/.*)'	560
'^{\\s*\\"([^\\"]+)\\",\\s*(\\S*)\\s*}'	1023
'^https?://[^/]*?(\\w+\\.\\w+)($|/.*$)'	305
'^(<=|>=|<|>|!=|==|~=)?\\s*([^\\s,]+)$'	1594
'([^\\r\\n]*)(?:\\r\\n|\\n\\r|\\n|\\r)'	813
'(/\\*([^*]|(\\*+[^*/]))*\\*+/)|(//.*)'	1630
'(|.*/)applications/(?P<appname>[^/]+)'	1247
"[^A-Za-z\\-0-9 $&\\.\\,:;/'\\!\\(\\)]"	190
'([^: \t\n]*)\\s*:\\s*(".*"|[^ \t\n]*)'	903
'\x00([^\x00]*libreadline[^\x00]*)\x00'	1258
'(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'	1247
'(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'	740
'^\\\\[a-zA-Z]+[ ]?|^\\\\[^a-zA-Z][ ]?'	899
'(/[\\w/]*)|([^/ ][^: ]*)(:(\\d+)){,1}'	897
'\\[\\[(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'<b_\\w+\\s+[^>]*?type="(?P<type>\\w+)"'	1248
'(?=[^a-zA-Z0-9_.\\/\\-\\x7F-\\xFF\\n])'	31
"File '([^\n]*)'.*?:creating '([^\n]*)'"	889
'\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'	1248
'http://www.slideshare.net/[^\\/]+/\\S*'	1247
'\\s+\\(disc (\\d+)(?::\\s+([^)]+))?\\)'	913
'(?<=\\()(?:[^()]+|\\([^)]+\\))*(?=\\))'	539
'^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'	31
'<em [^<>]*id="speed\\d+">([^<>]*)</em>'	1569
'lib/(python[^/]*)/(dist|site)-packages'	944
'id="__EVENTVALIDATION" value="([^"]*)"'	126
'(\\[\\"(?P<wikilink>[^\\]\\"]+)\\"\\])'	190
'^(.*[^a-z0-9\\n])?cp +.+ system/app/.*'	1465
'([^%]|^)\\\\makeindex(\\[([\\w]+)\\])?'	31
'^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'	560
'(?<![\\(\\[])(http://[^\\s\'"\\]\\)]+)'	200
'(<[^>]*?href=["\']|http://[^"\' \\t]+)'	245
"^(\\S+) == (u?'[^']*'|\\([0-9, ]+\\))$"	220
'((^|\\n)[^%]*?)\\\\begin\\{document\\}'	31
'\\(([^\\s()]+) ([^\\s()]+) [^\\s()]+\\)'	1248
'goog\\.require\\([\'"]([^\\)]+)[\'"]\\)'	168
'\\s*static ExternalReference ([^(]+)\\('	534
'<span class="c_addtime">([^<>]*)</span>'	1569
'(?i)filename="*(?P<filename>[^\\s"]*)"*'	329
'<meta name="mtv_an" content="([^"]+)"/>'	1181
'<em class="loadnum"[^<>]*>([^<>]*)</em>'	1569
'<[Tt]d class=AgendaText>([^<]+)</[Tt]d>'	126
'\\s*<entry><type>([^<]+)</type></entry>'	1087
'^(https?://)?(?P<host>[^:]+)(:[0-9]+)?$'	420
'^(([^\\s\\.#]+\\.)|\\.)*([^\\s\\.#]+)?$'	557
'<meta name="mtv_vt" content="([^"]+)"/>'	1181
'goog\\.provide\\([\'"]([^\\)]+)[\'"]\\)'	168
'--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'	1007
'\\<script [^>]*\\${portal_url}/([^"]*)"'	1377
'\\[\\[file:([^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'https?://bitbucket.org/([^/]+/[^/]+)/?$'	1025
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]]+)\\s*'	1248
'(%(\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])'	200
'jdbc:mysql:\\/\\/([^:]+):(\\d+)\\/(.+)$'	496
'^(.*[^a-z0-9\\n])?mount +.* *remount+.*'	1465
'\\s*<?([^@\\s]+\\@[a-zA-Z0-9-.]+)>?\\s*'	329
'\\s*Add\\(ExternalReference::([^(]+)\\('	534
'^([A-Z])/([^\\(]+)\\(([^\\)]+)\\): (.*)$'	1505
'--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'	1180
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+)\\]\\]'	1247
'^https?://bitbucket.org/([^/]+/[^/]+)/?$'	1025
'\\[\\[(ftp://[^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'	413
'\\*\\*(?P<t>[^\\s*]+( +[^\\s*]+)*)\\*\\*'	1247
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'	1248
'Resources_(?P<locale>[^\\.]+).properties'	1524
'(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'	623
'(?P<rule>(\\\\.|[^#])*)(?P<comment>#.*)?'	1248
'<pre\\s*[^>]*id="paste-debug-prints".*?>'	1050
'GNTP/([^ ]+) (-OK|-ERROR|-CALLBACK) NONE'	750
'@(\\w+)\\s([^#\n]*)(\\s+#\\s*([^\n]*)|$)'	1315
'<div class="context" id="(?P<id>[^"]+)">'	1158
'^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'	1094
'^(.*[^a-z0-9\\n])?am +start[^a-z0-9\\n].*'	1465
'date: ([^; ]*) ([^;]*);  author: ([^;]*);'	413
'\\$(?:([^\\$\\}\\{]+)|\\{([^\\$\\}]+)\\})'	557
'https?://github.com/([^/]+/[^/]+)/tags/?$'	1025
'<meta name="mtvn_uri" content="([^"]+)"/>'	1181
'https?://github.com/([^/]+/[^/]+)($|/.*$)'	1025
'(\'[^\']\'|[-=]+>|"[^"]+"|\'[^\']+\'|\\|)'	1248
'nofollow" class="[^"]+" href="(http.*?)">'	539
'^<div(?:\\s+class="([^"]+)")?>(.*)</div>$'	1258
'^def\\s+(?!(_|test))[^(]*\\(\\s*\\)\\s*:$'	787
'(^|\\s+|[^\\\\])@([a-zA-Z_][a-zA-Z0-9_]*)'	44
'^(?P<localpart>[^@]+)@(?P<domainpart>.+)?$'	826
'([^\\:])\\:([a-zA-Z_0-9]*)(\\s*)=\\>(\\s*)'	1025
'^(?!join|order|complement)([^\\:]+?):(.*)$'	1302
'^[ >]+ +(?P<name>[^ ]+) +(?P<value>[^ ]+)$'	439
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^/:#?]*)'	200
'reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	440
'(?:[^,\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	1025
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]]*)\\s*\\['	1248
'<[^>]*?id\\s*=\\s*("|\')(.*?)("|\')[^>]*?>'	719
'<meta name="description" content="([^"]*)"'	1181
'[ \\t]*([^<>\\s]+?)[ \\t]*<p="([^"]*"?)"/>'	1248
'((\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])(.*)'	200
"name='csrfmiddlewaretoken' value='([^']*)'"	665
'event-str ([^ ]+) ([^ ]+) ([^ ]+) ([0-9]+)'	1216
'(?<=\\n)\\.\\.\\s+[^:]+:\\s+(https?://.+)$'	1340
'/chrome/(?P<prefix>[^/]+)/+(?P<filename>.+)'	1258
'<meta property="og:video" content="([^"]*)"'	1181
'\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'	727
'[^A-Za-z0-9\\,\\.\\/\\;\\:\'"\\+\\-\\s\r\n]'	208
'\\[\\[include page="([^"]*?)"[^\\]]*?\\]\\]'	138
'^/lib/modules/(2\\.[23456]\\.[0-9]+[^/]*?)/'	1226
'^(.*[^a-z0-9\\n])?pm +install[^a-z0-9\\n].*'	1465
'^==== ([^#]+)#(\\d+) ==([AMD])== (.*) ====$'	1426
'(?P<nick>[^!].*)!(?P<ident>.*)@(?P<host>.*)'	1544
'(?P<nonterminal>(\\.|[^:])*)(:(?P<rule>.*))'	1248
'event-int ([^ ]+) ([^ ]+) ([0-9]+) ([0-9]+)'	1216
'\\s*([^\\\'"\\s{},=][^{},=]*?)\\s*([},=]|$)'	727
'^(?P<name>[^(]+)(?:\\((?P<type>[^)]+)\\))?$'	270
'/admin(?:/([^/]+)(?:/([^/]+)(?:/(.+))?)?)?$'	1258
'<meta property="og:image" content="([^"]*)"'	1181
'^/usr(?:/share)?/man/man[^/]+/(.+)\\.[1-9n]'	1226
'\\[\\[(https?://[^|\\]]*)\\|([^\\]]*)\\]\\]'	138
'^http://www.justin.tv/([a-zA-Z0-9_]+)[^/]*$'	200
'^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'	1247
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'	974
'^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'	542
'\\*\\*(?P<t>[^\\s\\*]+( +[^\\s\\*]+)*)\\*\\*'	1247
'name="base\\.version" value="([0-9.]+)[^"]*"'	1057
'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'	1023
'^\\s*\\d+\\s*(?P<reponame>[^\\s]+)\\s*.*:.*$'	1426
'\\A(?:\\[([^\\]]+)\\])?([^=]+)?(?:=(.*))?\\Z'	1571
'goog\\.provideAll\\s*\\(\\s*([^\\)]+)\\s*\\)'	1336
'[ \\t\\r\\n]*(?:(?:#[^\\n]*)?\\r?(?:$|\\n))?'	55
'(\n\\[\\[[a-z][a-z][\\w-]*:[^:\\]]+\\]\\])+$'	1454
'\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'	1495
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+)[\\\'"]?\\)'	1240
'goog\\.requireAll\\s*\\(\\s*([^\\)]+)\\s*\\)'	1336
'(?ims)<p[^>]*>.*?</p>|<li(?!n)[^>]*>.*?</li>'	539
'(?P<pid>\\d+)\\s+chdir\\("(?P<cwd>[^"]*)"\\)'	1170
'([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'	1076
'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*\\);'	413
'.*\\s+internal::(Bindable)?Matcher<([^>]+)>$'	1244
'^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'	506
'^AUTOTEST_FETCH_PACKAGE:([^:]*):([^:]*):(.*)$'	560
'\n(?P<level>=+) *(?P<title>[^\n]*)\\1 *(?=\n)'	1454
'(?P<pid>\\d+)\\s+stat\\("(?P<name>[^"]*)", .*'	1170
'https?://bitbucket.org/([^/]+/[^#/]+)/?#tags$'	1025
'^[-+]\\s+\\([^\\)]+\\)\\s+[A-Za-z0-9_]+[^;]*$'	1426
'<\\?xml version="[^"]*" encoding="([^"]*)"\\?>'	1093
'http://(?:www.)?theyworkforyou.com/[^\\s[\\]]+'	32
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^#]*[^#/])/?'	200
'(<(?:style|script)[^>]*>.+</(?:style|script)>)'	634
'^==== ([^\\s]+) \\(([^\\)]+)\\) ==([ACIMR])==$'	1426
'  <node .*? pos="(\\w+)".*? word="([^"]+)".*/>'	1248
'[a-zA-Z_]+(@[0-9]+)?|[0-9]+(\\.[0-9]+)?|[^ \n]'	533
'(-)?(?:"([^"]*)"|\\\'([^\\\']*)\\\'|([^\\s]+))'	1258
'([^=]+)=(\\w+(?:[.]\\w+)*):(\\w+(?:[.]\\w+)*)$'	313
'(\\w+(?:/\\w+)?|[-=]+>|"[^"]+"|\'[^\']+\'|\\|)'	1248
'(\\{[_a-zA-Z][^{}]*(?:\\{[^{}]*\\}[^{}]*)*\\})'	1268
'\\[\\[Category:(?:[^|\\]]*\\|)?([^\\]]+)\\]\\]'	1454
'(?P<pid>\\d+)\\s+mkdir\\("(?P<name>[^"]*)", .*'	1170
'https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$'	1025
'range ([^ ]+) ([^ ]+) ([^ ]+) ([0-9]+) ([0-9]+)'	1216
'(\\[(?P<link>[^\\]]+(.jpg|.jpeg|.gif|.png))\\])'	190
'(?P<pid>\\d+)\\s+execve\\("(?P<name>[^"]*)", .*'	1170
'[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'	1025
'^Item ([^ ]+) depends on missing item ([^ ]+).*'	534
'(?P<pid>\\d+)\\s+stat64\\("(?P<name>[^"]*)", .*'	1170
'^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,16})\\](.*)$'	1007
'Repairing file:  </td>\n<td width="102">([^<]+)'	650
'\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]*)\\s*(\\[|/)'	1248
'\\s*([+-]?)([^\\s\\(\\)<>"\\\'\\-=\\[\\],]+)\\s*'	1248
'(\\[(?P<link>[^\\] ]+)( )+(?P<txt>([^\\]])+)\\])'	190
'<th[^>]*>Tests failed</th>\n\\s*<td[^>]*>([^<]*)'	705
'^=item\\sB<(\\w+)>\\(([^)]+)\\)\n\n(?=(.*?)\n\n)'	387
'^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'	1491
'macro\\s+([a-zA-Z0-9_]+)\\s*\\(([^)]*)\\)\\s*\\n'	534
'\\<%namespace file="([^"]+)" import="[^"]+" /\\>'	1340
'type\\s*[(]([^)]*)[)]\\s+(?:is|==)\\s+(.*?float)'	356
'<th[^>]*>Tests passed</th>\n\\s*<td[^>]*>([^<]*)'	705
'^R(?P<reps>\\d+)?/(?P<intv>P.+)/(?P<end>[^P].*)$'	1571
'^(?P<project>[^.]+).(?P<period>[^.]+).runs.list$'	270
'((?P<user>[^:]+)(:(?P<pass>.+))?@)?(?P<server>.+)'	43
'^(.*) ?\\[([^ ]*) \\+(0x[0-9a-fA-F]{1,8})\\](.*)$'	1007
'const\\s+([a-zA-Z0-9_]+)\\s*=\\s*([^;\\n]+)[;\\n]'	534
'{(0x..),\\s*"([^"]*)"\\s*,\\s*"([^"]*)"[^}]*}\\s*'	107
'(?P<group>[^,]+?)[.](?P<name>.+?):(?P<value>\\d+)'	440
'^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'	1465
'([^ ]+)=(?:(?:"([^"]+)")|(?:\'([^"]+)\')|([^ >]+))'	102
'<\\s*span id\\="VERSION"[^>]*>(.*?)<\\s*/span\\s*>'	498
'^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'	3
'^#define ([^ ]+)\\(([^)]*)\\) *([^\\\\]*)\\\\?\\n$'	534
'^.*?([0-9/]{8}\\s+[0-9:]{8}):\\s+?([^:]+):\\s(.*)$'	1027
'<li class="next"><a href="([^"]+)">[^<>]*</a></li>'	1569
'^[^\\\\]+\\\\([^\\\\$]+)(\\$?\\\\)?([^\\\\$]+)\\$?$'	225
'^(?:.:)?[^:]+:(\\d+): \\[([EWRCI]+)[^\\]]*\\] (.*)$'	640
"<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"	55
'^([^:]+):(\\d+): (\\w+): (.*) is not documented\\.$'	1023
'https?://bitbucket.org/([^/]+/[^/]+)/src/([^/]+)/?$'	1025
'(?s)(?<=\\n)([|][|].*?[|][|])(?=\\n[^|]|\\n[|][^|])'	138
'^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'	1571
'<input type="hidden" name="crumb" value="([^"]*)" />'	541
'^.*(HEAD|GET|POST|PATCH|PUT|DELETE)\\s+(/[^ \n]*).*$'	1311
'<div class="cover-art">\\s*<img src="(?P<url>[^"]+)"'	327
'^START WAL LOCATION: [^\\s]+ \\(file ([0-9A-Z]+)\\)$'	1520
'<div id="result"><div style="padding:0.6em;">([^<]*)'	1248
'<(ENAMEX|NUMEX|TIMEX)\\s+[^>]*?TYPE="(?P<type>\\w+)"'	1488
'invalid input syntax for type (cidr|inet): "([^"]+)"'	735
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*\\\'[^\\\']*\\\''	974
'([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'	498
'<![ \r\n\t]*(--([^\\-]|[\r\n]|-[^\\-])*--[ \r\n\t]*)>'	347
'^\\s*((?P<title>[^\\s]*?)\\s+)?(?P<tags>:[\\w_:@]+:)$'	624
'\\s*([bB]asic|[dD]igest)\\s+(?:[\\w]+="[^"]+",?\\s*)?'	1076
'^(?:Doctest: )?([\\w\\.]+) \\.\\.\\. \\[([^\\]]+)\\]$'	122
'^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'	1571
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'	873
'^R(?P<reps>\\d+)/(?P<start>[^P][^/]*)/(?P<end>[^P].*)$'	1571
'(<[\\s]*script[^>]*>[\\s\\S]*?<\\/[\\s]*script[\\s]*>)'	168
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'	873
'summary\\.php\\?cid=([A-Z0-9]+)&cycle=\\d+\\" ?>([^<]+)'	55
'(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'	1170
'<meta property="og:title" content="(?P<title>[^"]*)" />'	1181
'\\A(?:(\\w+)-)?(\\w+)(?:/([^\\@/]+))?(?:@([^\\@/]+))?\\Z'	1571
'^\\s*_*version\\s*_*\\s*=\\s*["\\\']([^"\\\']+)["\\\'].*'	1621
'(?i)addVariable\\(\\"video\\"\\s*,\\s*\\"([^\\"]*)\\"\\)'	386
'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'	1300
"[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))"	1247
'(?m)(?s).*<terms.*<locale[^>]*xml:lang="([^"]+)"[^>]*>.*'	796
'lib/python[^/]+/(?:dist|site)-packages/easy-install.pth$'	944
'ed2k://\\|file\\|([^|]*)\\|(\\d+)\\|([a-fA-F0-9]{32})\\|'	1569
'^{(?P<w>[^()[\\]][^()[\\]]*?)\\((?P<n>[^()\\[\\]]+)\\)}$'	1247
".*thumbnail:\\s*'(http://[^/]+/ThumbnailServer2[^']+)'.*"	200
'[^a-zA-Z\xc3\xa6\xc3\xb8\xc3\xa5\xc3\x86\xc3\x98\xc3\x85]'	1488
'### f90: Note: LD_RUN_PATH\\s*= (?P<lib_paths>[^\\s.]*).*'	356
"^\\s*synchronous_standby_names\\s*=\\s*'([^']*)'\\s*#?.*$"	1520
u'(?i)\\/*((@[^\\s:]*)|(\u56de\u590d@[^\\s:]*:))[:\\s\\/]*'	1139
'(?ims)class=.redirectText.>\\s*<a\\s*href=./wiki/([^"/]+)'	539
'^[^\'"]*[\'"]([^\'"]*)[\'"]\\s*:\\s*[\'"]([^\'"]*)[\'"].*$'	1247
'^(?P<key>[^ =]+) *= *[\\"\']?(?P<value>[^\\"\']*)[\\"\']?$'	826
'^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'	506
'property="(video:release_date|og:title)" content="([^"]*)"'	1469
'<\\s*a id\\="CURRENT"\\s*href="(.*?)"[^>]*>.*?<\\s*/a\\s*>'	498
'\\<link [^>]*rel="stylesheet"[^>]*\\${portal_url}/([^"]*)"'	1377
'<th[^>]*>Elapsed time \\(sec\\)</th>\n\\s*<td[^>]*>([^<]*)'	705
'Mozilla (Firefox|Iceweasel|Fennec)\\b[^ ]* ((\\d+)\\.\\S*)'	1007
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+[\\?\\#\\d\\w]*)[\\\'"]?\\)'	1240
'(?P<pid>\\d+)\\s+open\\("(?P<name>[^"]*)", (?P<mode>[^,)]*)'	1170
'(?P<key>\\w+)=(?P<value>[^\\s]+)\\s*(?:\\((?P<data>.*)\\))*'	205
'(\\[\\"(?P<wikilink>([^\\]\\"]+))\\" (?P<txt>([^\\]]+))\\])'	190
'(<span class="k">[^<>]+</span>\\s*)<br />(<span class="k">)'	1363
'((^|\\n)[^%]*?)(\\\\input|\\\\include)\\{([\\w /\\.\\-]+)\\}'	31
'([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_:]+)\\s*\\([^)]*\\){0,1}\\s*'	498
'(?P<aname>[^\\s=]+)\\s*(=\\s*(?P<qt>"?)(?P<aval>.+)(?P=qt))?'	1249
'ID=[^,]+,?|Number=[^,]+,?|Type=[^,]+,?|Description="[^"]+",?'	1412
'(?i)addVariable\\(\\"sequence\\"\\s*,\\s*\\"([^\\"]+?)\\"\\)'	1181
'^\\[{2}(?P<uri>[^][]*)(\\]\\[(?P<description>[^][]*))?\\]{2}'	624
'(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'	1491
'[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*[^ \\t\\n\\r\\f\\v"\\\']*'	974
'self->operator(\\+|-|\\*|/|<|>=|==|\\[\\])\\s*\\(([^\\)]*)\\)'	357
'<link\\s*rel=[\'"]stylesheet[\'"]\\s*href=[\'"]([^=>]*)[\'"]>'	1007
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=]?)\\s*(?P<value>.*)$'	1108
'==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'	1007
'(?:http://)?(?:www\\.)?metacafe\\.com/watch/([^/]+)/([^/]+)/.*'	386
'^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'	1226
'^(?P<csid>\\d+) (?P<user>[^\\s]+) (?P<revid>\\d+) (?P<file>.*)$'	1426
'SMfunctions\\[\\d+\\] = Array \\("(?:public )?([^,]+)",".+"\\);'	1555
'^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'	506
'"(?P<value>[^@&]*)"(?:@(?P<lang>[^&]*))?(?:&<(?P<datatype>.*)>)?'	55
'\\s*(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'\\s?(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
"Couldn't find index page for '[^']+' \\(maybe misspelled\\?\\)\n"	313
'([^@#:]*)[@:]([^#:]+)?(?::(\\d+(?:-\\d+)?(?:,\\d+(?:-\\d+)?)*))?'	1258
'(ATTRS?|ENV|TEST){([a-zA-Z0-9/_.*%-]+)}\\s*(?:=|!)=\\s*"([^"]*)"$'	722
'code-creation,([^,]+),(0x[a-f0-9]+),(\\d+),\\"(.*)\\"(?:,(\\d+))?'	464
'(?P<wikilink>(^|(?<=[^A-Za-z]))[!]?[A-Z][a-z/]+(?:[A-Z][a-z/]+)+)'	1258
'(\\w+(?:/\\w+)?|\\[[01]?\\.\\d+\\]|[-=]+>|"[^"]+"|\'[^\']+\'|\\|)'	1248
'\\<coordinates\\>(?P<la>[^,]*),(?P<lo>[^,]*).*?\\</coordinates\\>'	732
'^(?P<scheme>http|https|HTTP|HTTPS)\\://(?P<host>[^/]*)(?P<uri>.*)'	1247
'[^ ]+ \\(([0-9]+\\.[0-9]+\\.[0-9]+)-[0-9]+\\) [^ ]+; urgency=[^ ]+'	735
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'	1247
'(?P<all>\\{\\{\\s*include\\s+[\'"](?P<name>[^\'"]*)[\'"]\\s*\\}\\})'	1247
'^\\w+Attempt.*?TASK_STATUS="FAILED".*?ERROR="(?P<first_line>[^"]*)$'	542
'([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'	1051
'((^|\\n)[^%]*?)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w,\\-]+)\\}'	31
'\xd7\xaa\xd7\x90\xd7\xa8\xd7\x99\xd7\x9a: </td>[^<]*<[^>]*>([^<]*)<'	126
u'[^0-9](?P<year>[0-9]{4})(?P<month>[0-9]{2})(?P<day>[0-9]{2})[^0-9]'	1469
'(?im)<span class="owner[^\\"]+?">[^<]+?<a [^>]+?>([^<]+?)</a></span>'	1181
'[^0-9a-zA-Z\xc3\xa6\xc3\xb8\xc3\xa5\xc3\x86\xc3\x98\xc3\x85.?!\\n\\r]'	1488
'A \\/tags\\/([^\\s]+) \\(from \\/branches\\/bleeding_edge\\:(\\d+)\\)'	534
'color ([^ ]+) #([a-fA-F0-9]{2,2})([a-fA-F0-9]{2,2})([a-fA-F0-9]{2,2})'	1216
'(?P<type>[^:]*)://((?P<user>.+)@)?(?P<location>[^;]+)(;(?P<parm>.*))?'	1143
'(\\$[\\$\\(\\)]|\\$[_a-zA-Z][\\.\\w]*|\\${[^}]*}|\\s+|[^\\s\\$]+|\\$)'	743
'(ATTR|ENV|IMPORT|RUN){([a-zA-Z0-9/_.*%-]+)}\\s*(=|\\+=)\\s*"([^"]*)"$'	722
' ( " ( "" | [^"]+ )* " ) | ( [a-z_][a-z0-9_]* ) | [.] | (?P<err> .)  '	1520
'<(?P<tag>(input|meta|link|hr|br|img|param))(?P<any>[^\\>]*)\\s*(?<!/)>'	1247
'(?P<pbs>\\\\*)(?P<escSeq>(?P<inv>[\\^])?\\\\(?P<pP>[pP]){(?P<id>[^}]*)})'	866
'(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'	31
'<MEMBER name="\\??([^"]+)" wn="([^"]*)"[^>]+>|<VNSUBCLASS ID="([^"]+)"/?>'	1248
'(www\\.(?!\\.)|[a-z][a-z0-9+.-]*://)[^\\s<>\'\\"]+[^!,\\.\\s<>\\)\'\\"\\]]'	18
'[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'	681
'\\+?"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"|\\[[^]\\\\]*(?:\\\\.[^]\\\\]*)*\\]|\\S+'	539
'\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'	407
'^http://(?:www.)?(.*?)(?:\\:[0-9]+)?/.*/([0-9B][0-9A-Z]{9})(?:[^0-9A-Z]|$)'	913
'<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0">(.+?)</a>'	1150
'([A-Za-z0-9_*&]+\\s+)+([&*~A-Za-z0-9_:]+)\\s*\\([^)]*\\)\\s*(const)*\\s*\\{'	498
'(?:string:\\$\\{portal_url\\}/([^."]+.js)")|(?:\\<link href="([^."]*.css)")'	1377
'\xd7\xa9\xd7\x9d \xd7\x94\xd7\x97\xd7\x95\xd7\xa7: </td>[^<]*<[^>]*>([^<]*)<'	126
'(?P<file>[-/\\.\\w<>]+):((?P<line>\\d+):)?(\\d+:)? warning: (?P<msg>[^ ].*)$'	635
'^\\s+(?P<address>[0-9a-fA-F]+)\\s+(?P<symbol>.*)\\s+\\((?P<module>[^)]*)\\)$'	1576
'(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'	386
'/lib/modules/[^/]+/updates/DD/(?P<moduledir>.*/)?(?P<modulename>[^/.]+).ko.*'	1051
'[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'	681
'(?:[=!]=|is(?:\\s+not)?)\\s*type(?:s.\\w+Type|\\s*\\(\\s*([^)]*[^ )])\\s*\\))'	1025
"'?([^']*)'?!((\\$([A-Za-z]+))?\\$([0-9]+)(:(\\$([A-Za-z]+))?(\\$([0-9]+)))?)$"	729
'(?P<protocol>[^\\s:/]+)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<id>\\S*)'	1184
'Release (?P<release>\\w+).*\\(HW=(?P<radio>\\d+):(?P<bb>\\d+)(?P<var>[^)]*)\\)'	1626
'<span id="clip-date" style="display:none">[^:]*: (.*?)( \\([^\\(]*\\))?</span>'	1181
'\\b(?P<name>\\S+?)/(?P<version>[^\\(\\s]+)(?P<default>\\(default\\))?(?:\\s|$)'	1384
'\\s*\\[\\s*(\\d*)\\s*:\\s*(\\d*)\\s*\\]\\s*"([^"]+)"\\s*:\\s*"([^"]+)"\\s*;\\s*'	1631
'(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'	498
'([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	1087
'[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'	1247
'\\.\\.\\. ([^#]+)#(\\d+) (add|edit|delete|integrate|branch|move/add|move/delete)'	1218
'((?P<h>[0-9]+))([^0-9 ]+(?P<m>[0-9 ]+))?([^0-9ap ]+(?P<s>[0-9]*))?((?P<d>[ap]m))?'	1247
'\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center) +(?P<w>\\d+px)\\]\\]'	1247
'\\s*([a-zA-Z_][-.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n<>]*))?'	413
u'("""[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*""")|("[^"\\\\]*(?:\\\\.[^"\\\\]*)*")'	55
'^(?P<user>[^:]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?$'	1247
'^class\\s*(.*_EXPORT|\\s*) (vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s*(vtk[^ \n\\{]*)'	557
'^\\s*vtkType(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*;'	557
'(\'[^\']*\'|"[^"]*"|//?|\\(\\)|==?|[/.*\\[\\]\\(\\)@])|([^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1621
'<[\\s]*script(?P<attributes>[^>]*)>[\\s]*(?P<data>[\\s\\S]*?)<\\/[\\s]*script[\\s]*>'	168
'\\s*[ur]{0,2}(?:"""[\\s\\S]*?"""|"[^"\n]+?"|\'\'\'[\\s\\S]*?\'\'\'|\'[^\'\n]+?\')\\s*'	1248
u'("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s=]+)'	1415
'\n^\ncreate \\s+ (?: or \\s+ replace \\s+ )?\nfunction ( [^(]+ )\n[(] ( [^)]* ) [)]\n'	1520
u'    geom = models.PolygonField\\(([^\\)])*\\)\\n    objects = models.GeoManager\\(\\)'	1158
'(.*\\s*)(<terms>)(\\s*\n\\s*)(<locale [^>]+>)(.*)(</locale>)(\\s*\n\\s*)(</terms>)(.*)'	796
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^\\s"\\\'=<>`]*))?'	1580
'^class(\\s+[^\\s]*_EXPORT)?\\s+(vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s+(vtk[^ \n\\{]*)'	557
'([^-_a-zA-Z0-9!@#%&=,/\'";:~`\\$\\^\\*\\(\\)\\+\\[\\]\\.\\{\\}\\|\\?\\<\\>\\]+|[^\\s]+)'	1612
'(\\w\\w:\\w\\w.\\w) "[^"]+ \\[\\w{4}\\]" "[^"]+ \\[(\\w{4})\\]" "[^"]+ \\[(\\w{4})\\].*'	1501
'<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'	1488
'^.*: \\[GC (?P<start_size>[0-9]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'	1184
'^(([^:/?#]+):)?(//(([^:]+)(:(.+))?@)?([^/?#:]*)(:([0-9]+))?)?([^?#]*)(\\?([^#]*))?(#(.*))?'	826
'^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'	1024
'(?<!\\w|\\<|/|:)/[^\\s/]([^/]*[^\\s/])?/(?!\\w|/|:)|(?<!\\w)_[^\\s_]([^_]*[^\\s_])?_(?!\\w)'	18
'^class ([^,]*), addr (\\w\\w:\\w\\w.\\w+), pci id (\\w{4}:\\w{4}) \\(sub (\\w{4}:\\w{4})\\)'	1501
'[ \t\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\n]*=[ \t\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[^ \\t\\n]*))?'	413
'(\\s*DRI_CONF_ENUM\\s*\\([^,]+,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'	533
'^.*([^A-Za-z0-9_]()\\s*\\(|vtkGet.*Macro\\s*\\(\\s*()\\s*,|vtkSet.*Macro\\s*\\(\\s*()\\s*,).*$'	557
'^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'	557
'<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'	1409
'(?P<name>[^\\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?'	1122
'^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'	1463
'(?P<line>([^"]*["][^"]*["][^"!]*|[^\\\']*\\\'[^\\\']*\\\'[^\\\'!]*|[^!\\\'"]*))!{1}(?P<rest>.*)'	356
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+)$'	1247
'/CVS/[^/]+$|/\\.(bzr|cvs|git|hg)ignore$|/\\.hgtags$|/\\.(bzr|git|hg|svn)/|/(\\.arch-ids|{arch})/'	1226
'\\s*(((if|while|else\\s*(if)?|for(each)?|switch|declare)\\s*\\(.*\\)[^{:;]*)|(do\\s*[^\\({:;]*))'	407
'(?:<param name="movie" value="|var url = ")(http://media.mtvnservices.com/([^"]*episode.*?:.*?))"'	1181
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<path>[^\\?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'%[^0-9A-Fa-f]{2}|%[^0-9A-Fa-f][0-9A-Fa-f]|%[0-9A-Fa-f][^0-9A-Fa-f]|%$|%[0-9A-Fa-f]$|%[^0-9A-Fa-f]$'	1247
'<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0"><img\\s* src="(.*?)" alt="(.*?)"'	1150
'Release (?P<release>\\w+).*\\(BB=(?P<bb>[a-zA-Z0-9:]+),RF=(?P<radio>[a-zA-Z0-9:]+)(?P<var>[^)]*)\\)'	1626
'\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x99\xd7\xa9\xd7\x99\xd7\x91\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<'	126
'\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x94\xd7\xa6\xd7\x91\xd7\xa2\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<'	126
'(?P<source_filename>.+)_(?P<x>\\d+)x(?P<y>\\d+)(?:_(?P<options>\\w+))?_q(?P<quality>\\d+)(?:.[^.]+)?$'	248
'(ACTION|DEVPATH|KERNELS?|NAME|SYMLINK|SUBSYSTEMS?|DRIVERS?|TAG|RESULT|TEST)\\s*(?:=|!)=\\s*"([^"]*)"$'	722
'((?P<protocol>[^:]+)://)?((?P<username>[^:]+)(:(?P<password>.+))?@)?(?P<server>[^/]+)(/(?P<mailbox>.+))?$'	43
'((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'	1025
'^{[^\\.]+\\.[^\\.]+(\\.(lt|gt|le|ge|eq|ne|contains|startswith|year|month|day|hour|minute|second))?(\\.not)?}$'	1247
'(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'	1122
'^.*: \\[GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'((?<=[\\\'"\\s/])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?(?:\\s|/(?!>))*'	1580
u'(Traceback \\(most recent call last\\):\\n(?:  File "[^"\\n]+", line \\d+, in \\w+\\n(?:    .+\\n)?)+\\S.*\\n)'	737
'(?P<prefix>^[\\s]*)(?P<main>([\\*\\s]+(html|body)\\s+)?[a-zA-Z_\\.,#]+[\\sa-zA-Z_\\.,#\\{:]*)(?P<suffix>[^;]+)$'	31
'(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'	32
'^.*VariadicOperatorMatcherFunc\\s*<\\s*([^,]+),\\s*([^\\s>]+)\\s*>\\s*\n              ([a-zA-Z]*)\\s*=\\s*{.*};$'	1244
"<link rel=\\'image_src\\' href=\\'(http://is[0-9].myvideo\\.de/de/movie[0-9]+/[a-f0-9]+)/thumbs/[^.]+\\.jpg\\' />"	1181
'(NAME|SYMLINK|OWNER|GROUP|MODE|TAG|PROGRAM|RUN|LABEL|GOTO|WAIT_FOR|OPTIONS|IMPORT)\\s*(?:\\+=|:=|=)\\s*"([^"]*)"$'	722
'(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'	873
'^.*: \\[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'	778
'((<property\\s+name="(?P<name>[^>]+)">(?P<text>.+?)</property>)|(?P<display><display\\s+call="(?P<command>[^"]+)">))'	43
'(|__doc__\\s*=(\\s*|\\s*\\\\\\s*\\n))("""([^"]*)"""|\\\'\\\'\\\'([^\\\']*)\\\'\\\'\\\'|"([^"]*)"|\\\'([^\\\']*)\\\')'	602
"(cimport +([0-9a-zA-Z_.]+)\\b)|(from +([0-9a-zA-Z_.]+) +cimport)|(include +'([^']+)')|(cdef +extern +from +'([^']+)')"	1621
'[ \t\r\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\r\n]*=[ \t\r\n]*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./:+*%?!\\(\\)_#=~]*))?'	1076
'(?:http://)?video\\.google\\.(?:com(?:\\.au)?|co\\.(?:uk|jp|kr|cr)|ca|de|es|fr|it|nl|pl)/videoplay\\?docid=([^\\&]+).*'	386
'(?P<rtn>\\S+)\\s+(?P<fname>[^\\s\\(\\){}]+({[^{}]*})?)\\s*\\((?P<args>(({[^{}]*})+|(\\([^\\(\\)]*\\))+|[^\\(\\)]+)*)\\)'	1249
'^<([\\w\\-]+(?:\\:[\\w\\-]+)?)((?:\\s+[\\w\\-]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	407
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?(?P<urlargs>.*))?$'	1247
'(\\n|\\n__doc__\\s*=(\\s*|\\s*\\\\\\s*\\n))("""([^"]*)"""|\\\'\\\'\\\'([^\\\']*)\\\'\\\'\\\'|"([^"]*)"|\\\'([^\\\']*)\\\')'	602
'(?P<protocol>PYRONAME|PYRONAMESSL)://(((?P<hostname>[^\\s:]+):(?P<port>\\d+)/)|((?P<onlyhostname>[^\\s:]+)/))?(?P<name>\\S*)'	1184
'\\s*\n      <table[^>]*>\\s*\n        ((?:<tr[^>]*>)?\n          (.*?)\n        (?:</tr>)?)\\s*\n      </table>\\s*$\n      '	1258
'^<(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*\\/?\\s*>'	1025
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$'	1247
'^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'	1054
'^! (((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)(/(3[12]|[12]?[0-9])))[\\t\\s]+([^\\t]+)$'	735
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+?)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'<(\\/?)(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*(\\/?)\\s*>'	1025
'^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\\?set_encoding=(?P<charset>\\w+))?$'	1247
'//\\s?[\\-]*\\s(?P<desc>.*?)\\*/\\W*?struct\\s(?:ASSIMP_API\\s)?(?P<name>[a-z][a-z0-9_]\\w+\\b)[^{]*?\\{(?P<code>.*?)\\}\\s*(PACK_STRUCT)?;'	706
'<tr>\\s*<td><a href="lookup2\\.php\\?strID=(C\\d+)">[^<]+</a>\\s*</td><td>\\s*<a href="/politicians/summary\\.php\\?cid=(N\\d+)&cycle=2008">'	55
'.*AST_TYPE_MATCHER\\(\n                       \\s*([^\\s,]+\\s*),\n                       \\s*([^\\s,]+\\s*)\n                     \\)\\s*;\\s*$'	1244
'^-(?P<perms>[^\\s]+)\\s+(?P<user>[^\\s]+)\\s+(?P<group>[^\\s]+)\\s+(?P<size>[^\\s]+)\\s+(?P<date>[^\\s]+)\\s+(?P<time>[^\\s]+)\\s+(?P<filename>[^\\s]+)$'	1007
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	1055
'(?P<comment>/\\*\\*[^{}]*?\\*/)?\\s*message\\s*{\\s*(?P<type>\\w*)\\s*,\\s*(?P<subtype>\\w*)\\s*,\\s*(?P<subtypecode>\\w*)\\s*,\\s*(?P<datatype>\\w*)\\s*}\\s*;\\s*'	1522
'^(optimized.)?group(?P<year>[0-9]{2}).(?P<group>[^.]+).mc(?P<prodyear>[0-9]{2})[_]?(?P<energy>[0-9]{1,2})(TeV)?.(?P<run>[0-9]+).(?P<name>).(?P<tag>[^.]+).(?P<suffix>.+)$'	270
'^Line (?P<line>\\d+) of "(?P<filename>[\\w\\\\/\\.\\-+:]*)" starts at address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+> and ends at 0x[0-9a-f]+ <(?P<symend>[^+]+)(\\+\\d+)?>.'	108
'(?P<remote_ip>[^ ]+) (?P<user>[^ ]+) (?P<user2>[^ ]+) \\[(?P<date>[^\\]]+)\\] "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+)" (?P<init_retcode>[^ ]+) (?P<size>[^ ]+)'	778
'\n    (?:\'[^\'\\n\\r]*\')+|\n    <=|>=|!=|=|<|>|\n    :\\w+|\n    ,|\n    \\*|\n    -?\\d+(?:\\.\\d+)?|\n    \\w+(?:\\.\\w+)*|\n    (?:"[^"\\s]+")+|\n    \\(|\\)|\n    \\S+\n    '	1495
'.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'	1244
'(?P<indent>^\\s*)(?P<visibility>(final|abstract)?\\s?(public|private|protected)?\\s?(static)?\\s*)(?P<entity>(function|class|interface)\\s+)(?P<name>[^$]+[&a-zA-Z0-9_]+)(?P<args>.*$)'	31
'^(?P<remote_ip>[^ ]+) (?P<http_user>[^ ]+) (?P<http_user2>[^ ]+) (?P<req_date>[^ ]+) (?P<timezone>[^ ]+) "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+) (?P<init_retcode>[^ ]+)'	778
'^(?P<remote_ip>[^ ]+) (?P<http_user>[^ ]+) (?P<http_user2>[^ ]+) \\[(?P<req_date>[^ ]+) (?P<timezone>[^ ]+) "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+) (?P<init_retcode>[^ ]+)'	778
'(?x)\n        \\\\.           |  # Backslashed character\n        \\(\\?P<[^>]*>  |  # Named group\n        \\(\\?          |  # Extension group\n        \\(               # Grouping parenthesis'	1248
'\n        (?:^[^ ].*\\n                       # non-blank line\n            (?:[ ]*\\n |                    # blank line or\n               [ ]+.*\\n)*)                 #   indented line\n        '	1248
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	557
'\\[(?P<escapeopen>\\[?)(?P<name>[\\w\\d\\_-]+)\\b(?P<arguments>[^\\]\\/]*(?:\\/(?!\\])[^\\]\\/]*)*?)(?:(?P<selfclosing>\\/)\\]|\\](?:(?P<content>[^\\[]*(?:\\[(?!\\/(?P=name)\\])[^\\[]*)*)\\[\\/(?P=name)\\])?)(?P<escapeclose>\\]?)'	934
'.*AST_TYPE(LOC)?_TRAVERSE_MATCHER\\(\n                       \\s*([^\\s,]+\\s*),\n                       \\s*(?:[^\\s,]+\\s*),\n                       \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                     \\)\\s*;\\s*$'	1244
'^/(?P<region>[^/]+)/          # region name\n                         (?P<x>\\d+)/                 # X position\n                         (?P<y>\\d+)/                 # Y position\n                         (?P<z>\\d+)                  # Z position\n                    '	926
'^ ([\\w.]+\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	898
'^ ([\\w.]*\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	1551
'^(?P<server_name>[^ ]+) (?P<local_ip>[^ ]+) (?P<remote_ip>[^ ]+) (?P<user>[^ ]+) (?P<date>[^ ]+) (?P<conn_status>[^ ]+) (?P<init_retcode>[^ ]+) (?P<final_retcode>[^ ]+) (?P<size>[^ ]+) (?P<req_time>[^ ]+) (?P<cookie>[^ ]+) "(?P<referrer>[^"]+)" "(?P<request>[^"]+)" "(?P<user_agent>[^"]+)" (?P<pid>[^ ]+)'	778
'\n        [^<]*\n        (\n          ((<!--.*?-->)                         |  # comment\n           (<![CDATA[.*?]])                     |  # raw character data\n           (<!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>) |  # doctype decl\n           (<[^>]*>))                              # tag or PI\n          [^<]*)*\n        \\Z'	1248
'[^#]*\\s+\\bdo\\b(\\s*|(\\s+\\|.+\\|\\s*))|\\s*(\\bif\\b\\s+.*|\\belsif\\b.*|\\belse\\b.*|\\bdo\\b(\\s*|\\s+.*)|\\bcase\\b\\s+.*|\\bwhen\\b\\s+.*|\\bwhile\\b\\s+.*|\\bfor\\b\\s+.*|\\buntil\\b\\s+.*|\\bloop\\b\\s+.*|\\bdef\\b\\s+.*|\\bclass\\b\\s+.*|\\bmodule\\b\\s+.*|\\bbegin\\b.*|\\bunless\\b\\s+.*|\\brescue\\b.*|\\bensure\\b.*)+'	407
'^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'	926
'^\\s*AST_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\\s*AST_MATCHER_FUNCTION(_P)?(.?)(?:_OVERLOAD)?\\(\n                       (?:\\s*([^\\s,]+)\\s*,)?\n                          \\s*([^\\s,]+)\\s*\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'	1244
'\\s*<DOC>\\s*\n     (\\s*(<DOCID>\\s*(?P<docid>.+?)\\s*</DOCID>|\n           <STORYID\\s+[^>]*?>\\s*.+?\\s*</STORYID>|      \n           <SLUG\\s+[^>]*?>\\s*.+?\\s*</SLUG>|          \n           <DATE>\\s*(?P<date>.+?)\\s*</DATE>|         \n           <NWORDS>\\s*.+?\\s*</NWORDS>|                    \n           <PREAMBLE>\\s*.+?\\s*</PREAMBLE>)\\s*)*\n     <TEXT>\\s*(?P<text>.+?)\\s*</TEXT>\\s*(<TRAILER>\\s*(?P<trailer>.+?)\\s*</TRAILER>\\s*)?</DOC>\\s*'	1488
'<!-- \\*\\*\\* Reference number \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(<[BI]>)?(.*?)</FONT>.*?<!-- \\*\\*\\* Motion title \\*\\*\\* -->.*?<A HREF="(.*?)" TARGET="_parent">\\s*<font face="arial,helvetica" size=2>(?:<[BI]>)?([^<]*?)</font></A>\\s*</TD>\\s*<!-- \\*\\*\\* Signatures -->.*?(?:<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d+) &nbsp;&nbsp;</font>\\s*)?</TD>\\s*<!-- \\*\\*\\* Motion date \\*\\*\\* -->.*?<font face="arial,helvetica" size=2>(?:<[BI]>)?(\\d\\d)\\.(\\d\\d)\\.(\\d\\d)</FONT>(?s)'	32
"((?<=\\()[A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|([A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)|\\bmailto:\\S*[^\\s\\W]|\\b\\S+@\\S+\\.\\S*[^\\s\\W]|((?<=\\()(www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|((www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)"	18
'\n        # Include these so we can skip them:\n        (?P<COMMENT>        <!--.*?-->                          )|\n        (?P<CDATA>          <![CDATA[.*?]]>                     )|\n        (?P<PI>             <\\?.*?\\?>                           )|\n        (?P<DOCTYPE>        <!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>  )|\n        # These are the ones we actually care about:\n        (?P<EMPTY_ELT_TAG>  <\\s*[^>/\\?!\\s][^>]*/\\s*>            )|\n        (?P<START_TAG>      <\\s*[^>/\\?!\\s][^>]*>                )|\n        (?P<END_TAG>        <\\s*/[^>/\\?!\\s][^>]*>               )'	1248
'\n                 (?x)( # verbose identify URLs within text\n     (http|ftp|gopher) # make sure we find a resource type\n                   :// # ...needs to be followed by colon-slash-slash\n        (\\w+[:.]?){2,} # at least two domain groups, e.g. (gnosis.)(cx)\n                  (/?| # could be just the domain name (maybe w/ slash)\n            [^ \\n\\r"]+ # or stuff then space, newline, tab, quote\n                [\\w/]) # resource name ends in alphanumeric or slash\n     (?=[\\s\\.,>)\'"\\]]) # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'<!-- Ref -->\\s*<TD WIDTH=14>[^C]*?(Closed)?[^C]*?</TD>\\s*<TD ALIGN="CENTER" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">\\s*<B>(.*?)</B>\\s*</FONT>\\s*</TD>\\s*<!-- Motion Title -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT COLOR="#0000DD">\\s*<A HREF="(/weblink/html/motion.html/ref=.*?)" TARGET="_top">\\s*(.*?)</A>\\s*</FONT>\\s*</TD>\\s*<!-- Sponsor -->\\s*<TD ALIGN="LEFT" VALIGN="TOP">\\s*<A HREF="/weblink/html/member.html/mem=.*?" TARGET="_top" >\\s*<font face="arial,helvetica" size=2>.*?/.*?</A>\\s*</TD>\\s*<!-- Count of signatures -->\\s*<TD ALIGN="RIGHT" VALIGN="TOP">\\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">(\\d+)</FONT>&nbsp;&nbsp;&nbsp;\\s*</TD>'	32
