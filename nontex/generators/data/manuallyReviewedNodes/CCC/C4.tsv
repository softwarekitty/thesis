'[-+\\d.]'	557
'<doctest (?P<name>[\\w\\.]+)\\[(?P<examplenum>\\d+)\\]>$'	12,82,89,287,302,323,355,412,422,602,662,759,774,849,852,866,878,961,1004,1012,1033,1050,1074,1075,1086,1087,1115,1158,1184,1221,1257,1415,1495,1509,1511,1517,1536,1580,1594,1634
'coding[:=]\\s*([-\\w.]+)'	101,147,181,251,302,323,355,422,634,757,842,849,866,878,992,1004,1012,1054,1086,1087,1104,1158,1184,1257,1263,1290,1386,1415,1427,1436,1469,1495,1517,1536,1580,1594,1621,1634
'[-\\s]+'	82,89,190,247,302,323,355,391,422,552,591,606,819,849,866,872,878,919,1004,1007,1012,1021,1074,1075,1086,1158,1184,1223,1285,1395,1420,1468,1495,1517,1580,1634
'[\\s,]'	12,232,287,306,322,412,467,505,534,602,759,852,896,961,1007,1054,1087,1221,1466,1469,1509,1511
'(?<![\\w])(\\d+)L(?![\\w])'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'([.\\w-]+)\\s*(.*)$'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'([\\w\\d\\.-]+)\\s*([\\d]+):.*$'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'^([\\w., ]+=)?\\s*[\\w\\.]+\\(.*\\)$'	283,332,356,436,518,538,550,670,689,747,787,832,975,1000,1247,1288,1495
'[\\d.]+'	12,287,412,602,759,852,961,1054,1087,1221,1263,1290,1509,1511,1580,1594
'\\?|[-+]?[.\\w]+$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'.*; charset=([\\w\\d-]+);?'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'.+UNIT ?\\["(?P<unit_name>[\\w \\\'\\(\\)]+)", ?(?P<unit>[\\d\\.]+)(,AUTHORITY\\["(?P<unit_auth_name>[\\w \\\'\\(\\)]+)","(?P<unit_auth_val>\\d+)"\\])?\\]([\\w ]+)?(,AUTHORITY\\["(?P<auth_name>[\\w \\\'\\(\\)]+)","(?P<auth_val>\\d+)"\\])?\\]$'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1580,1634
'^[-\\w]+$'	82,89,302,323,355,422,849,866,878,1004,1074,1075,1495,1517,1634
'[\\-\\s\\(\\)]'	302,323,355,422,849,866,878,1004,1012,1086,1158,1184,1495,1517,1634
'^(\\s+)?\\{[\\s\\w,\\[\\]\\{\\}\\-\\."\\\':]+\\}(\\s+)?$'	302,323,355,422,849,866,878,1004,1012,1086,1184,1495,1517,1580,1634
'[\\s.]'	302,323,355,422,849,866,878,1004,1012,1086,1158,1495,1517,1634
'^[\\d,]+$'	302,323,355,422,849,866,878,1004,1012,1086,1495,1517,1580,1634
'coding[:=]\\s*([-\\w_.]+)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'([-\\w]+)\\s*:\\s*([^:;]*)'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	12,287,381,412,602,759,852,961,1054,1087,1221,1509,1511
'(?P<delim>[^\\w\n"\'])(?P<space> ?)(?P<quote>["\']).*?(?P=quote)(?P=delim)'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?(\\w+))'	12,287,412,531,602,759,852,961,1054,1087,1221,1509,1511
'^([:,;#%.\\sa-zA-Z0-9!]|\\w-\\w|\'[\\s\\w]+\'|"[\\s\\w]+"|\\([\\d,\\s]+\\))*$'	220,454,666,707,927,1003,1122,1247,1263,1290,1469,1580,1594
'\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?((?:\\w|\\.)+))\\b'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'[\\w.@+-]+$'	302,323,355,422,849,866,878,1004,1495,1517,1532,1634
'&(#(\\d+|x[\\da-fA-F]+)|[\\w.:-]+);?'	345,383,662,1033,1087,1257,1415,1536,1557,1580,1594,1634
'(::|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	12,147,245,287,305,602,1248,1317,1501,1505,1509,1638
'(\\s+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	12,287,412,602,636,759,852,961,1125,1221,1509,1511
'^/[-\\w/]+$'	13,24,25,26,28,35,72,147,181,472
'(?:([\\w ]+) ([\\w.]+) .*Version ([\\d.]+))'	12,287,412,602,759,852,961,1221,1509,1511
'(\\s+|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	308,322,467,505,534,636,743,1125,1216,1466
'([a-zA-Z\\d]+) \\[(\\d+)\\] (.*)'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*prefix\\s+([\\w\\_\\.\\-\\/]+)$'	306,322,464,467,505,534,1300,1404,1466
'^\\s*(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#?\\s*end\\s+(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'[\\-\\s]'	302,849,878,1012,1086,1158,1495,1634
'[-./\\s]'	322,416,467,505,534,1300,1404,1466
'[\\s\\-]+'	302,849,878,1012,1086,1158,1495,1634
'U[\\dA-F]{5,5}'	220,927,1122,1263,1290,1469,1580,1594
'^/([\\w-]+)(/|$)'	849,878,1012,1086,1158,1495,1580,1634
'(\\w+)=([-\\w]+)'	306,322,464,467,505,534,1404,1466
'#x([\\d|A-F]{4,4})'	220,927,1122,1263,1290,1469,1580,1594
'&.*?;|<.*?>|(\\w[\\w-]*)'	359,849,878,1012,1086,1495,1580,1634
'\\s*def\\s*([_\\w][_\\w\\d]*)\\s*\\('	422,462,690,747,1119,1469,1517,1580
'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'	220,927,1122,1263,1290,1469,1580,1594
'\\[#x([\\d|A-F]{4,4})-#x([\\d|A-F]{4,4})\\]'	220,927,1122,1263,1290,1469,1580,1594
'\\b(http|ftp|https)://\\S+(\\b|/)|\\b[-.\\w]+@[-.\\w]+'	12,412,759,852,961,1087,1221,1511
'Copyright [\\d-]*20[0-1][0-9] the V8 project authors. All rights reserved.'	306,322,464,467,505,534,1404,1466
'coding[=:]\\s*([-\\w.]+)'	12,53,1054,1087,1147,1258,1594
'\\s*[-\\w]+\\s*:\\s*[^:;]*;?'	220,454,666,707,927,1003,1247
'([\\d.]+)[^(]*(?:\\((.+)\\))?'	12,412,759,852,961,1221,1511
'(\\s+|[^\\s\\w]*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	322,467,505,534,743,1216,1466
'[\\s,]+'	245,262,267,268,560,1085
'^[-\\w/]+$'	82,89,1004,1074,1075,1495
'^[\\w\\-:\\$]+'	305,407,1025,1322,1326,1505
'\\|([\\w\\|\\-]+)$'	305,407,1025,1322,1326,1505
'\\$\\{([\\w\\-]+)\\}'	305,407,1025,1322,1326,1505
'<\\/([\\w\\:\\-]+)[^>]*>'	305,407,1025,1322,1326,1505
'^<\\/?\\w[\\w\\:\\-]*.*?>'	305,407,1025,1322,1326,1505
'&.*?;|<.*?>|([A-Za-z0-9][\\w-]*)'	82,89,1004,1074,1075,1495
'([\\w\\-]+)\\s*=\\s*([\\\'"])(.*?)\\2'	305,407,1025,1322,1326,1505
'^#import[\\s\t]*([^\\s^\t]*)[\\s\t]*$'	546,830,1028,1039,1223,1420
'(.*?[^\\s\\]\\}\\)]+.*?)([\\]\\}\\)],?)\\s*$'	306,322,534,896,1007,1466
',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'	82,89,1004,1074,1075,1495
'^([\\w\\-]+)(?::([\\w\\-]+))?(?::(\\d+),(\\d+))?$'	306,322,467,505,534,1466
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'([sS][eE][tT]\\s*\\()\\s*([^\\s]+)\\s+"([^"]+)"\\)'	322,467,505,534,1216,1466
'\\([^()]*\\b(?:[\\w:]|<[^()]*>)+\\s+const(\\s?&|&\\s?)[\\w]+'	322,416,467,505,534,1466
'([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(?:\\s*\\(\\s*([^)\\s]+)\\s*\\))?$'	12,287,602,1054,1087,1509
'<li class="header up"><a href="ref\\..*?\\.php">([a-zA-Z0-9\\s]+)</a></li>'	113,147,181,251,498,1267
'([\\w.+]+)\\s*\\(#(\\d+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	412,759,852,961,1221,1511
'(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'	546,830,1028,1039,1223,1420
'\\([^()]*\\bconst\\s+(?:typename\\s+)?(?:struct\\s+)?(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'	322,416,467,505,534,1466
'<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*\\s*(\\/?)>$'	305,407,1025,1322,1326,1505
'<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,407,1025,1322,1326,1505
'[\\s]+'	49,200,317,391,872
'^([\\w\\-:]*)'	143,188,213,1094,1583
'([\\w-]+)([.#])(\\w+)'	1025,1082,1322,1326,1505
'^%[%!\\w]([^:]*)[ \\t]*$'	441,628,1054,1204,1580
'([\\w\\-]+\\s*:)(?!:)\\s*'	305,1025,1322,1326,1505
'(\\s*<[^>]+>[\\s\\n\\r]*)$'	143,188,213,1094,1583
'(.+) release ([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'([^0-9]+)(?: release )?([\\d.]+)[^(]*(?:\\((.+)\\))?'	287,602,1054,1087,1509
'IronPython\\s*([\\d\\.]+)(?: \\(([\\d\\.]+)\\))? on (.NET [\\d\\.]+)'	287,602,1054,1087,1509
'(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	147,162,171,181,1381
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	12,287,602,1054,1509
'^<(\\w+\\:?[\\w\\-]*)((?:\\s+[\\w\\:\\-]+\\s*=\\s*([\\\'"]).*?\\3)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'\\s*((?<=[\\\'"\\s])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?'	873,927,1469,1580,1592
'^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\'[^\']*\')|[^>\\s]+))?)*)\\s*(\\/?)>'	305,1025,1322,1326,1505
'\n          <\n           (?:mailto:)?\n          (\n              [-.\\w]+\n              \\@\n              [-\\w]+(\\.[-\\w]+)*\\.[a-z]+\n          )\n          >\n        '	552,606,1223,1247,1420
'& (?:\n                                          \\#(\\d+)\n                                          | \\#x([\\da-f]+)\n                                          | ( (?!\\d) [:\\w] [-.:\\w]+ )\n                                          ) ;'	433,927,1003,1202,1350
'[\\W]+'	103,130,574,1340
'^[\\w_]+$'	433,927,1003,1202
'[\\s\\(\\)]+'	167,468,640,659
'^[\\w.@+-]+$'	585,1012,1086,1580
'\\d+[\\.\\d+]+'	287,580,602,1509
'\\(([\\d,]+)\\)'	113,1415,1469,1580
'([a-z\\d])([A-Z])'	305,1025,1138,1505
'([\\d\\w\\-_]+)(.*)'	523,946,1116,1484
'([<>]|&(?![^\\s]+;))'	60,64,881,928
'\\-\\-?\\w+[\\-\\w]*$'	422,747,1517,1580
'^[\\S]+@[\\S]+\\.[\\S]+$'	1294,1337,1527,1595
'^([a-z]*)(:|%3A)([\\w-]*)$'	254,438,594,790
'^#.*coding[:=]\\s*([-\\w.]+)'	747,1340,1517,1580
'#\\s*coding[:=]\\s*([-\\w.]+)'	422,747,1517,1580
'^.*"([\\d\\w_\\+\\.\\-/]+)".*$'	523,946,1116,1484
'asm-([\\w\\d_\\+\\.\\-]+)(/.*)'	523,946,1116,1484
'<img src="(?P<name>[\\d]+)" />'	422,747,1517,1580
"^(\\w[\\s\\w'.-]*)(\\((.*)\\))?"	1263,1290,1580,1594
'^[\\w\\d_]+\\.[\\w\\d_]+\\.\\d+$'	142,193,631,895
'rgb\\s*\\(\\s*([0-9,\\s]+)\\s*\\)'	568,807,1144,1247
'([\\s:])(0)(px|em|%|in|cm|mm|pc|pt|ex)'	568,807,1144,1247
'([\\d\\w\\-_]+)\\s+(\\d+)/(tcp|udp)(.*)'	523,946,1116,1484
'\\-\\-[A-Za-z][\\w\\-]*(\\.[\\w\\-]+)*\\=.*'	422,747,1517,1580
'^([\\s*,;/])([\\?\\w\\.\\-\\+]+\\w*\\s*)(\\(?.*$)'	422,602,747,1517
'MatplotlibBox:\\(([\\d.]+)pt\\+([\\d.]+)pt\\)x([\\d.]+)pt'	642,776,971,1203
'^([\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?\\.)*[\\w\\d]([\\w\\d\\-]{0,61}[\\w\\d])?$'	422,747,1517,1580
'^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'	614,947,996,1491
'(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	381,1054,1087,1580
'([^\\"\'=\\s])(\\s*)#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])'	568,807,1144,1247
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quot;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	552,606,800,1469
'[\\s]'	232,959,1276
'[\\W]*'	1007,1015,1032
'^/[-\\w/]*$'	24,25,147
'([\\s\\\\])'	1007,1015,1032
'([\\d\\.]+)'	287,602,1509
u'^[\\w/:+-]+$'	1012,1158,1580
'([\\w-]+):(.+)'	1269,1469,1498
'^[\\w\\.\\-\\/]*$'	122,1015,1032
'[\\s\\{\\}\\[\\]\\(\\)]'	18,1216,1365
'ks\\=[\\w\\d\\:\\.\\/]+'	560,1317,1501
'From .*?([\\w.]+@[\\w.]+)'	1007,1015,1032
'(^|[\\W_])sample\\d*[\\W_]'	1269,1469,1498
'From .*?([\\w.]+\\@[\\w.]+)'	1007,1015,1032
'^([a-zA-z0-9]+)=([\\S\\s]*)$'	308,743,1216
'%.*coding[:=]\\s*([-\\w\\.]+)'	317,428,466
'\\s?([a-zA-Z_\\d]+tset)\\s+fed'	1025,1215,1423
'^([>\\w\\-]+)\\s*:\\s*(.*)\\s*$'	1007,1015,1032
'(?:py.*-)?([\\d\\.]+)(?:-(\\w+))?'	1415,1469,1580
'name=[\'"]{0,1}([-\\w\\.]*?)[\'"]'	247,919,1007
'^.*<(()/[\\d\\w_\\+\\.\\-/]*)>.*$'	523,1116,1484
'^([^:]+): (\\w+) \\(([\\w\\.]+)\\)'	122,1015,1032
'.*?(?:Bcast:|broadcast )([\\d\\.]+)'	947,996,1491
'(?:[^\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	640,945,1505
'([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'	1183,1506,1510
'(?:.*\\()?(?P<name>[-\\w*\\.]+)(?:,|\\)?.*)?'	257,1319,1448
'^([,;/%?]|!!?|\\s*)\\s*([\\w\\.]+)(\\s+.*$|$)'	422,602,747
'(?P<name>[\\w-]+)\\s*\\(\\s*(==\\s*)?(?P<ver>[^)]+)\\)$'	1263,1580,1594
'.*?(?:Mask:|netmask )(?:(0x[0-9a-fA-F]{8})|([\\d\\.]+))'	947,996,1491
'<a href="/nodes/(?P<key>[\\w.]+)">(?P<count>[\\d.]+)</a>'	1183,1506,1510
'(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'	381,1054,1087
'(?:(?P<jarfile>[\\w\\d.\\-\\_\\\\/]+).jar\\:)|(?:\\s*(\\#.*)?)\\s*$'	1007,1015,1032
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!\\s*(?P<cmd>.*)'	422,747,1517
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%\\s*(?P<cmd>.*)'	422,747,1517
u'^(?:\\s*[-+]\\s*\\([a-zA-Z_$]\\w*\\)|@implementation)\\s*[a-zA-Z_$][\\w]*.*?\\s*(\\{)\\s*(?:$|//.*$)'	304,1025,1322
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1054,1087,1580
'\n                            \\s* ([^\\s;]+) \\s*            #content-coding\n                            (;\\s* q \\s*=\\s* ([0-9\\.]+))? #q\n                            '	1054,1087,1580
'(?x)\n    ^\n    (?: (\\w+):                     )?  # optional label at start of line\n        \\s* (\\.?\\w+)                   # optional spaces, (pseudo-)opcode\n    (?: \\s+ ([+-]?\\w+ | \\([^)]*\\)) )?  # optional first immediate operand\n    (?: \\s+ ([\\w,-]+  | \\([^)]*\\)) )?  # optional second immediate operand\n    (?: \\s* (?:\\#.*)               )?  # optional spaces and comment\n    $'	1007,1015,1032
'(?x)\n        ^ OPDEF \\( (JSOP_\\w+),         \\s*  # op\n                   ([0-9]+),           \\s*  # val\n                   ("[^"]+" | [\\w_]+), \\s*  # name\n                   ("[^"]+" | [\\w_]+), \\s*  # image\n                   (-1|[0-9]+),        \\s*  # len\n                   (-1|[0-9]+),        \\s*  # uses\n                   (-1|[0-9]+),        \\s*  # defs\n                   ([0-9]+),           \\s*  # prec\n                   ([\\w_| ]+)          \\s*  # format\n                \\) \\s* $'	1007,1015,1032
'\n    (?:\n        ([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*list\\(\n            (\n                (?:\n                    \\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                    )\n                    \\s*,\\s*\n                )*\n                (?:\n                    (?:".*?")|              # double quotes\n                    (?:\'.*?\')|              # single quotes\n                    (?:[^\'",\\s\\)][^,\\)]*?)  # unquoted\n                )?                          # last one\n            )\n        \\)\n    )\n'	332,689,1007
'\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    '	332,689,1007
'^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'	332,689,1007
'[-\\s]'	332,689
'[\\W_]'	135,749
"[\\w']+"	440,542
'[\\W_]+'	784,1557
'[,\\s]+'	758,1580
'[\\w ]+'	1317,1501
'[_\\s]+'	959,1276
'[\\d\\.]+'	1317,1501
'^[\\d ]+$'	109,182
'#([\\w-]+)'	1054,1198
'\\\\[\\s.-]'	1269,1498
'(\\.[\\d]+)?$'	296,819
'^([\\w\\.]+)$'	757,1087
'^<([\\w\\.]+)>$'	757,1087
'\\{([-\\w]+)\\}'	391,872
'(\\w+\\d+)[:\\s]'	1317,1501
'Fennec/([\\d.]+)'	391,872
'(\\s*[;,\\s]\\s*)'	147,181
'(?<!&)&(?![&\\s])'	251,1087
'[\\D]*(\\d+)\\w*$'	109,182
'[vhs]d[a-z]*[\\d]+'	1317,1501
'^\\d{10}[\\.\\d]+$'	568,1144
'^[\\s\t\n]*([^\n]*)'	640,659
'# Fadvise: ([\\w]+)'	1116,1141
'commit [\\da-f]{40}$'	103,130
'^.*?(v[\\d\\.]+).*?$'	305,1025
'([:\\-\\w]*){([^}]+)}'	753,942
'^(Y|X|A|N) ([\\S ]+)$'	109,182
'\\/\\*[\\s\\S]*?\\*\\/'	1025,1322
'\\(CVS\\) ([\\d\\.]+) '	1015,1032
'([+-]?[\\d\\.]+)(\\S+)'	63,401
"^\\d* *([\\w.,'\\s]+)$"	109,182
'repo\\=[\\:\\w\\d\\/]*'	1317,1501
'dot version ([\\d\\.]+)'	757,1087
'((,|^)\\s*[\\w\\-\\.]+)'	757,1087
'^.*?(\\d+)([\\w\\s]+)?$'	1025,1326
'([\\w\\-\\.]+)="([^"]+)"'	640,662
'# Command: [/\\w_]+ (.*)'	1116,1141
"([\\w\\-\\.]+)='([^']+)'"	640,662
'\\[tag:\\s*([\\S]+)\\s*]'	296,819
'<tt class="[\\w+]"></tt>'	757,1087
'%G|\\[m|\\[[\\d;]+[HJnrm]'	1317,1501
'(\\s*[\\w\\W]*?\\.)(\\s|$)'	757,1087
'[\\s\\{\\}\\[\\]\\(\\)\\=]'	602,747
'# Sched features: ([\\w]+)'	1116,1141
'Input #0, ([\\w,]+)?, from'	391,872
'repo\\=cdrom[\\:\\w\\d\\/]*'	1317,1501
'flags\\s+:\\s+([\\w\\s]+)\n'	1317,1501
'([\\w]*)([^:=]*:?=?)([sif]?)'	602,747
'[\\s\\{\\}\\[\\]\\(\\)\\= ,:]'	602,747
'autoyast\\=[\\w\\d\\:\\.\\/]+'	1317,1501
'/projects/([-\\w]+)/([-\\w]+)/'	295,1496
'TOTEM_INFO_VIDEO_CODEC=([\\w]+)'	391,872
'\\s*#+.*coding[:=]\\s*([-\\w.]+)'	640,662
'%\\s*#.*coding[:=]\\s*([-\\w.]+)'	1047,1277
'\\s*:?\\s*([\\w\\.]+\\s*,?\\s*)*'	757,1087
'S(\\s+0.0+){2}.*vhost-\\d+[\\d|+]'	1317,1501
'.*?\\n?.*?coding[:=]\\s*([-\\w.]+)'	757,1087
'Node\\s+.*?zone\\s+\\s+([\\s\\d]+)'	1317,1501
'([\\w-]+[\\w]+)\\s+(\\w+)\\s+(\\w+)'	1317,1501
'\\A@charset "(?P<encoding>[\\w-]+)";'	305,1505
'coding[:=]\\s*(?P<encoding>[-\\w.]+)'	305,1505
'^[\\w.\\*]+([\\s,:;]\\s*[\\w.\\*]+)*$'	757,1087
'[^[]+\\[(\\d+/[A-Za-z]+/\\d+):[^\\d]*'	1004,1075
'(.*)\\.\\[[\\w_\\.\\-]+?\\]\\.torrent'	1269,1498
'var (_0x[a-f\\d]+) ?\\= ?\\[(.*?)\\];'	1025,1379
'^([\\w\\.]+) \\.\\.\\. \\[([^\\]]+)\\]$'	1015,1032
'(?P<currency>\\w+) (?P<amount>[\\d.,]+)'	391,872
'#[\\s]*?(TODO|FIXME|HACK|XXX)[\\s:]?(.+)'	422,1644
'(?:\\s+([\\w-]+)\\s*=\\s*(".*?"|\'.*?\'))'	305,1505
'\\s?["\']([a-zA-Z_"\'\\s\\d]+)["\']\\s+tset'	1025,1423
'http(s)?\\://([\\w\\.-]*)(\\:(\\d+))?(/.*)?'	147,181
'^\\d*:\\s+([\\w.]+)(?:@)?(\\w+)?:\\s+<(.+)>'	996,1491
'(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'	1054,1087
'^#(ifndef|define|endif\\s*//)\\s*[\\w_]+\\s*$'	1007,1301
'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'	757,1087
'(([wum]asser(t|ted)))\\s*\\(([^\\d]*)(\\d+)\\s*,?()'	1459,1531
'# <nbformat>(?P<nbformat>\\d+[\\.\\d+]*)</nbformat>'	747,1580
'(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'	1263,1580
'^(list|set|sequence|tuple|collection) of ([\\w\\.]+)$'	757,1087
'^(None or|optional) ([\\w\\.]+)$|^([\\w\\.]+) or None$'	757,1087
'^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)$'	477,684
'(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'	1317,1501
'^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/delete$'	477,684
'^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/history$'	477,684
'^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/move_up$'	477,684
'use\\s+encoding(?:::source)?\\s+([\'"])(?P<encoding>[\\w-]+)\\1'	305,1505
'^(dict|dictionary|map|mapping) from ([\\w\\.]+) to ([\\w\\.]+)$'	757,1087
'^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/move_down$'	477,684
'^\\s*([\\w\\s\\*]+)\\(\\s*\\*\\s*(\\w+)\\s*\\)\\s*\\(([^()]*)\\);'	1054,1198
'\\<\\!\\-\\-\\#\\s?[A-z0-9_-]*\\s?\\:s?[A-z0-9\\s_-]*\\s?\\-\\-\\>'	1021,1468
'(([wum]asser(t|ted))) *\\(( *)(\\d+) *,\\s*([\\S\\s+<\\(\\)"]+) *,?.*'	1459,1531
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!(?P<cmd>.*)'	422,1517
'(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'	422,1517
'(?P<title>.+) (\\((class in )?(?P<id>[\\w\\.]+)( (?P<descr>\\w+))?\\))$'	251,1087
'(\\d+\\.\\d+\\.\\d+\\.\\d+|\\W:{2}\\d\\W):\\d+,\\d+\\s+([\\w\\.\\-:\\d]+)'	1317,1501
'\\d+-\\d+-\\d+([\\s|T|t]\\d+:\\d+:\\d+.\\d+(Z|(\\s?[\\-|\\+]\\d+:\\d+)))?'	171,1381
'\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))'	274,573
'# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'	1116,1141
'([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'	1054,1087
'^((http[s]?):\\/)#?\\/?([^:\\/\\s]+)((\\/[\\w\\-\\.]+)*\\/)*([\\w\\-\\.]+[^#?\\s]+)'	1028,1039
'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263,1290
'^(dict|dictionary|map|mapping) from ([\\w\\.]+) to (list|set|sequence|tuple|collection) of ([\\w\\.]+)$'	757,1087
'\\s*(?P<name>.+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1263,1580
'(I[0-9a-f]{8,40})|([Bb]ug|[Ll][Pp])[\\s\\#:]*(\\d+)|([Bb]lue[Pp]rint|[Bb][Pp])[\\s\\#:]*([A-Za-z0-9\\-]+)'	1223,1420
'^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'	305,1505
u'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(?:[\\w_]|\\[).+(;)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	1025,1322
'(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'	72,1087
'\n        (<meta\n        (?:\\s+[\\w-]+\\s*=\\s*(?:".*?"|\'.*?\'))+  # attributes\n        \\s*/?>)\n        '	305,1505
'(\\s+|(?<=\\s)(?::[a-z-]+:)?`\\S+|[^\\s\\w]*\\w+[a-zA-Z]-(?=\\w+[a-zA-Z])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'	251,1087
'^v?(\\d+!)?(\\d+(\\.\\d+)*)((a|b|c|rc)(\\d+))?(\\.(post)(\\d+))?(\\.(dev)(\\d+))?(\\+([a-zA-Z\\d]+(\\.[a-zA-Z\\d]+)?))?$'	1263,1580
'\n      <\n      (?:mailto:)?\n      (\n         [-.\\w]+\n         \\@\n         [-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+\n      )\n      >'	55,200
'(?x)\n    \\%\n        (?:\\(([\\w]*)\\))?\n        (\n            [-#0\\ +]?(?:\\*|[\\d]+)?\n            (?:\\.(?:\\*|[\\d]+))?\n            [hlL]?\n        )\n        ([diouxXeEfFgGcrs%])\n'	636,1125
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>([^ ]|\\\\ )*?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	1223,1420
'<[a-zA-Z][-_.:a-zA-Z0-9]*\\s*(\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~@][][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*(?=[\\s>/<])))?)*\\s*/?\\s*(?=[<>])'	1087,1580
'FOREIGN KEY \\((.*?)\\) REFERENCES (?:(.*?)\\.)?(.*?)\\((.*?)\\)[\\s]?(MATCH (FULL|PARTIAL|SIMPLE)+)?[\\s]?(ON UPDATE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(ON DELETE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\\s]?(DEFERRABLE|NOT DEFERRABLE)?[\\s]?(INITIALLY (DEFERRED|IMMEDIATE)+)?'	1415,1580
'\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '	305,1505
"\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "	1263,1580
'[\\W]'	1076
'[,\\s]'	220
'[\\s]*'	1201
'[\\s:]'	1308
'[\\s-]'	1140
'[\\s(]'	1248
'[\\d-]'	832
'[/\\s]'	534
':[\\s]+'	49
'[x\\d]Q'	1190
'[\\w/]+'	1501
'[\\w-]+'	200
'[-\\d.]'	557
'[\\s:/_]'	173
'[\\s,;:]'	560
'[;,\\s]+'	1258
'[\\s().]'	1199
'"[\\s]*"'	1205
u'[\\W_]*'	506
'[-.\\d]+'	356
':[\\s]*$'	126
'[;\\s,]+'	1258
'([\\s]+)'	1240
'[\\s\\.]'	247
'^[\\w ]+$'	819
'[\\w\\d]*'	1594
'[\\w\\d]+'	215
'[\\w\\.]+'	1248
'[-\\d\\.]'	135
u'[\\d\\.]'	782
'[\\t\\s]+'	735
'[\\w.]+\\('	283
'^([-\\w]+)'	560
'([;,\\s]+)'	1258
'[\\w\\d.]+'	1147
'@([\\w]+)@'	356
'<([\\w]*)>'	356
'^[\\w]+://'	1363
"[\\s'\\\\]"	1520
'^[\\d.:]+$'	741
'[\'"\\s;]+'	1247
'^[\\w._-]+'	727
'([\\w._-]+)'	727
'([\\w_:]+)<'	1007
'([\\W\\-]+)'	360
'([\\w\\d]+)'	1147
'[\\s.,;_-]+'	1054
'([\\d]+) bp'	681
'([\\d]+) BP'	681
'#([\\w\\-]+)'	1247
'[\\s+\\n\\t]'	1593
'([.\\w]+)[.]'	1621
'([\\"\'\\s])'	1571
'[\\(\\)\\s]+'	1330
'[\\d+.\\-]+$'	1248
'-t ([/\\w]+)'	1381
'^[-\\.\\w]+='	560
'^[-\\.\\w]+$'	560
'^/([\\w-]+)/'	302
'^[\\w{@}-]+$'	1007
'[\\w-]+\\..+'	1381
'^\\$[\\w=]+$'	175
'\\([\\d,]+\\)'	1469
'^[\\w\\-\\:]+'	1247
'(^[\\d].*) \n'	1563
'^([\\w\\d_]+)'	576
'[\\s\n\r]*\\Z'	1302
'as\\s+[\\w.]+'	1248
'^[\\w,./=-]*$'	244
'[\\d.]+[ ]*\n'	1101
'V ([\\d\\.]+)'	1192
'[\\(\\)\\s,]+'	1330
'[#][\\dA-F]{8}'	1025
'[#][\\dA-F]{6}'	1025
'[#][\\dA-F]{3}'	1025
'^[a-zA-Z\\d]+$'	1107
'^[\\w\\.\\-]+$'	1205
'\\.([\\w\\-]+)'	1247
'[\\w]+="[^"]+"'	1076
'^[\\w\\-\\_]+$'	1313
'.?A[\\W0-9_]*$'	1190
'^[^:]*[\\d:]+$'	741
'^[\\w/:\\.-]*$'	360
'\\d[.\\d]+\\d$'	1051
'[\\s\\S]*<TEXT>'	1248
'^([\\w\\_\\:]+)'	1247
'\\([:, \\w]+\\)'	1571
'^[\\w\\-\\:%]+$'	1025
'(?:[\\da-f]){2}'	1462
'([\\w\\d_]+)\\Z'	576
"[\\w\\-\\'_/&]+"	255
'&(?!([#\\w]*;))'	1638
'[\\w\\d\\-_\\.]+'	1107
'GPU\\s([\\d.-]+)'	540
'<City>([\\w ]+)<'	506
'Name=([\\w\\.]+)'	1412
'^[-+*.\\w]{,32}$'	872
'\\([\\d:, ]+\\)$'	1571
'[\\w\\d_\\.\\-]+'	1258
'</TEXT>[\\s\\S]*'	1248
'^\\s*[\\w-]+\\s*$'	602
'\\(([\\d\\.]+)\\)'	1397
'[\\w_]+\\.[\\w_]+'	1247
'([\\d]+) ([\\d]+)'	1192
u'\\x1b\\[[\\d;]+m'	1007
'([\\S]+)=([\\S]+)'	356
'[ \t]*\\[[\\w]+ $'	626
'[_a-zA-Z][\\w-]*$'	819
'^[\\w][\\w\\d.]*$'	1594
'^(\\s*)(-)?[\\w]*'	1025
'Firefox/([\\d.]+)'	391
'\\?P<([a-z\\d_]+)>'	1258
'[\\w0-9\\.\\_\\-]+'	1235
'([\\d.]+)([^\\s]+)'	899
'(\\\\\\*)([\\w ]+)'	1192
'[a-zA-Z]+://[\\S]+'	185
'\\w*\\([\\w, ]*\\)'	232
'V :\\s*([\\d.]+).*'	1437
'/[ ]*[\\d.]+[ ]*kg'	1101
'\\\\((?![enr\\d]))'	135
'\\(([:, \\w]+)\\)$'	1571
'^\\[([;\\d]+)m(.*)$'	1463
'<img [\\W\\w\n]*?/>'	185
'[\\w|\\W]*quarter.*'	557
'[\\d]{2}[ ][\\d]{2}'	1113
'^Name:[ ]*([^\\s]*)'	122
'UKUPNO:\\s([\\d.]*)'	540
'\\?[\\w\\.\\-/]*\\='	384
u'^[\\s]*==([^=]+)=='	1100
'^[>|\\s]*[-_]+\\s*$'	43
'([^<]*)<([\\w]*|/)>'	363
'[=*/+\\-^()]|[\\w.]+'	232
'([\\w\\-]+\\s*:)\\s*'	407
'([:\\w]+)\\s+(\\w+);'	1244
u'((?:nm|tt)[\\d]{7})'	1557
'Mobile; rv:([\\d.]+)'	391
'name="[\\w\\.\\-/]*"'	384
'(?:^|[^%])%([\\w-]+)'	1571
'\\((\\w+) - ([\\w]+)'	90
'Tablet; rv:([\\d.]+)'	391
'([\\d.]+)\\s*(\\D.*)'	1469
'^[\\S]+\\[[\\S]+\\]$'	1205
'<[a-z]+ [\\w"=\\.]+>'	911
'^(\\d+\\.)+[\\w.-]+$'	1544
'^\\s*(.*?)[\\s({\\[]'	534
'[#/%\\[\\]()<>{}\\s]'	1386
'([\\.\\d]+) ([GMK])B'	1557
'inet addr:([\\d\\.]+)'	560
'^svn/tags/[\\d+\\.]+$'	534
'<([\\w]*)=([, \\w]*)>'	356
'[.:,\\s!?+=\\(\\)/-]+'	1340
'^[a-zA-Z_]+[\\w0-9]*$'	602
'[\\w|\\W]*financial.*'	557
'([^\\w.@+-/]|[,;?!])*'	585
'\\[\\[([\\w ]+)\\]\\]'	81
'([\\w ]+)(\\(.*?\\))?'	1580
'LATEST: +([0-9.\\w]+)'	1263
'^[a-zA-Z]+[\\w0-9-]*$'	602
'(\\w+://)?([\\w\\.]+)'	571
'^[ \\t]*from [\\w.]+$'	1555
'(?<=source\\.)[\\w+#]+'	626
'SC_\\(([-\\d\\.e]+)\\)'	531
'^[\\w\\<][^\\n]*(\\n+)'	485
'RT[\\d\\w]+_Firmware.*'	318
'action="[\\w\\.\\-/]*"'	384
'[=*/+\\-^]{1,2}|[\\w.]+'	232
'(.*?)\\$(\\$?[\\w\\.]+)'	747
'[^_]+_toy-([\\w-]*)-x86'	1068
'(\\w+)[ ]+- ([\\w /,]+)'	506
'urn:btih:([\\w]{32,40})'	1469
"[[\\s $({?*\\`#~';<>&|]"	705
'lang_code="([\\w\\-]+)"'	1181
'\\=[\\s]+([\\d\\.]*) KB'	560
'<CountryName>([\\w ]+)<'	506
'^[a-zA-Z]+[\\w:.0-9-]*$'	602
'[_a-zA-Z][_a-zA-Z\\d]*$'	44
'INSTALLED: +([0-9.\\w]+)'	1263
'[;\\s\\/\\+]$|^$|(?=: ).'	1025
'<HEAD[\\W\\w\n]*?</HEAD>'	185
'/dev/([\\w_]+)/([\\w_]+)'	1501
'^([\\w\\-_]+\\.)+[\\w]+$'	200
'<\\s*(\\w[\\w\\d]*)\\s*>'	356
'\\(CVS[NT]*\\) ([\\d.]+)'	122
'.*\\stest_([:\\w]+)\\s.*'	1025
'(^[\\w\\s]{1,20}?):(.*$)'	31
u'[\\s\x00-\x1f@,:<>\x7f]'	935
'^\\s+[A-Z\\s]+MACRO\\s*$'	1432
'^[a-zA-Z_]+[\\w:.0-9-]*$'	602
'[a-zA-Z_][\\w\\.\\-_]*\\Z'	1076
'gene_id \\"([\\w\\.]+)\\"'	1412
'<([\\w ]+(,\\s*[\\w]+)+)>'	356
'([\\w\\.-]+)\\s+([^(]+).*'	1501
'^\\s+[A-Z\\s]+MODULE\\s*$'	1432
'([\\w-]+)\\s*([\\d]+):.*$'	1263
'gene_id \\"([\\w+\\.]+)\\"'	1412
'\\[([\\w\\-\\:]+)=(.*?)\\]'	1247
'^[a-zA-Z][a-zA-Z\\d_]{2,}$'	820
'(%(\\([^\\s\\)]*\\))?[sd])'	162
'\\w+[\\w\\s]*?class (\\w*)'	407
'^[\\w\\d\\.]+@[\\w\\d\\.]+'	1107
'[\\s\\{\\}\\[\\]\\(\\)\'"]'	654
'^([\\w\\-]+/)?[\\w\\-\\.]+$'	1247
u'(?i)\\w{0,4}://[\\w\\d./]*'	1139
'([\\w\\-\\.]+@[\\w\\-\\.]+)'	954
'^[a-zA-Z][a-zA-Z\\d_]{2,4}$'	820
'(?P<cl>\\w+)(?P<id>[-\\d]+)'	43
'<style [\\W\\w\n]*?</style>'	185
'[a-zA-Z_:][\\w\\.\\-_:]*\\Z'	1076
'rgba?\\(([\\d, \\%\\.]+)\\)'	615
'([^\\-\\.]*)-([\\d+.\\-]+)$'	1248
'[\\d]+\\:([e\\+\\-\\d\\.]+)'	754
'\\s*([^\\s\\=]+)[\\s=]+(.*)'	1412
'^\\s*[\\d\\.]+\\w{0,3}\\s*$'	200
'\\w+\\.[\\w\\.\\-/]*\\.\\w+'	384
'(^|[\\W_])trailer\\d*[\\W_]'	1469
'^[\\w|\\s.]+\\(([^)]*)\\).*'	1580
'\\=[\\s]+([\\d\\.]*) KB/sec'	560
'<\\s*[a-z]+\\s*[\\w"=\\.]*>'	911
'^([\\w\\d\\s\\_\\-]+):(.*)$'	1420
'SERVER|CLIENT\\_JOB\\.[\\d]'	560
'[\\s\\.()\\"\',-:;/\\\\?!@]+'	954
'FPKM \\"([\\d\\s\\w\\.]+)\\"'	1412
'^HTTP/([\\d.]+) (\\d+) (.+)$'	1569
'(\\s*)#\\!([\\w+-][\\w+-/]*)'	1258
'coding[:=]\\s*"*([-\\w.]+)"*'	498
'([a-z]*)[\\s\t]+([0-9:, -]+)'	317
'U ().*\\/([\\w\\.]+):(\\d+)$'	1007
'\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'	356
'^(.*?)(\\.|)(\\w?[\\w\\d]*)$'	1594
'memcached://([.\\w]+:\\d+;?)'	1426
'([\\s\\S]+) feat.([\\s\\S]+)'	913
'</table>&#13;([\\w\\W]+)<div'	1113
'<script [\\W\\w\n]*?</script>'	185
"[\\w!\\#$%&'*+-\\/=?^_`{|}~]+"	1462
'^-?[\\.,]?\\d[\\d,\\.-]*\\.?$'	1248
'gvsearch(\\d+|all)?:[\\s\\S]+'	386
'([\\d\\:]+ (PM|AM)) ([\\w ]+)'	1192
'Android; Mobile; rv:([\\d.]+)'	391
'/libedit[\\.\\d+]*\\.dylib\\s'	422
'[\\w\\-:]+(\\.[\\w\\-]+)*\\.?'	1247
'Android; Tablet; rv:([\\d.]+)'	391
'yvsearch(\\d+|all)?:[\\s\\S]+'	386
'ytsearch(\\d+|all)?:[\\s\\S]+'	386
'(<\\s*[a-z]+\\s*[\\w"=\\.]+>)'	911
'^http://instagr\\.am/p/[\\S]*$'	175
'^/domain/(([-\\w]+\\.)+[\\w]+)'	200
'<?xml.*encoding=\\W*([\\w_-]+)'	200
'([^,(\\s]+[.]spacesaver[(][)])'	356
u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'	1158
'[a-zA-Z\\d]+(\\.[a-zA-Z\\d]+)+'	819
'AJS\\.([\\w_$]*?)(?:\\(|,|\\.)'	56
'^(?P<component>[\\w\\/-]+)\\s*'	225
'ini: (.+?)\\s+=\\s+([\\d\\.]+)'	982
u'Size ([\\.\\d]+)\xa0([GMK])iB'	1557
'ALT=[\'"]?([\\w\\d\\s]*)[\'"]?'	1248
'^([\\w:\\.]+)\\s+([A-Z]+):(.*)$'	560
'[\\s|\\[]*(\\w+)(?:\\s*=\\s*.*)'	1580
'^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'	31
'[^\\s]*?[\'|"].*?[\'|"]|[^\\s]+'	560
'^\\s*[A-Z/\\s-]+ATTRIBUTES\\s*$'	1432
'^\\w+[\\w\\s\\*]*?(\\w*)\\s*\\('	407
'^(?P<key>[\\w]+)=(?P<value>.+)$'	928
'transcript_id \\"([\\w\\.]+)\\"'	1412
'^#?\\d+(/[-.\\w\\[\\],\\s*]+)?$'	1569
'^\\s+[A-Za-z\\s]+Attributes\\s*$'	1432
'(^|\\s)([\\w]+)(\\++)($|\\s|\\,)'	1027
'^%!TEX\\s+([\\w-]+)\\s?=\\s?(.*)'	31
'^[a-zA-Z_]+[\\w-]*(\\[\\w*\\])*$'	602
'^[\\w\\-\\+\\.]+/[\\w\\-\\+\\.]+$'	1580
'action="http?\\w://[\\w.\\?=/&]*/'	1523
'<meta.*charset\\W*=\\W*([\\w_-]+)'	200
'^[.0-9\\(\\)\\+\\-/\\*\\s]+\\s*=$'	175
'\\(([\\d\\.]+),\\s*([\\d\\.]+)\\)'	982
'SourceMod v\\.<b>([\\d\\.]+)</td>'	1555
'\\s\\s\\s\\s+[\\w]{4}.\\s+\\d*\\Z'	1302
'[\\d]+(-|/)[\\d]+(((-|/)[\\d]+)*)'	330
'/_ah/img/([-\\w]+)([=]*)([-\\w]+)?'	1004
'LatLng\\(([-\\d\\.]+),([-\\d\\.]+)'	506
'<option value="(\\d+)">([\\w /-]+)'	98
'\\[info\\] This is sbt ([\\d\\.]+)'	948
'\\s*?- Program class:\\s*([\\S]+)$'	1007
'(\\s+)(\\w+)(\\s+)--(\\s+)([\\w*])'	531
'<a href="(\\w+)/">([\\w /]+)<\\/a>'	98
'^(http|ftp):\\/\\/[\\w.]+\\/(\\S*)'	826
'(?:\\{.+\\})?(?:\\([:, \\w]+\\))?$'	1571
'Greenplum[a-zA-Z\\s]*(\\d+\\.\\d+)'	1235
'(\\w+|[-\\.\\d]+| |\n|.|,|:|!|\\?)'	1456
'(^|[\\W_])fanart|backdrop\\d*[\\W_]'	1469
u'^http://example.com/reset/[\\w/-]+'	1158
u'^http://example.com/reset/[\\w+/-]'	1158
'^\\s+[A-Z/a-z\\s]+Module Table\\s*$'	1432
'[\\s\\S]*(exception|error)[\\s\\S]*'	1007
'<indexentry>[\\s\\S]*?</indexentry>'	1470
'PostgreSQL[a-zA-Z\\s]*(\\d+\\.\\d+)'	1235
'^\\s*(?P<keyword>[\\w-]+)\\s+{\\s*$'	600
'([a-zA-Z\\d-]+)\\(([a-zA-Z\\d]+)\\)'	1580
'/_ah/img/([-\\w:]+)([=]*)([-\\w]+)?'	1495
'(?P<tag></.+?>)(?P<value>[\\d\\.]+)'	1453
'(\\s+)(\\w+)(\\s+)---(\\s+)([\\w*])'	531
'cross-entropy = ([\\.\\d\\w]+) bits'	1348
'\\#[\\s]*include[\\s]*[<"](\\S+)[">]'	635
'Codon frequenc[a-z\\s]{3,7}:\\s+(.+)'	1302
'[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'	1302
"<class \\'sympy[\\w.]*?.([\\w]*)\\'>$"	787
'[\\s,\\(](?:_([0-9]+))(?=$|[\\s,\\)])'	1249
'(([a-z]+)Version[\\s]+=[\\s]+)(\\d+);'	1274
'([\\d.]*%) are below the poverty line'	55
'<a href="/(\\w+)/" title="([\\w ]+)">'	98
'<ipython\\-input\\-(\\d+)-[a-z\\d]+>$'	1580
'[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'	384
'^(http|ftp):\\/\\/[\\w.\\-]+\\/(\\S*)'	826
'^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'	539
'(/[\\w/]*)|([^/ ][^: ]*)(:(\\d+)){,1}'	897
'^(#?\\d+)(?:/([-.\\w\\[\\],\\s*]+))?$'	1569
'Area Size: .*? ([\\d,]*) square miles'	55
'\\s+(\\d+\\.\\.\\d+)[\\s+\\d+\\.\\d+]+'	1302
'(.+\\n.+\\n.+)\\s\\S+\\n[\\s\\S]+(?!$)'	1248
'([a-z]*) ([\\d-]+)[\\s\t]+([0-9:, -]+)'	317
'^\\.\\. piston_handlers:: ([\\w\\.]+)$'	1644
'9(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}){6,12}'	1122
'9(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}){6,10}'	1122
'([^%]|^)\\\\makeindex(\\[([\\w]+)\\])?'	31
'(?P<number>[\\d]+)(?P<ord>st|nd|rd|th)'	1340
'(?<![\\(\\[])(http://[^\\s\'"\\]\\)]+)'	200
'<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'	356
'^([\\w\\d]+[\\w\\d\\-]*[\\w\\d]+\\.?)+$'	187
'(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'	356
'/posts/([\\d]{4})/([\\d]{2})/([\\d]{2})'	68
'(%(\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])'	200
'\\s*<?([^@\\s]+\\@[a-zA-Z0-9-.]+)>?\\s*'	329
'[\\.,:;"\'/?\\[\\]\\d\\+=\\-_\\{\\}<>]+'	1417
'^\\s+\\[([\\s*[0-9]*)\\] ([a-zA-Z0-9_]*)'	356
'(\\d{4,4})[\\.|\\s](\\d+)[\\.|\\s](\\d+)'	126
'Intel(\\(R\\))? (.*) processor [\\d]+MHz'	244
'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'	206
'query ([\\w ]*\\w+)[ \r\n]+- ([\\w /,]+)'	506
'<countryName>([\\w ,\\.]+)</countryName>'	506
'^text/plain;\\scharset="([\\w\\-\\d]+)"$'	1258
'(remote: )?([\\w\\s]+):\\s+()(\\d+)()(.*)'	599
'^(?! {4}|\\t).*\\w+(?<!_)_\\w+_\\w[\\w_]*'	485
'https?://[-\\.\\w:]*/console/rest/v1/dev/'	822
'%\\((\\w+)\\)(?:s|[\\d]*d|\\d*.?\\d*[fg])'	1258
'([\\d\\D_\\.\\-]*:?[\\d\\D_\\.\\-]+)=(.*)'	1076
'http(s)?\\://([\\w\\.]*)(\\:(\\d+))?(/.*)?'	594
'gml:coordinates>([-\\d\\.]+),([-\\d\\.]+)<'	506
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^/:#?]*)'	200
'(?:[^,\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)'	1025
"devmo_url\\(_\\('(?P<path>[\\w/_]+)'\\)\\)"	682
'[ \\t]*([^<>\\s]+?)[ \\t]*<p="([^"]*"?)"/>'	1248
'((\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])(.*)'	200
'^\\s*package\\s+([a-zA-Z_][\\w:]*)\\s*;.*$'	602
'[\\w\\W\\|\\-\\s]*apt-get[\\w\\W\\|\\-\\s]*'	772
'(https?\\:\\/\\/[(\\w|\\d|+|-|_|\\.|\\/)]+)'	1285
'@\\{(?P<a>[\\w\\-\\.]+?)(\\:(?P<b>.*?))?\\}'	1247
'^\\d+\\) \\w+: (.+)( \\(Bye: [\\?\\d]+\\))$'	90
'"?Content-Type:.+? charset=([\\w_\\-:\\.]+)'	162
'(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}(?!\n)){6,12}'	1122
'\\s*([^\\\'"\\s{},=][^{},=]*?)\\s*([},=]|$)'	727
'^\\s*([0-9a-f]+\\.\\.[0-9a-f]+)\\s+([\\S]+)'	1107
'(\\w+|-+>|=+>|"[\\w ]+"|\\\'[\\w ]+\\\'|\\|)'	1248
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+\\s*)()'	1248
'(\n\\[\\[[a-z][a-z][\\w-]*:[^:\\]]+\\]\\])+$'	1454
'cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+)[\\\'"]?\\)'	1240
'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'	566
'\\s*(?:\\((\\d+)\\)\\s*)?(\\??[\\w-]+)?(\\[)'	1248
'(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'	1267
'typedef\\s+(?P<from>[\\w ]+)\\s+(?P<to>\\w+);'	533
'api_version:\\s*(?P<api_version>[\\w.]{1,32})'	1074
'Representative ([\\w\\s\\.\\,\\"\\-]+)\\s*<br'	182
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>\\D+)?'	962
'^[A-Za-z0-9_-]+[\\s\\?\\#\\@]*[A-Za-z0-9_-]+$'	993
'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^#]*[^#/])/?'	200
'^http://[\\S]*\\.craigslist.org/[\\S]*\\.html$'	175
'^==== ([^\\s]+) \\(([^\\)]+)\\) ==([ACIMR])==$'	1426
'\\s*The (?P<p>[\\w\\d]+) processor operates at'	356
'(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'	317
'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'	739
'([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'	317
'^(\\d+)\\) (\\w+): (.+)( \\(Bye: [\\?\\d]+\\))$'	90
'ESXi (\\d)+\\.(\\d)+\\.(\\d)+[ ]+build-([\\d]+)'	1381
'"uid":"([\\w\\d]+?)".*?stream_token=([\\w\\d]+)'	1181
'\\s*([+-]?)([^\\s\\(\\)<>"\\\'\\-=\\[\\],]+)\\s*'	1248
'(\\s*[\\w\\W]*?(?:\\.(\\s|$)|[\\n][\\t ]*[\\n]))'	1087
'(\\w+|-+>|=+>|"[\\w\\\' ]+"|\\\'[\\w ]+\\\'|\\|)'	1248
'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'	564
'Population in (\\d{4})( \\(est\\))?.*?([\\d,.]+)'	55
'\\s+cdef\\s*(?:[\\w\\.]*?\\**\\s*)?(\\w+)\\s*\\('	407
'play ([\\w -:]*\\w+)[ \r\n]+- ([\\w /:,\\(\\)]+)'	506
'(?P<name>%%\\(name\\)(?:\\-(?P<digits>[\\d]+))?s)'	1491
'Merge to: (?P<branch>[\\w\\-]+): (?P<type>[A-Z]+)'	1426
'.*\\brequire\\s*\\(?([\\\'\\"])([\\w._-]+)\\1\\)?'	727
'^.* \\(.*\\): .* http://imdb.com/title/[a-z\\d]+$'	539
'Senator ([\\w\\s\\.\\,\\"\\-]+)\\s*\\-\\s*District'	182
'<textarea name="text"[\\W]*rows="25"[\\W]id="text"'	987
'([a-z]*) ([\\d-]+) - ([\\d-]+)[\\s\t]*([0-9:, -]+)'	317
'https?://?([-\\w.]*\\.)?digg\\.com/\\w+\\.\\w+(/|$)'	200
"<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"	55
'(\\w+)(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
'#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'	533
'("\\w+ .*?HTTP/[\\d\\.]+"\\s)(\\d+)(\\s\\d+\\s".*?")'	455
'^START WAL LOCATION: [^\\s]+ \\(file ([0-9A-Z]+)\\)$'	1520
'^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'	1580
'^\\s*((?P<title>[^\\s]*?)\\s+)?(?P<tags>:[\\w_:@]+:)$'	624
'\\s*([bB]asic|[dD]igest)\\s+(?:[\\w]+="[^"]+",?\\s*)?'	1076
'(\\w+)(?:\\:(\\w+))?@([\\w-]+(?:%)?(?:\\.[\\w-]+)*|%)'	873
'^(?:Doctest: )?([\\w\\.]+) \\.\\.\\. \\[([^\\]]+)\\]$'	122
'^[\\w]+\\.define_table\\(\\s*[\'"](?P<name>\\w+)[\'"]'	1247
'<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'	98
'\\s?["\']([a-zA-Z_"\'\\s\\d\\-\\.#=?!]+)["\']\\s+tset'	1215
'[\\w\\-][\\w\\-\\.]+@[\\w\\-][\\w\\-\\.]+[a-zA-Z]{1,4}'	117
'^\\# Regexp Chunk Parsing Grammar[\\s\\S]*F-score:.*\n'	1248
'(<[\\s]*script[^>]*>[\\s\\S]*?<\\/[\\s]*script[\\s]*>)'	168
'\\A[\t ]*([\\w\\.\\/]+)\\:(([0-9]+))?(\\:([0-9]+))?\\:?'	649
'WARN: [\\w.]+/\\w+/[0-9.]+[ab][0-9]+/.*release.* exists'	566
'(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'\\s*.*#\\s*.*define\\s.*SQLITE_VERSION\\W*"([\\d\\.]*)"'	1580
'^(?P<train>[\\w\\.]+)\\s*(\\,\\s*(?P<test>[\\w\\.]+))?$'	1488
'#\\s*wxGlade:\\s*([\\w:]+)::(\\w+) <event_handler>\\s*$'	602
'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'	1300
'(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'	119
'(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'	1192
'V \\[([\\w \\.]+)\\] \\(([\\d\\.]+) V/LSB\\) ([-\\d\\.]+)'	1192
'([\\w\\d_\\.\\-])+\\@(([\\w\\d\\-])+\\.)+([\\w\\d]{2,4})+'	1258
'ESXi (\\d)+\\.(\\d)+\\.(\\d)+ \\[Releasebuild-([\\d]+)\\]'	1381
'^http://www\\.google\\.com/calendar/embed\\?[\\w&;=\\%]+$'	761
'\\s+(?:public|static|private|final)[\\w\\s]*?(\\w+)\\s*\\('	407
'<img src="(http://images.craigslist.org/[\\S]*\\.jpg)" alt'	175
'(remote: )?([\\w\\s]+):\\s+(\\d+)% \\((\\d+)/(\\d+)\\)(.*)'	599
"([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"	1247
'^\\s+Table\\s+C.[0-9A-Za-z-]+\\s*[-]*\\s*([A-Z/\\s-]+)\\s*$'	1432
'^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'	602
'url\\([\\\'"]?([^\\s)]+\\.[a-z]+[\\?\\#\\d\\w]*)[\\\'"]?\\)'	1240
'(?P<cf>[\\S]+)+-(?P<tmp>tmp-)?[\\S]+-(?P<suffix>[a-zA-Z.]+)'	1057
'((?P<minutes>\\d[\\d.]*)mn)?\\s*((?P<seconds>\\d[\\d.]*)s)?'	962
'(?P<signal>[+-]?)(?P<relative>[\\d]?)(?P<weekday>[\\w]{2})$'	200
'([a-z]*) ([\\d-]+) - ([\\d-]+) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'	317
'((^|\\n)[^%]*?)(\\\\input|\\\\include)\\{([\\w /\\.\\-]+)\\}'	31
'<a href="(http://\\w+.craigslist.org/)"><b>([\\w ]+)</b></a>'	98
'^(?P<type>[\\w\\s*]+?)(?P<name>\\w+)(\\[(?P<array>\\d+)\\])?$'	533
"pretty-date'>on ([\\w]+ [\\d]+, [\\d]+ \\d+:\\d+)</abbr></h2>"	1181
'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=]?)\\s*(?P<value>.*)$'	1108
'\\<a(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</a\\>'	1247
'\\<i(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</i\\>'	1247
'\\<b(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</b\\>'	1247
'boost::statechart::transition<\\s*([\\w:]*)\\s*,\\s*(\\w*)\\s*>'	592
'<a href="(http://geo.craigslist.org/iso/us/\\w+)">([\\w ]+)</a>'	98
'((https?):((//)|(\\\\\\\\))+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)'	472
'(takes [\\w ]+ )(\\d+)[\\w ]*( arguments? \\()(\\d+)( given\\))'	1612
'\\s*(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'\\s?(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'	599
'<a href="/cgi-bin/personals.cgi\\?category=(\\w+)">([\\w ]+)</a>'	98
'\\[info\\] The current project is built against Scala ([\\d\\.]+)'	948
'^(\\s*)#\\s*begin\\s+wxGlade:\\s*([a-zA-Z_][\\w:]*?)::(\\w+)\\s*$'	602
".*Access denied for user '[\\w\\*\\!\\@\\#\\^\\&]*'@'[\\w\\.]*'.*"	772
'(?:[\\d]{1,3}(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3}))'	873
'<Latitude>([\\d\\-\\.]+)</Latitude>\\s*<Longitude>([\\d\\-\\.]+)<'	506
'(?P<asset>[\\w_.:/]+)(?:\\#(?P<defname>[\\w_]+))?(\\.(?P<ext>.*))'	1268
'((^|\\n)[^%]*?)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w,\\-]+)\\}'	31
".*Host '[\\w\\.]*' is not allowed to connect to this MySQL server.*"	772
'[\\s\\S]*root[\\s]*([\\d]+)[\\s]*(?:[\\w]*[\\s]*){6}/system/b2g/b2g'	1007
'timeleft: (?P<hours>[\\d]*):(?P<minutes>[\\d]*):(?P<seconds>[\\d]*)'	1205
'([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'.+ (?P<path1>[\\w/.]+(\\.cpp|\\.cxx|\\.c))(?P<path2>\\w+/[\\w/.]+).+'	498
'^=\\?(?P<charset>[\\w\\d\\-]+)\\?(?P<code>[qb])\\?(?P<value>.*)\\?=$'	1258
'\\<span(?P<a>( .+)?)\\>\\s+(?P<b>[\\w\\s\\(\\)\\/]+?)\\s+\\</span\\>'	1247
'^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'	624
u'^<html><a href="http://example.com/reset/[\\w/-]+/">Link</a></html>$'	1158
'(\\$[\\$\\(\\)]|\\$[_a-zA-Z][\\.\\w]*|\\${[^}]*}|\\s+|[^\\s\\$]+|\\$)'	743
'Copyright [\\d-]*200[8-9] the V8 project authors. All rights reserved.'	1300
'(\\w{1,4}\\s+\\d{1,2}\\s+\\d\\d:\\d\\d:\\d\\d)(\\s+[\\w\\d\\.\\/\\@]+)'	455
'([\\d\\.]*)user ([\\d\\.]*)system (\\d*):([\\d\\.]*)elapsed (\\d*)%CPU'	560
'(www\\.(?!\\.)|[a-z][a-z0-9+.-]*://)[^\\s<>\'\\"]+[^!,\\.\\s<>\\)\'\\"\\]]'	18
u'(?:[-*/%^&|<>!]=?|&&|\\|\\||<<|>>>|={1,3}|!==?)\\s*(?<!\\+)(\\+)[\\w(\\[]'	304
'@/(?P<a>\\w*)/(?P<c>\\w*)/(?P<f>\\w*(\\.\\w+)?)(/(?P<args>[\\w\\.\\-/]+))?'	1247
'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'	1263
'vertex\\s*([\\d\\-+\\.EeDd]+)\\s*([\\d\\-+\\.EeDd]+)\\s*([\\d\\-+\\.EeDd]+)'	208
'(\\d{4})-(\\d{2})-(\\d{2}) - (\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'	317
'<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'	98
'const boost::array\\<boost::array\\<T, (\\d+)\\>, (\\d+)\\> ([a-zA-Z_\\d]+)'	531
'(?P<file>[-/\\.\\w<>]+):((?P<line>\\d+):)?(\\d+:)? warning: (?P<msg>[^ ].*)$'	635
'^\\s*(.) (\\[?[\\w\\s\\.]+\\]?)\\s+(.+) -> ([/\\w_\\+\\.-]+)(\t \\(.*\\)?$)?'	599
'([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'	317
u'():\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(twitter).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'	1087
'[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'	1247
'[\\w\\W\\|\\-\\s]*/usr/bin/nova-guest --flagfile=/etc/nova/nova.conf[\\W\\w\\s]*'	772
'[\\w\\W\\|\\-\\s\\d,]*nova-guest --flagfile=/etc/nova/nova.conf nova[\\W\\w\\s]*'	772
'.*Video codec ([\\w-]+) width (\\d+) height (\\d+) profile (\\d+) fps ([\\d.]+).*'	1437
'(?P<link>(?:http(|s):\\/\\/)?(?:www.)?(facebook|fb).com\\/?)*(?P<nome>[\\w\\.\\-]*)'	1285
'(\'[^\']*\'|"[^"]*"|//?|\\(\\)|==?|[/.*\\[\\]\\(\\)@])|([^/\\[\\]\\(\\)@=\\s]+)|\\s+'	1621
'(\\d{4})-(\\d{2})-(\\d{2}) - (\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'((?:^[\\\'].*[\\\'])|(?:^[\\"].*[\\"]))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
'<[\\s]*script(?P<attributes>[^>]*)>[\\s]*(?P<data>[\\s\\S]*?)<\\/[\\s]*script[\\s]*>'	168
'\\s*[ur]{0,2}(?:"""[\\s\\S]*?"""|"[^"\n]+?"|\'\'\'[\\s\\S]*?\'\'\'|\'[^\'\n]+?\')\\s*'	1248
'^[\\s\\!|"|\\#|\\$|\\(|\\)|\\*|\\+|\\-|\\;|\\<|\\=|\\>|\\@|\\|\\^|\\`|\\{|\\||\\}|\\~]'	249
'([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'	317
'\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[^\\s"\\\'=<>`]*))?'	1580
'^class(\\s+[^\\s]*_EXPORT)?\\s+(vtk[A-Z0-9_][^ :\n]*)\\s*:\\s*public\\s+(vtk[^ \n\\{]*)'	557
'^(-{3}-*)(?::(?P<c>[a-zA-Z][_a-zA-Z\\-\\d]*)(?:\\[(?P<p>[a-zA-Z][_a-zA-Z\\-\\d]*)\\])?)?$'	1247
'Parent sees throughput for[\\s]+([\\d]+)\\s+([-\\w]+[-\\w\\s]*)\\=[\\s]+([\\d\\.]*) KB/sec'	560
'(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?'	1557
'Children see throughput for[\\s]+([\\d]+)\\s+([-\\w]+[-\\w\\s]*)\\=[\\s]+([\\d\\.]*) KB/sec'	560
'^([\\s>]*)([0-9]+),([0-9A-Fx]+)\\s+([A-Z][A-Z])\\s+([A-Za-z0-9.?(,)> -]+)\\s+([0-9n-]+)\\s*$'	1432
'(?P<table>[\\w\\-]+)\\.(?P<field>[\\w\\-]+)\\.(?P<uuidkey>[\\w\\-]+)\\.(?P<name>\\w+)\\.\\w+$'	1247
'(((?P<py>python)|(?P<fr>fakeroot))\\s*)*(?P<func>[\\w\\.\\-\\+\\{\\}\\$]+)?\\s*\\(\\s*\\)\\s*{$'	1143
'http://(?:www\\.)?redd(?:\\.it/|it\\.com/(?:tb|(?:r/[\\w\\.]+/)?comments)/)(\\w+)(/.+/)?(\\w{7})?'	1463
'^(?P<device>[\\S\\:]+)\\s+Link encap:(?P<link>(\\S+ ?\\S+))(\\s+HWaddr (?P<hwaddr>[0-9a-fA-F:]+))?'	826
'^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'	405
'^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$'	548
'((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(?![\\d])'	190
'((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'	1025
'/(?P<url>[\\w/]+)/(?P<resource_name>\\w+)/(?P<pk>\\d+)/(?P<child_resource_name>\\w+)/(?P<child_pk>\\d+)/?$'	1357
'((?<=[\\\'"\\s/])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*(\\\'[^\\\']*\\\'|"[^"]*"|(?![\\\'"])[^>\\s]*))?(?:\\s|/(?!>))*'	1580
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
'(?P<prefix>^[\\s]*)(?P<main>([\\*\\s]+(html|body)\\s+)?[a-zA-Z_\\.,#]+[\\sa-zA-Z_\\.,#\\{:]*)(?P<suffix>[^;]+)$'	31
'(?P<quantity>\\d[\\d.]*)+\\s*(?P<units>[GgMmKk]?(?P<multiplier_style>[Ii])?[Bb])?\\s*(?P<fraction>\\(\\d+%\\))?'	962
'\\s*(?P<name>[+\\w. -]+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$'	1580
'^.*VariadicOperatorMatcherFunc\\s*<\\s*([^,]+),\\s*([^\\s>]+)\\s*>\\s*\n              ([a-zA-Z]*)\\s*=\\s*{.*};$'	1244
'((?P<url>\\w{3,6}://\\S+)|(?P<email>[-+=%/\\w\\.]+@[\\w\\.\\-]+)|(?P<item>(?P<class>[A-Za-z_]+)(\\s*)(?P<id>\\d+)))'	43
'#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d\\.\\-]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'	873
'^(starting\\s+from\\s+page\\s+(?P<number>\\w+))?\\s*(using\\s+(?P<key>[\\"\\\'\\w]+))?\\s*(as\\s+(?P<var_name>\\w+))?$'	250
'^<([\\w\\-]+(?:\\:[\\w\\-]+)?)((?:\\s+[\\w\\-]+(?:\\s*=\\s*(?:(?:"[^"]*")|(?:\\\'[^\\\']*\\\')|[^>\\s]+))?)*)\\s*(\\/?)>'	407
'^(?:nfs://)?(?P<host>([a-zA-Z][\\w\\.^-]*|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}))(?::(?P<port>\\d*))?(?P<dir>/[\\w/]*)?$'	1543
'^<(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*\\/?\\s*>'	1025
"documentSelected\\(\\'(\\w*)\\',\\'([\\w\\d-]*)\\',\\'([\\w\\.\\-]*)\\',\\'([\\w\\d/]*)\\',\\'([\\w\\d]*)\\',\\'([\\w\\s]*)\\'"	182
'^GL_?API(CALL)?\\s+(?P<return>[\\w\\s*]+[\\w*])\\s+(GL)?_?APIENTRY\\s+(?P<name>\\w+)\\s*\\((?P<params>[\\w\\s(,*\\[\\])]+)\\)\\s*;'	533
'(?x)\n            xmin\\ =\\ (.*)[\\r\\n]+\n            xmax\\ =\\ (.*)[\\r\\n]+\n            [\\s\\S]+?size\\ =\\ (.*)[\\r\\n]+ \n'	1488
'^! (((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)(/(3[12]|[12]?[0-9])))[\\t\\s]+([^\\t]+)$'	735
'<(\\/?)(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[a-zA-Z:0-9]+|\\{[^{}]*\\})\\s*([a-zA-Z:0-9]+=(\\{[^{}]*\\}|"[^"]*"|\'[^\']*\')\\s*)*(\\/?)\\s*>'	1025
"<tr><td>([A-Za-z ]+)</td><td class='number'>\\$([\\d,]+)</td><td class='number'>\\$([\\d,]+)</td><td class='number'>\\$([\\d,]+)</td></tr>"	55
'(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\\d]+) (?P<parentrevspec>rev:revid:[-\\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$'	1218
"([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"	1247
'^https?://cdnsecakmi.kaltura.com/p/(?P<partner_id>[\\d]+)/sp/(?P<subp_id>[\\d]+)/flvclipper/entry_id/(?P<entry_id>[\\w]+)/version/0(?:/ext/flv)?'	856
u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'	1055
'^Line (?P<line>\\d+) of "(?P<filename>[\\w\\\\/\\.\\-+:]*)" starts at address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+> and ends at 0x[0-9a-f]+ <(?P<symend>[^+]+)(\\+\\d+)?>.'	108
'^(?P<filetype>.)(?P<perms>.{9})\\s+(?P<nlinks>\\d*)\\s*(?P<owner>\\S+)\\s+(?P<group>\\S+)\\s+(?P<size>\\d+)\\s+(?P<date>...\\s+\\d+\\s+[\\d:]+)\\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\\r]*))?\\r?$'	557
'((?:(?:(?:(?!-)(?:[\\w\\d-])*[A-Za-z](?:[\\w\\d-])*(?:(?<!-))){1,63})(?:(?:\\.)?(?:(?!-)[\\w\\d-]{1,63}(?<!-)))*|(?:[\\d]{1,3}(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3})(?:\\.[\\d]{1,3}))))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
"^([\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$"	1247
'^(((?P<first_page>\\w+)\\,)?(?P<per_page>\\w+)\\s+)?(?P<objects>\\w+)(\\s+starting\\s+from\\s+page\\s+(?P<number>\\w+))?(\\s+using\\s+(?P<key>[\\"\\\'\\w]+))?(\\s+with\\s+(?P<override_path>\\w+))?(\\s+as\\s+(?P<var_name>\\w+))?$'	250
'\\[(?P<escapeopen>\\[?)(?P<name>[\\w\\d\\_-]+)\\b(?P<arguments>[^\\]\\/]*(?:\\/(?!\\])[^\\]\\/]*)*?)(?:(?P<selfclosing>\\/)\\]|\\](?:(?P<content>[^\\[]*(?:\\[(?!\\/(?P=name)\\])[^\\[]*)*)\\[\\/(?P=name)\\])?)(?P<escapeclose>\\]?)'	934
'\n    PhysMem:\n    \\s*\n    (?P<wired>[\\d\\.MGK]+)\\s*wired,\n    \\s*\n    (?P<active>[\\d\\.MGK]+)\\s*active,\n    \\s*\n    (?P<inactive>[\\d\\.MGK]+)\\s*inactive,\n    \\s*\n    (?P<used>[\\d\\.MGK]+)\\s*used,\n    \\s*\n    (?P<free>[\\d\\.MGK]+)\\s*free\n    .*\n    '	1638
'^ ([\\w.]+\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	898
'^ ([\\w.]*\\.)?            # class name(s)\n          ([^\\s(]+)  \\s*         # thing name\n          (?: \\((.*)\\)           # optional: arguments\n           (?:\\s* -> \\s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          '	1551
'((?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::) :)|(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?: \\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))(?:\\:(\\d+))?(?:\\:([\\/\\\\w+.\\w+.\\-]+))?'	873
'^\n                                    \\s*\n                                    ((?:\\[+\\s*))\n                                    ((?:[a-z0-9:_\\.\\s,]*))\n                                    \\s*\n                                    ((?:\\]+))\\s*\n                                    (\\#.*)?\n                                    $'	1256
'\n    ep                  # Character Literals\n    (?:isode)?          # Junk group for optional character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    [\\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    [\\W_]               # non alphanum char\n    (?P<S>\\d)           # NG(S) grab 1 digit for season number\n    (?P<E>\\d{2})        # NG(E) grab 2 digits for episode number\n    [\\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
'\n    Load\\s*Avg:\n     \\s*\n    (?P<loadavg_one>[\\d\\.]+),\n    \\s*\n    (?P<loadavg_five>[\\d\\.]+),\n    \\s*\n    (?P<loadavg_ten>[\\d\\.]+)\n    \\s*\n    CPU\\s*usage:\n    \\s*\n    (?P<usercpu_percent>[\\d\\.]+)%\n    \\s*\n    user,\n    \\s*\n    (?P<syscpu_percent>[\\d\\.]+)%\n    \\s*\n    sys,\n    \\s*\n    (?P<idlecpu_percent>[\\d\\.]+)%\n    .*\n    '	1638
'^(?P<exception>sqlite)://:memory:$|\n                     ^(?P<driver>\\w+?)://  # driver\n                     (?:(?:(?P<user>\\w+?)(?::(?P<password>\\w+?))?@)?  # user and password pattern\n                     (?:(?P<host>[\\w\\.]+?)(?::(?P<port>\\d+))?/|(?P<unix_socket>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*):)  # host patterns\n                     (?P<dbname>\\w+)|(?P<path>/(?:\\.?\\w+?(?:[\\.\\-]\\w+)*/)*?\\.?\\w+(?:[\\.\\-]\\w+)*))$ # database patterns'	648
'\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    season              # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<S>\\d{1,2})      # NG(S) capturing 1/2 digits for season no\n    [\\W_]?              # Optional non alphanum char\n    episode             # Character literals\n    [\\W_]?              # Optional non alphanum char\n    (?P<E>\\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name'	817
"((?<=\\()[A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|([A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)|\\bmailto:\\S*[^\\s\\W]|\\b\\S+@\\S+\\.\\S*[^\\s\\W]|((?<=\\()(www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|((www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)"	18
'  \n    (?P<SN>.*?)         # Named Group (SN) non greedily capturing show name\n    s                   # Letter S representing season\n    (?P<S>\\d{1,2})      # Named Group (S) capturing 1/2 digits for season no\n    [\\W_]?              # Single Optional Non Alpha-Num char\n    e                   # Letter E representing Episode\n    (?P<E>\\d{1,2})      # Named Group (E) Capturing 1/2 digits for episode no\n    [\\W_]*?             # Non greedy optional Non Alpha-Num char\n    (?P<EN>.*)          # Named Group (EN) greedily trying to grab episode name'	817
'\n        # Include these so we can skip them:\n        (?P<COMMENT>        <!--.*?-->                          )|\n        (?P<CDATA>          <![CDATA[.*?]]>                     )|\n        (?P<PI>             <\\?.*?\\?>                           )|\n        (?P<DOCTYPE>        <!DOCTYPE\\s+[^\\[]*(\\[[^\\]]*])?\\s*>  )|\n        # These are the ones we actually care about:\n        (?P<EMPTY_ELT_TAG>  <\\s*[^>/\\?!\\s][^>]*/\\s*>            )|\n        (?P<START_TAG>      <\\s*[^>/\\?!\\s][^>]*>                )|\n        (?P<END_TAG>        <\\s*/[^>/\\?!\\s][^>]*>               )'	1248
'\n                 (?x)( # verbose identify URLs within text\n     (http|ftp|gopher) # make sure we find a resource type\n                   :// # ...needs to be followed by colon-slash-slash\n        (\\w+[:.]?){2,} # at least two domain groups, e.g. (gnosis.)(cx)\n                  (/?| # could be just the domain name (maybe w/ slash)\n            [^ \\n\\r"]+ # or stuff then space, newline, tab, quote\n                [\\w/]) # resource name ends in alphanumeric or slash\n     (?=[\\s\\.,>)\'"\\]]) # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
'\n                (?xm)  # verbose identify URLs in text (and multiline)\n             (?=^.{11} # Mail header matcher\n     (?<!Message-ID:|  # rule out Message-ID\'s as best possible\n        In-Reply-To))  # ...and also In-Reply-To\n               (.*?)(  # must grab to email to allow prior lookbehind\n   ([A-Za-z0-9-]+\\.)?  # maybe an initial part: DAVID.mertz@gnosis.cx\n        [A-Za-z0-9-]+  # definitely some local user: MERTZ@gnosis.cx\n                    @  # ...needs an at sign in the middle\n         (\\w+\\.?){2,}  # at least two domain groups, e.g. (gnosis.)(cx)\n    (?=[\\s\\.,>)\'"\\]])  # assert: followed by white or clause ending\n                     ) # end of match group\n                       '	962
"\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "	1247
