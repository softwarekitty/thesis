Uc nPatterns: 215 nProjects: 235
'^(\\s*def\\s)|(.*(?<!\\w)lambda(:|\\s))|^(\\s*@)'	12,287,381,412,422,602,747,759,807,852,961,992,1054,1087,1104,1221,1257,1386,1415,1469,1509,1511,1517,1536,1580
'^#define\\s{1,}(\\w{1,}_H)\\s{1,}<(.*)>'	412,533,587,618,759,793,818,852,896,961,1007,1015,1032,1080,1172,1221,1266,1296,1428,1493,1511
'^\\s*(?:var)?char\\s*\\(\\s*(\\d+)\\s*\\)\\s*$'	82,89,302,323,355,422,849,866,878,923,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'\\sCONSTRAINT `[^`]*` FOREIGN KEY \\(`([^`]*)`\\) REFERENCES `([^`]*)` \\(`([^`]*)`\\)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517,1580,1634
'\\.models$'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1184,1495,1517,1580,1634
'/\\*.*?\\*/'	113,147,181,306,322,464,467,505,534,753,768,825,942,1007,1025,1322,1404,1466,1522
'^(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"^(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
"^'''(.*?)'''\\s*(#.*)?$"	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^"""(.*?)"""\\s*(#.*)?$'	119,332,436,602,642,689,730,747,927,971,1003,1007,1015,1032,1203,1256,1269,1498
'^\\s*blocktrans(?:\\s+|$)'	82,89,302,323,355,422,849,866,878,1004,1012,1074,1075,1086,1158,1184,1495,1517
'^running .*'	251,422,662,800,1033,1104,1188,1257,1263,1290,1386,1415,1517,1536,1580,1594,1634
'^[ \t]*#define[ \t]+FT_COMPONENT[ \t]+trace_'	533,587,618,793,818,1007,1015,1032,1080,1172,1266,1296,1428,1493
'cygwin.*'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\$IN\\b'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\$OUT\\b'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'raise\\s+\\w+\\s*(,)'	150,304,640,662,842,851,945,1054,1147,1199,1322,1505,1561
'^#!.*python[0-9.]*([ \t].*)?$'	12,287,412,602,759,852,961,1054,1087,1221,1509,1511,1580
'\\$if\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\$for\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\$var\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\$elif\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\$else\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'unsigned int'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\$range\\s+'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'^\\s*#\\s*include\\s*"(src/.+)"'	416,592,852,896,994,1007,1301,1403,1511,1560,1598
'\\beval\\s*\\('	306,322,464,467,505,534,1007,1300,1404,1466
'#define ([A-Z][A-Za-z0-9_]+) (.*)\n'	12,287,602,1054,1087,1263,1290,1509,1580,1594
'/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n'	12,287,602,1054,1087,1263,1290,1509,1580,1594
'^[\t ]*#[\t ]*include[\t ]+<([a-zA-Z0-9_/\\.]+)'	12,412,759,852,961,1054,1087,1221,1511,1580
'^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'	12,412,759,852,961,1054,1087,1221,1511,1580
'^[ \t]*(def|class)[ \t]+([a-zA-Z0-9_]+)[ \t]*[:\\(]'	12,412,759,852,961,1054,1087,1221,1511,1580
'^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'	12,412,759,852,961,1054,1087,1221,1511,1580
'^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)\\(([_a-zA-Z][_a-zA-Z0-9]*)\\)[\t ]+'	12,412,759,852,961,1054,1087,1221,1511,1580
'var '	306,322,464,467,505,534,1007,1404,1466
'cc_(.*)$'	308,322,389,467,505,534,743,1216,1466
'init\\((.*)\\):'	12,101,412,759,852,961,1087,1221,1511
'/\\.(?![^.]*$)/'	45,59,151,164,238,371,1345,1507,1516
'#include +"[^/]+\\.h"'	322,416,467,505,534,1199,1300,1404,1466
'#define\\s+ETS_VER\\s+([0-9]+)'	308,322,389,467,505,534,743,1216,1466
'(import|from)\\s+markupsafe\\b'	251,252,1087,1104,1257,1386,1469,1495,1536
'\\\\end{(?:long)?table([iv]+)}'	12,412,759,852,961,1054,1087,1221,1511
'\\s*def\\s+(t_[a-zA-Z_0-9]*)\\('	225,256,635,689,1007,1015,1032,1143,1543
'^_imp__(.*) in python\\d+\\.dll'	12,412,759,852,961,1087,1221,1511,1580
'\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('	225,256,689,757,1007,1015,1032,1143,1543
'\\\\begin{(?:long)?table([iv]+)}'	12,412,759,852,961,1054,1087,1221,1511
'(\\\\*)(\\(\\?P<[^>]*>|\\((?!\\?))'	317,559,921,1047,1095,1234,1277,1580,1592
'#define\\WDB_VERSION_MINOR\\W(\\d+)'	12,412,759,852,961,1087,1221,1511,1580
'#define\\WDB_VERSION_MAJOR\\W(\\d+)'	12,412,759,852,961,1087,1221,1511,1580
'\\\\(begin|end){([_a-zA-Z]+)}|([()\\[\\]])'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#\\s*include\\s*([<"])([^>"]*)[>"].*$'	322,416,467,505,534,1199,1300,1404,1466
'(^|\\n)(?P<level>#{1,6})(?P<header>.*?)#*(\\n|$)'	236,247,552,606,919,1007,1223,1395,1420
'\\\\(ABC|ASCII|C|Cpp|EOF|infinity|NULL|plusminus|POSIX|UNIX)\\s'	12,412,759,852,961,1054,1087,1221,1511
'^\\s*#?\\s*end\\s+(?P<kw>[a-z]+)(\\s+(?P<id>[a-zA-Z_]\\w*))?[^\\w]'	12,412,759,852,961,1054,1087,1221,1511
'"(.*)".*PRIMARY KEY$'	302,849,878,1012,1086,1495,1580,1634
'\\{%\\s*if\\s*.*?%\\}'	113,147,181,251,498,1087,1267,1555
'\\{if\\s+.*?\\}.*?\\{/if\\}'	113,147,181,251,498,1087,1267,1555
'^\\s*#\\s*include\\s*"(gtest/.+)"'	416,852,994,1007,1301,1511,1560,1598
'#s*define\\s+HASHVERSION\\s+2\\s*'	12,412,759,852,961,1087,1221,1511
'#s*define\\s+WITH_LIBINTL\\s+1\\s*'	12,412,759,852,961,1087,1221,1511
'\\s*def\\s*([_\\w][_\\w\\d]*)\\s*\\('	422,462,690,747,1119,1469,1517,1580
'\\{foreach\\s+.*?\\}.*?\\{/foreach\\}'	113,147,181,251,498,1087,1267,1555
'#define[ \t]+([A-Z0-9a-z_]+)[ \t]+([0-9]+)[ \t]*/\\*[ \t]*(.*)[ \t]*\\*/'	12,412,759,852,961,1087,1221,1511
'\\\\EOF\\b'	12,412,759,852,961,1221,1511
'\\\\ABC\\b'	12,412,759,852,961,1221,1511
'\\\\Cpp\\b'	12,412,759,852,961,1221,1511
'\\\\NULL\\b'	12,412,759,852,961,1221,1511
'\\\\UNIX\\b'	12,412,759,852,961,1221,1511
'\\\\POSIX\\b'	12,412,759,852,961,1221,1511
'\\\\ASCII\\b'	12,412,759,852,961,1221,1511
'[\\\\]end{([^}]*)}'	12,412,759,852,961,1221,1511
'[\\\\]begin{([^}]*)}'	12,412,759,852,961,1221,1511
'\\\\raisebox\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'\\\\hackscore\\s*{[^}]*}'	12,412,759,852,961,1221,1511
'[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'	12,412,759,852,961,1221,1511
'  \\\\item (.*) [(](.*)[)]((?:(?:, \\d+)|(?:, \\\\[a-z]*\\{\\d+\\}))+)'	12,412,759,852,961,1221,1511
'^[ \t]*(#|%:)[ \t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[ \t]*(.*)\r*$'	322,467,505,534,712,1216,1466
'^lib'	322,467,505,534,1216,1466
'\\\\n'	422,602,747,1054,1517,1580
'\\\\\\n'	251,1007,1015,1032,1087,1264
'\\r[ \\t]+def '	412,759,852,961,1221,1511
'^(def|class)\\s+'	167,468,640,659,703,1322
'import\\s+([^;]+)'	322,467,505,534,1216,1466
'module\\s+([^;]+)'	322,467,505,534,1216,1466
'^\\?P<(\\w+)>(.*?)$'	82,89,1004,1074,1075,1495
'\\$\\{([\\w\\-]+)\\}'	305,407,1025,1322,1326,1505
'\\s*else\\s*:\\s*(#|$)'	560,562,594,1087,1115,1248
'return.*[ \\(]..._FAILURE'	412,759,852,961,1221,1511
'%module(?:\\s*\\(.*\\))?\\s+(.+)'	322,467,505,534,743,1466
'#define ([A-Z][A-Z0-9_]+) (.*)\n'	412,759,852,961,1221,1511
'/[*] #undef ([A-Z][A-Z0-9_]+) [*]/\n'	412,759,852,961,1221,1511
'^#import[\\s\t]*([^\\s^\t]*)[\\s\t]*$'	546,830,1028,1039,1223,1420
'^[ \t]*(#|%:)[ \t]*(include)[ \t]*(.*)\r*$'	294,322,467,505,534,1466
'(?<!\\\\)<%(?:(#)|(py(?:thon)?\\b)|(?:\\s*(\\w+))\\s*)(.*?)\\s*%>\\n?(?s)'	992,1104,1257,1386,1469,1536
'_REGEXP_'	467,505,534,1404,1466
'.*\\.__.*?__'	422,602,747,1517,1580
'#\\s*random\\s+'	422,602,747,1517,1580
'#define NODE_PATCH_VERSION'	322,467,505,534,1466
'#define NODE_MAJOR_VERSION'	322,467,505,534,1466
'#define NODE_MINOR_VERSION'	322,467,505,534,1466
'^#define\\s+(\\w+)\\s+(\\d+)$'	101,602,1054,1087,1580
'^\\s+raise|^\\s+return|^\\s+pass'	422,602,747,1517,1580
'raise\\s+\\w+\\s*,\\s*\\w+\\s*,\\s*\\w+'	640,945,1025,1322,1505
'class (\\w[^\\s:]*)(: public (\\w[^\\s{]*))?\\s*{'	467,505,534,1404,1466
'^\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	356,436,538,1247,1288
'(halt|quit|do|load|q|recycle|call|run|ask|parse|view|unview|return|exit|break)$'	251,498,1087,1267,1555
'^.*::'	305,1025,1138,1505
'^/([^/])/'	460,1025,1322,1505
'^(\\s*)(def .+:|class .+:)'	498,633,958,1235
'(exit|quit)(\\s*\\(.*\\))?$'	422,747,1517,1580
'(?<!\\\\)((\\\\\\\\)*)\\\\n'	147,162,181,1087
'^\\s*(import |from .+ import)'	498,633,958,1235
'#define __NR_(\\w*)\\s*([0-9]*)'	523,946,1116,1484
'#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
'^\\s*(else|elif|except|finally).*\\:'	433,927,1003,1202
'#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'	251,498,1087,1555
'#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'	251,498,1087,1555
'^\\s*(def|class|else|elif|except|finally)'	433,927,1003,1202
'#define __NR_(\\w*)\\s*\\(__NR_timer_create\\+(\\w*)\\)'	523,946,1116,1484
'#define __ARM_NR_(\\w*)\\s*\\(__ARM_NR_BASE\\+\\s*(\\w*)\\)'	523,946,1116,1484
'#define __NR_(\\w*)\\s*\\(__NR_SYSCALL_BASE\\+\\s*(\\w*)\\)'	523,946,1116,1484
'^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'	119,1007,1015,1032
'else[ \\f\\t]+if'	53,171,1381
'\\\\?(gettext|_)\\('	252,1087,1495
'\\s*define|\\s*endef'	1007,1015,1032
'^[ \t]*import[ \t]+([^#]+)'	12,1054,1087
'return code \\[([0-9]+)\\]'	1007,1015,1032
'^(\\s*)(def|class)(\\s.*)?$'	498,633,1235
'^#define ([A-Z]+)\\s+(\\d+)$'	462,690,1119
'(?P<class>OpenLayers\\..*?)\\('	60,881,928
'\\s*\\#\\s*include\\s+<cxxtest/'	0,139,785
'^\\s*#\\s*include\\s*<(gtest/.+)>'	592,896,1403
'function (?:\\s|.)*?end function.*'	531,832,846
'.*public static final class id {.*'	1007,1015,1032
'#define\\WDB_VERSION_PATCH\\W(\\d+)'	12,1087,1580
'^#define ASYNC_PROTOCOL_MAJOR\t*(.*)'	515,1245,1373
'^#define.*ENGINE_VERSION\t*"DOOM (.*)"'	515,1245,1373
'subroutine (?:\\s|.)*?end subroutine.*'	531,832,846
'(\\s*def\\s+\\w+\\s*)\\[(html|plain)\\](.*)'	498,602,1495
'^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'	557,1223,1420
'(subroutine|function)\\s*(?P<name>\\w+)\\s*\\('	531,832,846
'^\\s*(?:(?:else )?if|for|switch|while|with)(\\()'	304,1025,1322
'\\s*function\\s*(?P<name>[a-zA-Z_$]\\w*)?\\(.*\\)\\s*\\{?'	304,1025,1322
'^[ \t]+def +[a-zA-Z0-9_]+ *( *self *, *(( *(.*) *)) *) *:'	12,1054,1087
'^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'	12,1087,1580
'^([^/]|/[^/])*\\bvoid\\s+([Tt]est\\w+)\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'\\bstatic\\s+\\w+\\s*\\*\\s*createSuite\\s*\\(\\s*(void)?\\s*\\)'	0,139,785
'^\\s*(?:@outlet\\s+)?[a-zA-Z_$]\\w*\\s+[a-zA-Z_$]\\w*\\s+@accessors\\b'	304,1025,1322
'\\bstatic\\s+void\\s+destroySuite\\s*\\(\\s*\\w+\\s*\\*\\s*\\w*\\s*\\)'	0,139,785
'^\\s*blocktrans(\\s+.*context\\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?(?:\\s+|$)'	849,878,1634
'\\bclass\\s+(\\w+)\\s*:\\s*public\\s+((::)?\\s*CxxTest\\s*::\\s*)?TestSuite\\b'	0,139,785
'\\b(std\\s*::|CXXTEST_STD|using\\s+namespace\\s+std\\b|^\\s*\\#\\s*include\\s+<[a-z0-9]+>)'	0,139,785
'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(\\{)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	304,1025,1322
'(?x)\n        \\s*((continue|do|for|function|if|else|return|switch|while|with)\\b|\\[+\\s*[a-zA-Z_$]\\w*\\s+[a-zA-Z_$]\\w*\\s*[:\\]])\n    '	304,1025,1322
'{\\w+}'	622,950
'__.*__'	640,662
'\\\\[ntrab]'	52,597
'class (\\w+)'	422,1644
'^#include\\s'	1007,1301
'Vector<(.+)>'	896,1300
'import django'	296,819
'^initialize\\('	305,1505
'request\\.module'	337,1112
'\\\\(t|n|r|"|\\\\)'	55,908
'import (?P<name>.*)'	602,1054
'varchar\\((\\d+)\\)'	422,1644
'class[ \t]+\\w+.*?:'	498,1495
'(const)?\\s*double$'	241,1249
'from django.*import'	296,819
'def[ \t]+\\w+\\(.*?\\)'	498,1495
'#define\\sSET_(\\S*)\\('	533,1117
'.. include:: (.+?)\\s*$'	274,573
'^\\s*from flask import\\s+'	337,1112
'^\\s*(if|try|elif|while|for)'	433,1003
'(?<!\\\\)/.*?[^\\\\]/[gims]*'	1025,1322
'^(?:if |elif |else |for |py:)'	46,1050
"(<module 'epydoc_test' from ).*"	757,1087
'#define NODE_VERSION_IS_RELEASE'	534,1466
'^\\s*#\\s*include\\s*"(gmock/.+)"'	1007,1301
'^\\s*(if|try|elif|while|for|with)'	927,1202
'\\\\usepackage(\\[.*?\\])?{(.*?)}'	757,1087
'(^TypeError:.* return an int.*){2}'	12,1087
'^(\\s+\\(in-module\\s+)(\\w+)(.*)$'	1054,1198
'\\A@charset "(?P<encoding>[\\w-]+)";'	305,1505
'^\\s*(typedef|struct|static)\\s+.*?$'	241,1249
'#define\\s+ZLIB_VERSION\\s+"([^"]*)"'	441,628
'%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'	308,1216
'\\{\\%[ \\t]+\\b(block|if)\\b.*?\\%\\}'	305,1505
'(\\s*#include\\s+<)(.*?\\.hpp)?(>\\s*)?'	241,1249
'(?P<def>\\w+)(?P<space>\\s+)(?P<name>\\w+)'	757,1087
'(const)?.*::basic_string<.*>\\s*(\\*|\\&)?$'	241,1249
'^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'	1054,1198
'^\\s*(>>> )?(\\.\\.\\. )?from .* import .*\\*'	518,787
'^#(ifndef|define|endif\\s*//)\\s*[\\w_]+\\s*$'	1007,1301
'^(?:if |elif |for |def |inherit |default |py:)'	1469,1621
'\\s*.*#\\s*.*define\\s.*SQLITE_VERSION\\W*"(.*)"'	12,1087
'^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'	305,1505
'^\\s*\\.\\.\\s+automodule::\\s*([A-Za-z0-9_.]+)\\s*$'	251,1087
'\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'	1087,1580
'(const)\\s+((unsigned|signed)?(bool|char|short|int|long))'	241,1249
'^\\s*\\.\\.\\s+(current)?module::\\s*([a-zA-Z0-9_.]+)\\s*$'	251,1087
'^\\s*(>>> )?(\\.\\.\\. )?raise((\\s*\\(\\s*)|\\s+)\\w+\\s*,'	518,787
'\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'	1054,1198
'(?P<title>.+) (\\((class in )?(?P<id>[\\w\\.]+)( (?P<descr>\\w+))?\\))$'	251,1087
'^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'	518,787
'^\\\\(section|subsection|subsubsection|paragraph|subparagraph){(numpy|scipy)\\.'	531,832
'(require|define)\\s*\\(\\s*([\\\'\\"][^\\\'\\"]+[\\\'\\"]\\s*,)?\\s*\\[([^\\]]+)\\]'	247,1007
'^class ([^,]*), addr (\\d\\d:\\d\\d.\\d+), pci id (\\w{4}:\\w{4}) \\(sub (\\w{4}:\\w{4})\\)'	1317,1501
"((?P<prefix>[$@%\\\\*&]+)\\s*)?(?P<scope>(::)?\\b((?!\\d)\\w*?(::|'))*)(?P<name>(?!\\d)\\w+)$"	305,1505
'\\\\(\\\'|\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3}|u[0-9a-fA-F]{0,4}|U[0-9a-fA-F]{0,8}|N\\{.+?\\})'	251,1087
'(abstract[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?function[ \t]+?\\w+\\(.*?\\)'	498,1495
'^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'	305,1505
'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\(.+\\)\\s*(?:[\\w_]|\\[).+(;)\\s*(?://.*|/\\*.*\\*/\\s*)?$'	1025,1322
'^\\s*(?:(?:else )?if|for|switch|while|with)\\s*\\((\\s+)?.+?(\\s+)?\\)\\s*(?:(?:\\{|//.*|/\\*.*\\*/)\\s*)?$'	1025,1322
'((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'	498,1495
